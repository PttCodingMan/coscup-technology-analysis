以往要近幾年來 (e)BPF 技術在網路、程式追蹤 (tracing)、系統安全等領域展露頭角。它翻轉了原本自訂 Linux 核心行爲很困難這件事，把它一下子變得簡單許多。其中一大原因就是跟傳統的做法（寫 Linux 核心模組）相比，(e)BPF 不會造成系統當機或也不用擔心它導致系統安全問題，而這大部分都要歸功於 Linux 核心裡內建的驗證邏輯。
然而 Linux 核心到底如何驗證 (e)BPF 程式的呢？就讓我們來一窺究竟吧！
&nbsp;
<small>想聽這個演講**不需要對 Linux Kernel 有深度認識，但因爲需要看程式碼、所以需要對 C 語言有基本的理解**（如果你用 bcc 或 libbpf 寫過 BPF 程式那基本上就夠了），例如需要知道 control-flow (e.g. if-else, while, for), array, struct, function, pointer 等概念。如果另外還知道一點組合語言或計算機概論那會更有幫助、但並不是必須。</small>
<small>不管只是單純對 BPF 有興趣、BPF 程式開發者及使用者或是資安研究者都歡迎來聽。</small>
(e)BPF (以下都叫它 BPF) 是個內建在 Linux 核心裡的虛擬機器，它讓使用者可以借由自訂的程式去控制核心的行爲，同時又不用擔心自訂的程式寫不好而導致系統當機的問題，也因此在網路、程式追蹤 (tracing)、系統安全等比較需要自訂行爲的領域中被大量使用。
這一切之所以能成功很大一部分歸功 Linux 核心對於 BPF 程式在執行前的驗證，而這也是這次所想討論的：
- BPF 虛擬機器及其指令
- 型別及數值追蹤
- 檢查
    - BPF 指令
    - 未初始化數值
    - 越界存取
    - 核心指標洩漏
想聽這個演講**不需要對 Linux Kernel 有深度認識，但因爲需要看程式碼、所以需要對 C 語言有基本的理解**（如果你用 bcc 或 libbpf 寫過 BPF 程式那基本上就夠了），例如需要知道 control-flow (e.g. if-else, while, for), array, struct, function, pointer 等概念。如果另外還知道一點組合語言或計算機概論那會更有幫助、但並不是必須。
不管只是單純對 BPF 有興趣、BPF 程式開發者及使用者或是資安研究者都歡迎來聽。
=======
Sociably.js 是在社群平台上打造 UI 的程式框架，透過將 chatbot、社群媒體、Web App 整合在一起，我們能做出不輸給傳統 App 的功能和體驗。
但這次先放下技術，想與大家探討 chatbot 為什麼不如預期？而 Sociably 用哪些全新的機制扭轉這些劣勢，並讓開發者能在在社群時代裡，提供無可取代的價值給社群媒體的使用者。
Sociably.js
GitHub: https://github.com/machinat/sociably
Twitter: https://twitter.com/Sociablyjs
=======
Kernel Mode Linux (KML) 這樣技術是將使用者應用程式跑在核心模式下，而此項技術能大幅縮減系統呼叫所帶來的延遲，在對延遲有較高需求的應用環境下，會有很大的幫助。
將 KML 移植到較現代的熱門硬體 Raspberry Pi 4B+，Linux Kernel 版本從 v4.4 到 v5.15，硬體架構也從 ARMv7 到 ARMv8，而此演講會涵蓋，修改時的一些知識探討，和在現代的核心及系統架構下，KML 的效能提升及實用性討論。
Kernel Mode Linux (KML) 這樣技術是將使用者應用程式跑在核心模式下，而此項技術能大幅縮減系統呼叫所帶來的延遲，在對延遲有較高需求的應用環境下，會有很大的幫助。
將 KML 移植到現代的熱門硬體 Raspberry Pi 4B+，Linux Kernel 版本從 v4.4 到 v5.15，硬體架構也從 ARMv7 到 ARMv8，而此演講會涵蓋，修改時的一些知識探討，和在現代的核心及系統架構下，KML 的效能提升及實用性討論。
=======
了解 (Know)、使用 (Use) Open Source 是現在在科技業界常見的生存手段，但這其實讓你跟其他人沒有什麼不同，差異在哪裡？是貢獻 (Contribute)，光是這樣的回饋思維就可以讓你在很多職涯發展上，會顯露出很大的亮點，本演講將會以自身經驗給大家分享一下你獲得了什麼和失去了什麼
講者工作職業成長歷經 Edge Core Network、Red Hat、VMware，除了台外商以外，職涯也橫跨了不同的專業領域，但如何保有這樣的工作彈性和思維，其實不外乎就是靠著 OpenSource 和分享而成的，希望能透過短短的分享能夠帶給後進朋友參考借鏡
=======
pgpool-II為PostgreSQL Middleware，在此議程除了介紹外，也會說明相關應用，例如負載平衡，DB連線管理。
=======
A lightning talk is a very short presentation lasting only a few minutes, given at the end of the conference every year. Topics and speakers will be determined and announced in place!
名單如下：
- 《MOPCON, MO孃與他的夥伴》- Jason 
- 《一個新鍵帽設計》- Sail
- 《透過 HAProxy agent 解決 K8s 維護難題》- Jeff
- 《虛擬農夫》- 黃檸
- 《開源粉圓體的現在、過去與未來》- 千秋
- 《PyCon APAC 2022 工商時間》- Rex Wu
- 《Redeem Protocol with Redeemable NFT》- Kai
- 《OSCVPass 介紹》- 葉子
- 《來玩 Raycast: 你的下一個 Launcher: YuKai》- Yukai
- 《如何把設計帶入敏捷開發團隊？》- tntchn（談）
You can submit your proposal on site!
=======
本次演講將對 Linux 上的兩種圖形系統 X11 和 Wayland 的設計、異同與優劣做介紹。
當今 Linux 上的圖形系統正處在 X11 與 Wayland 的過渡階段。  X11 歷史悠久，實現完整，設計穩定，但是存在許多因為時代原因留下的設計缺陷；與之相對的，Wayland 從一開始就力圖解決 X11 架構設計缺陷造成的問題，但是卻因為發明較晚存在兼容性問題，因為意見不統一存在碎片化問題。
=======
Google Cloud AutoML 的理念，是提供開發人員在不需要有太多高深 AI/ML 的背景知識之下，也能輕鬆訓練出高品質自訂機器學習模型。
如此一來在對於非結構化資料（例如：影像）的機器學習應用上變得更加容易。簡單易用的流程對於不熟後端系統的資料工程師或資料科學家也特別平易近人。
但實際上大家都說「人工智慧之前需要有工人智慧」，，事實上真的是這樣嗎？AutoML 到底能不能改善這件事情？
讓我們用一個實際的例子利用 AutoML Vision + Firebase 來實際走過一次，打造一個物件辨識的系統。
=======
Extended BPF (eBPF) 是實現軟體定義網路 (SDN) 技術的一種新型方式，提供強大的能力別且催生了網路、觀測性能及安全技術行業。在過去的幾年裡，有非常多技術可以驅動 SDN，例如內核網路中的 netfilter、使用 OpenFlow 的 Open vSwitch 以及來自用戶空間的封包處理。本演講將從 SDN 的背景開始，簡要介紹 eXpress Data Path(XDP) 和 eBPF 並將這些技術應用於容器網路。
Extended BPF (eBPF) is a new type of implementation to achieve  Software-defined networking(SDN) technique that provides superpower capabilities, birthing an industry of networking, observing performance, and security technologies. For the past years, there were so many techniques to drive SDN, such as Netfilter in kernel networking, Open vSwitch with OpenFlow, and packet processing from user space. This talk will introduce eBPF as a novel SDN technique starting with the background of the SDN, a brief introduction to eXpress Data Path(XDP) and eBPF, and applying those techniques with container networking.
=======
每次重裝開發環都像是一場惡夢嗎？使用 Arm 架構的處理器舊 Ruby 專案跑不起來嗎？也使用 Docker 開發的時機到了
每一次想要把專案跑起來總是會遇到各種問題，這些專案環境建置的耗損，除了時間成本以外心靈的層面更是一場災難。如果你也是使用蘋果 M1 晶片的電腦，更是會遇到一籮筐的開發環境問題。也許我們該試試使用 Docker 了。這次想分享如何使用 Docker 建置 Ruby 的開發環境，別再將時間花在怎麼解決環境建置的各種神奇問題上。
=======
fold、map、filter 等操作常被視為 Functional Programming 的招牌特色，
但有這些操作跟 FP 到底有什麼關係？他們只能被定義在 List 上嗎？你知道其實幾乎什麼 datatype 都有一個 fold 可以用，而且還有辦法用 polymorphism 表示嗎？
我想跟大家分享：
* 什麼是 Datatype-generic Programming
* Datatype-generic Programming 的好處，如程式碼重用跟正確性
* 有些被當做 Design Pattern 的東西其實不是 Pattern，而是能寫下來的程式結構
* 我對各種語言的「FP 風味」設計的看法
主要會從 Haskell 討論再延伸到其他語言
=======
Marmot RISC-V SoC leveraging open source ISA, IP, process development kit, and EDA tools
=======
在前端工具百花齊放的時代，擁有完善的型別系統和 OCaml 語言特性的 ReScript 獨樹一格，這次將跟大家分享三年來使用 ReScript 作為公司前端主要開發語言的心路歷程
=======
「在台上演講的都是大大啊！」這是許多台灣人在研討會的心聲 :)
本議題將分享講者自身於國內外近三十場的資安會議投稿演講經驗，分享如何從前期投稿到完美完成演講的心路歷程：包括了如何有效率的前期選題、研究方法、寫出讓審稿委員理解且認同的投稿內容與跨國投稿心靈雞湯等。希望本場議程能鼓舞更多與會者跨出投稿的第一步，分享自己研究的成果、成為上台演講的大大！
=======
ClickHouse 是近年愈來愈熱門的 column-oriented 資料庫。本場演講將分析其儲存引撆與 table engine 相關的源碼，來說明 ClickHouse 是如何實作 column-oriented 儲存方式，以及其它增加查詢效率的設計。
ClickHouse 是近年愈來愈熱門的 column-oriented 資料庫。為什麼 column-oriented 的儲存引撆，對於 OLAP 形式的查詢特別有效率呢？這在許多文章與 ClickHouse 自己的[官網](https://clickhouse.com/docs/en/intro#why-column-oriented-databases-work-better-in-the-olap-scenario)都有清楚說明。但是要真的搞清楚 ClickHouse 做的許多加快查詢的功能，以及為什麼它所支援的 SQL 語法有些特殊的限制，還是大略瞭解它的源碼架構會比較有幫助。
=======
現代軟體開發對於品質跟速度的要求越來越高，然而當我們開始一個全新專案的時候，總是難以很好的兼顧這些問題，這場演講將會分享如何實踐。
在軟體開發中，很多時候我們沒辦法快速地進行迭代有非常多的原因。其中一個就是我們很難快速的驗證專案是否可行，在現代軟體開發中我們會採用持續整合、持續部署這類方式來改善這個問題，然而要搭建完善的流程確是一個不容易的過程。
這場演講將會分享如何快速的搭建一個對 Ruby 專案進行自動化的靜態分析、測試、部署，讓我們能專注在開發的流程上，進而更快速對軟體功能進行迭代。
=======
介绍国内在开源标准方面的工作，以及演讲者在参与这些标准化工作过程中的一些思考。包括开源的概念定义、开源的元数据，以及开源的健康度与成熟度方面的标准。
参考博客：http://zhuangbiaowei.github.io/opensource/standard/2022/06/10/open-source-and-standards.html
=======
隨著大影片時代開始，人們開始拍攝各種題材的題目，身為創作者的你最痛的點是什麼？影片？題材？對我來說就是字幕問題！人人看影片都需要字幕的部分，那該怎麼減輕上字幕的工作呢？這次就利用 GCP 上的服務(STT, GCS)，分享當中使用的一些眉眉角角，至少先讓你可以擁有一個入門級的字幕，降低大家初期在做影片所花的時間，把精力放多一點到創作上，最後在搭配 video.js 來展示。
=======
KSP 的全名是 Kotlin Symbol Processing
跟 Java 的 Annotation Processing 非常類似也是使用 Annotation 來產生程式碼
那究竟使用 KSP 能帶來多少額外的好處以及他內部是怎麼運作的呢?
就讓我們一起來 process 看看吧~
=======
以太坊若無意外，將在今年近行合併 (The Merge)，意味著共識機制將從工作量證明 (PoW) 轉為權益證明 (PoS)。合併升級後，對以太坊的生態會有何影響？又有哪些你該知道的事呢？
=======
Laravel Bagisto 是 Laravel 生態系中，eCommerce 架站熱門的套件之一，具備現代化的 UI 以及強大的管理功能。透過分析 Bagisto 的技術架構，可以幫助我們了解一個提供軟體修改性的框架，會有的程式碼架構。
希望能幫助聽眾啟發，對於此類型軟體開發，或是極高模組化風格的程式碼，會是怎麼組織而成。
=======
說明轉職歷程，包括開始前的選擇、學習中的困難與突破、轉職後剛入職遇到的事情與專案開發上的發現，藉此鼓勵更多人面對挑戰、促進業界人才發展，也幫助較資深的工程師了解工程師新鮮人遇到的事情與如何幫助新人快速成長。
=======
-
=======
在此議程中，講者將介紹 NFT 是如何被交易的。議程內容包含：
1. 比較各個 NFT 交易所如 Opensea, Rarible 等中心化交易所或其他去中心化交易所的運作結構、使用體驗與利弊。
2. 說明 NFT 要如何透過版權分潤達到獎勵創作者以及現有的版權分潤實作模式(Contract Metadata and EIP2981)。
3. 解釋為什麼會有人 NFT 被盜以及可能的盜用機制。
希望聽完的聽眾能對區塊鏈上資產轉移有更進一步的認識。
- 開場 (2 min)
- 定義 NFT (3 min)
    - ERC721 與 ERC1155
    - NFT 核心功能回顧
- 定義交易所 (1 min)
    - 公開交易是交易所
    - 私下交易不是
    - 常見交易所盤點
- 說明 NFT 交易過程 (4 min)
    - 最小功能需求下要用哪些操作？
    - NFT 交易過程會有哪些 Event
- 說明中心化交易所的 NFT 交易過程 (8 min)
    - 以 Opensea, Rarible 為例
    - 賣家上架買家下單的操作過程（牽涉到 SetApprovalForAll、及 EIP 712 簽章）
        - 討論 SetApprovalForAll 的風險
        - 「簡單」解釋 EIP 712 的原理並提供範例
        - 說明為確保安全，簽章時會弄哪些保險來防止被攻擊
    - 買家下標賣家同意的操作過程（牽涉到  EIP 712 簽章、與 ERC20 代幣）
- 說明去中心化交易所的 NFT 交易過程 (3 min)
    - 目標範例還在找，因為現在去中心化交易所好像沒有特別知名的...（歡迎推薦）
    - 真的沒有會綜合各家程式碼抽象出一個經典去中心化交易所範例來介紹
- 說明如何加入 Creator Fee (3 min)
    - EIP 2981
        - 官方標準
        - 幾乎（還）沒有人用
    - Contract Level Metadata
        - 交易所方標準
        - 以 Opensea 為例
        - 無法通用
        - 至少有人在用
- NFT 上架交易所的風險？如何被盜用？(5 min)
    - 情境一：交易所被攻陷
        - 所有有授權的 NFT 都可以被駭客用交易所私鑰轉走
    - 情境二：使用者被釣魚，簽署惡意內容
        - 因為主流交易所智能合約是看使用者的簽章來驗證授權
        - 使用者通常會開啟 SetApprovalForAll
        - 簽章即可合法挪動簽署者的 NFT
        - 會導致自己的 NFT 被駭客轉走
    - 重現盜用
        - 如果我肝夠新鮮，寫出一個範例的話，會在影片中實時示範
        - 不然就解釋原理就好...
- 結論 (1 min)
=======
If you are interested in initiating and organizing a community, you may be interested in this talk.
For instance, why are some people volunteering to run a community conference like PyCon? One of the reason is "because it is fun". This talk will show you what's the fun and how to create the fun.
[Emergence](https://en.wikipedia.org/wiki/Emergence) is commonly seen in the nature and humanity.
For example, the stock market. The basic elements of social systems are human beings, and the mutual social bonds of human beings in the social system a.k.a. the stock market in our example, perpetually changes in the sense of the ongoing reconfiguration of the structure of the stock market. The stock market is the emergence of human beings in the end.
Any kind of community is also the emergence of the human beings, including the community to organize a community conference.
I have volunteered to organize a regional [PyCon](https://www.python.org/psf/trademarks/pycon/), PyCon Taiwan, for years. I observed some "small" and "big" emergences arising from the community, including the organizing team and general participants. 
Let me talk about what I have seen and how we may initiate the emergence of a community.
=======
這些年多重宇宙正流行，從"媽的多重宇宙"到"失控的多重宇宙"，您跟上現在大家了嗎？
今年除了您的小宇宙，講者[1]將帶您一起從 GitHub Octoverse (開源宇宙)[2] 出發，以前端開發者的角度分享過去一年各個開源宇宙有哪些值得關注的地方！
今年的議程講者預計讓各位"外帶自取[3]"下列內容 (包含但不限於下列主題)[4]
- 寫程式，快就是好?
- 從數據看開發文件
- 社群如何持續發展
歡迎大家走過路過不要錯過，讓我們一起抓住趨勢，站在巨人的肩膀上看見開源人的未來
PS. 同場加映 foodpanda 在GitHub上的開源文化
------------------------------------------------------------------------------------------------------------------------------
[1] 講者﹔Nelson Lin          
[2] https://octoverse.github.com/ 
[3] https://www.foodpanda.com/
[4] 講者將從 GitHub 提供的資料觀察開源與工作專案協作情況，該資料大量使用 “拉取請求(Pull Request)” 相關屬性作為評價協作情況的指標，相信多數 GIT 使用者都不難理解，此外也關注因為疫情對不同專案協作的影響。該資料也顯示文件對生產力的決定性影響，以及社群文化如何在專案中扮演協作的重要角色。
同時此議程也會包含分享從 DeliveryHero (or foodpanda) 的角度來討論這些資料和我們實際遇到情況的差異，以及面對這些差異，可能處理的方式。
時間預計控制在 30 - 45 分鐘，以及額外的 5 分鐘提問。
這會是專注於協作的一般性議程，不會限縮在前端相關生態系。
=======
在此演講中，講者將分享使用開源套件 Snorkel 進行文字資料處理的心得分享。Snorkel 是一個處理文字資料的套件庫，可以進行弱監督的資料標記並且進行資料增幅。內容將穿插資料處理觀念、論文重點導讀、與 Snorkel 實作案例，期待你能夠在聽完後能理解資料增幅的優勢與限制，並知道要如何運用 Snorkel 在自己的 NLP 專案中進行資料集的創建與增幅。
- 開場
- 自我介紹(1 min)
- 用 AI 協助資料集創建
    - 人工標記 (1 min)
    - 弱監督：讓電腦標記：Weak Supervision (5 min)
        - 論文重點導讀：Snorkel: Rapid Training Data Creation with Weak Supervision
    - 實作工具：Snorkel 介紹 (8 min)
        - 方法示例
        - https://www.snorkel.org/use-cases/01-spam-tutorial
        - https://www.snorkel.org/use-cases/03-spam-data-slicing-tutorial
    - 實作心得分享：使用 Snorkel 進行弱監督處理 Twitter 資料集的心得
- Golden and Silver Dataset 的介紹(5 min)
    - Golden：人工標記的資料集
    - Silver：基於 Golden，讓電腦標記的資料集、經過增幅的資料集
    - 藉由 Snorkel 來透過 Golden 製作 Silver 的方法說明與範例
        - 範例：有部分資料已標記，想要標記剩餘資料
        - https://www.snorkel.org/use-cases/crowdsourcing-tutorial
- 資料增幅 (5 min)
    - 動機
        - 有更多資料可以訓練
    - 實作方法說明
        - 參考：https://www.snorkel.org/use-cases/02-spam-data-augmentation-tutorial
        - 替換同意字
            - 如 wish 換成 hope
    - 實作心得分享：使用 Snorkel 進行 Twitter 資料集的增強的心得
- 反例討論：增幅、銀資料集真的好嗎？(5 min)
    - 重點提醒：資料增幅時，小心資料外洩影響準確度判斷
    - 有時候類似資料太多，NLP 模型反而訓練不好
    - 論文重點導讀：Deduplicating Training Data Makes Language Models Better
        - Deduplicating 是去除重複的部分 的意思
=======
本講題大體可分為三個部份，從簡介 Elixir 及其特色開始，並介紹在 2022 的當下，這個語言的生態系及著名的專案。第三部份，將說明 Elixir/Erlang 看待平行容錯運算的獨特觀點。
Elixir 是由 Jose Valim 自 2013 所創，以 Erlang BEAM 架構為基礎，而在語法上受到 F# 及 Ruby 影響的語言。起源是想要在 Erlang 著名的平行式容環境下，帶進較友善的語法與 Meta Programming 概念。
在明年就要進入第十年的年紀，Elixir 現在有開發 Web 用的 Phoenix，建構 IOT 用的 Nerves，數值及邊緣運算用的 Nx。當然在社群裡，還有許多特別且有用的工具，如 LiveView、LiveBook 等等。
這個講題將為完全沒有聽過或對 Elixir 的人講解這個語言的基本概念與特色。並介紹這個語言生態系的重要工具、適合的用途及目前著名的專案。
第三部份則是由簡單的 Message pass 開始，逐步演進在將程式平行化運算時會遇到的各種挑戰，並說明 GenStage、Broadway 及 Flow 是怎麼善用 Elixir/Erlang 的容錯系統在複雜的平行式運算中的處理方式。
=======
區塊鏈產業過去這三年來在技術和產品上已經發生了許多重大的變革，特別是公鏈效能、智慧合約語言和使用體驗方面。這次的演講會介紹這幾年區塊鏈產業最重大的改變和未來的機會。
=======
在這個框架數量多到數不清的時候?不知道要選甚麼作為你的第一個框架嗎?究竟是React?Angular?  如果你對學習React的js語法感到挫折，設計web的md、xl、sm大小設計到爆氣了，投向Flutter的懷抱吧!精美的介面、跨平台的支援、容易理解的架構，讓你用一次就再也回不去
=======
SegmentFault 思否已联合开源社连续两年推出《中国开源先锋 33 人之“心”尖上的开源人物》评选，他们当中既有开源项目开发者，也有开源商业领军者，为行业做出突出贡献的开源布道师和开源治理先锋人物。生动的漫画人物、如“米其林”般的精心推荐，让历年的开源先锋在大家心中留下了鲜活的印象，作为表率鼓舞着一批批新人步入开源的殿堂与集市。
2022 年初，《中国开源码力榜》横空出世，通过客观数据分析和开放式协作的手工标注，我们甄选出了 GitHub 上协作影响力排名前 99 位的中国开发者，并联合 X-Lab OpenDigger 项目组和开源社共同权威发布。
一边是“心”尖上的开源先锋人物，一边是数据分析下的“活跃开发者”，他们之间将会产生怎样的碰撞？我们希望把这背后的故事呈现给你。
沒有摘要
=======
介紹如何使用 Cairo lang 撰寫並部屬一份 ERC-721A 智能合約至 ZK-Rollup StarkNet
早在前年年末， rollup-centric 已經正式成為 Ethereum 未來路線圖當中，不可或缺的一部分；而目前百家爭鳴的 rollup 專案，主要可分為兩大風格 — optimistic 和 zero knowledge proof (zkp)。透過這場演講，講者將帶領大家實際操作一次，如何在 zk-rollup StarkNet 上面部屬 Cairo lang 智能合約；並將以目前相當火紅的鑄造非同質化代幣協定 ERC-721A 為範例，撰寫其等價程式邏輯的 Cairo lang 版本智能合約。
=======
隨著安卓手機的普及， Android 系統在消費性市場已漸趨穩定並邁向高原期，與此同時帶動了工業級 Android 平臺也隨之在歐洲浮上水面。
Android 系統在ARM工業級平臺上常需要硬體如GPIO、UART、I2C、PWM等訊號控制，各家廠商實作的方法除了不盡相同外，常會破壞到Android本身的安全性架構，本議程將分別從AOSP 12與Android-Studio IDE兩個視角，分享如何用Linux上硬體控制常用的函示庫，封裝至JNI層給Kotlin調用，同時不破壞Android本身的安全架構。
內容大綱：
1. 簡介 Linux 上 的 控制硬體的方法有哪些 (15%)
2. 介紹 Kotlin與JNI串接的架構 (15%)
3. 分享 第一個JNI實作libgpiod（會用 Raspberry Pi、EDM-G-IMX8MP 與 Orange PI等開發板當示範實例）(40%)
3-1. 如何Android Stuidio上從無到有實作
3-2. 不要忘了跨平台相容! (ARM32與ARM64)
3-3. 如何移植到AOSP source code
3-4. 克服安全性問題 - SELinux
4. 其他硬體控制實作 (20%)
4-1. I2C
4-2. UART and PWM
4-3. Modbus and Canbus
結論與未來方向 (10%)
=======
现在的互联网已经遍布各类的行为数据，而开源社区作为推动互联网发展与前进的先锋力量，又会留下什么样的数据呢？在2021年中国开源年度报告中我们在数据篇内对开源的发展做了分析。本讲题将以中国开源年度报告为基础，做一些拓展解读，为大家介绍数据后的更多内容
沒有摘要
=======
小時候受到一本雜誌的啟發，讓我踏上旅程成為一名 UXer 的故事與 UXer 各個角色所需技能與經驗分享。
=======
無論好奇超過三百場議程是怎麼煉成的，或是第一次參加 coscup 被同時十幾軌議程嚇到選擇障礙，亦或是今年的講者或合作社群夥伴想想見歡或翻桌，都可以在這個時段來和 coscup 議程組志工聊聊～
注意本活動雖然是由議程工作人員主揪，但不代表大會官方立場，有需要正式反應意見請洽大會官方管道
=======
1. 說明 Ruby heap / page / slot
2. 說明如何觀察 Ruby memory 分配情況
3. 說明三色標記演算法 (Tri-Color Mark and Sweep)
4. 說明 Garbage Collection (incremental GC、generational GC、compaction GC)
5. 總結日常開發應注意事項
使用 Ruby 開發太方便了！但到底是什麼樣的機制運作讓我們感受到方便？
在開發 Application 的過程中，也許有人和我一樣，曾有一個常常知其然不知其所以然的時期
這些透過 Ruby 開發的程式，每天建立成千上萬的 Object，但是我們知道這些 Object 是從哪誕生？又去了哪裡呢？
在這個內容裡，我們將一步一步探討當 Ruby Object 從 .new 被建立之後如何被分配到他該去的位置，關於 Object Space 以及 Garbage Collection 的概述
=======
簡單說就是同樂會 — 有相同喜好的人、歡樂聚會的活動！BoF 是 COSCUP 每年的重頭戲之一，你們可以暢談彼此在相同主題上的新發現，又或者與其他只在網路上聊過天、卻沒見過面的「熟人」碰個面。
COSCUP 年會聚集開放源碼社群成員，是舉辦和開源、社群及開放文化有關開源相關主題 BoF 的絕佳環境！
歡迎開源社群在 COSCUP 期間舉辦 BoF 同好會！如果你想要預約 BoF 時段（每場次一小時），請至此[文件](https://docs.google.com/document/d/1Ac9VZQJXvpPoAcGJ7sZ-6mZSZp22T6ygN1X3-iH5DZ0/edit)閱讀注意事項並登記；同時，也歡迎在此宣傳場外自行舉辦的開源聚會！
想參加活動的會眾也可以在這份文件找到有哪些有趣的活動正在發生！
=======
The RISC-V ecosystem has moved forward significantly with important specifications ratified that unlock and enable hardware and software development in key markets, AI/ML is one of them. In this section, we will introduce how we build software & hardware solutions for AI/ML domain on RISC-V platforms.
=======
花蓮的「花玉柚山豐農場」則是與新創公司蜂巢數據科技旗下的「阿龜微氣候」合作，運用田間氣候感測器收集雨量、溫溼度、風向等數據，並加以分析，來改良文旦栽種品質，未來還希望導入農機自動化等數位科技，解決偏鄉農村缺工問題。
花蓮的「花玉柚山豐農場」則是與新創公司蜂巢數據科技旗下的「阿龜微氣候」合作，運用田間氣候感測器收集雨量、溫溼度、風向等數據，並加以分析，來改良文旦栽種品質，未來還希望導入農機自動化等數位科技，解決偏鄉農村缺工問題。這是2021年9月的阿龜，2022了，鄉村缺工問題找到解方了嗎！共同創辦人安邦，等一起來分曉~
=======
在過去我們在聊 Wikidata 時就有提到 Wikidata 能夠收錄單一資料在各資料庫中的收錄位置，達到一種「單一入口」的功能，從單一個資料庫中的一筆資料就能導航到各資料庫中，所以我們常稱為「資料庫的資料庫」。
然而，當面對新的不同的資料庫本體論時，不同的「最小典藏單位」上的差異便成為了在資料對照上的新挑戰，本次講座將會以講者自身的經驗說明跨資料庫的「最小典藏單位」差異如何影響 Wikidata 的收錄工作。
=======
簡單說就是同樂會 — 有相同喜好的人、歡樂聚會的活動！BoF 是 COSCUP 每年的重頭戲之一，你們可以暢談彼此在相同主題上的新發現，又或者與其他只在網路上聊過天、卻沒見過面的「熟人」碰個面。
COSCUP 年會聚集開放源碼社群成員，是舉辦和開源、社群及開放文化有關開源相關主題 BoF 的絕佳環境！
歡迎開源社群在 COSCUP 期間舉辦 BoF 同好會！如果你想要預約 BoF 時段（每場次一小時），請至此[文件](https://docs.google.com/document/d/1Ac9VZQJXvpPoAcGJ7sZ-6mZSZp22T6ygN1X3-iH5DZ0/edit)閱讀注意事項並登記；同時，也歡迎在此宣傳場外自行舉辦的開源聚會！
想參加活動的會眾也可以在這份文件找到有哪些有趣的活動正在發生！
=======
大三那年，Jserv 老師提議我可以在 HKOSCon 投稿一個議程，但是其實那個時候我對投稿內容完全沒有準備，但是還是硬著頭皮投了一個議程，四個月後我站在台上很荒謬地介紹智能合約的形式化驗證。本議程旨在分享一個大學生先後前往新加坡與香港參加開源研討會的經歷，以及其中獲得的心得體會。
=======
Talk about what obstacles I met when learning Rust.
Rust 最近幾年非常火。其獨特的語言特性，讓使用者必能寫出安全有效率的代碼，使其在 StackOverflow 上的語言排行榜異軍突起。但也因為 Rust 有著複雜的記憶體管理及可怕的最終 Boss: Data Race(資料競爭)，因而有非常高的學習曲線。
在此會議中，我會談談我在學習Rust的時候遇到的困難，希望多少解答初學者的問題。
此議題需要中等程度 C/C++ 的先前知識。
=======
## Agenda
### 1. Intro
- Who
- Why
- What (will & will NOT be included in the talk)
### 2. Intro - AWS
- SCT
- DMS
### 3. How we approached the migration
- Context
  - What
    - Legacy system
  - Why
    - The reason why we needed the migration
      - To ensure legacy system's usability while migrating features to the new system
      - For Ecto's multi-schema TX
  - How - initial plannings
- Issues we faced during the migration
  - View's dependency hell
  - Broken views and functions
- Final plan
### 4. Pour closure
  - What we achieved
    - Migrated PostgreSQL DB fully-fledged with data
    - Low downtime
  - What we could have done better
### 5. Q & A
=======
交流Linux上專業audio/midi 相關應用，最新技術，audio 或 midi 軟、硬體在Linux/開放原始碼的最新狀況等等的任何議題的交流。
當然也可以只是來show自己的作品或者軟硬體裝備展示 （我的大midi鍵盤很帥，我的虛擬歌手唱歌很可愛之類 XD），如果是自己開發的相關程式（軟體音源、效果器插件、 midi sequencer…etc）更讚喔。
主持人會準備帶一台1對3的耳機擴大機來（現場不會有喇吧喔），有需要聆聽聲音表現的人，請自備耳機（使用6.3mm插孔，如果是3.5mm小頭請自備立體聲3.5mm to 6.3mm 轉接頭），推薦帶監聽耳機（monitor headphone）
對Linux上專業audio/midi 好奇的朋友也可以參加
ps.想秀裝備的朋友，如果是要秀比較大型的裝備，例如電BASS、電吉他還是MIDI型 DJ音控台硬體之類的...也不是....不可以，但如果想要秀一手的話，請確定有帶音效界面，或者約好會帶的朋友，還有現場沒有音箱喔
=======
本次的投稿旨在介紹 LayerZero 等新一代跨鏈方案，首先，講者將先梳理過去的中繼跨鏈方案主要存在什麼樣的安全問題，而 LayerZero 如何能夠做到更安全，以及達到更去中心化，同時，講者也還會介紹基於 LayerZero 這樣的跨鏈協議的 dApp 有什麼特別之處，能夠在傳統的資產跨鏈以外還能達到什麼樣的效果，同時也還會介紹除了 LayerZero 之外，其他的新一代跨鏈方案（例如 AnyCall，Celer IM bridge 以及 CCIP）和 LzyerZero 相比有什麼差異和優劣之分，以及目前這些協議的發展可能存在什麼樣的隱憂。
在過去，跨鏈往往是以中繼鏈（如 Cosmos ）或者中繼代幣（如 Thorchain 或者 anyswap) 等方案進行，雖然說整體在使用上已經能夠為許多的用戶帶來可用的跨鏈體驗，但卻陸陸續續發生了許多起金額巨大的被駭事件，例如過去的 anyswap, poly network,wormhole 乃至 Ronin bridge 基本上都曾經因為類似中繼鏈的設計漏洞而產生上千萬美元，甚至超過上億美元的損失， 因此橋的安全性至關重要。本次的投稿主要想要介紹 LayerZero 等新一代跨鏈方案如何能夠達到更安全的跨鏈效果，首先，講者將先梳理過去常用的中繼代幣或者中繼鏈等跨鏈方案主要存在什麼樣的安全問題，而 LayerZero 如何能夠透過將交易驗證的工作透過預言機以及 Relayer 的解耦而達到更大的安全性，並且還能讓跨鏈的環境達到更去中心化，同時，講者也還會介紹基於 LayerZero 這樣的跨鏈協議的 dApp 有什麼特別之處，在實現層面能夠減少開發者多少不必要的開發時程，還有這樣的跨鏈信息驗證方案，能夠在傳統的資產跨鏈以外還能達到什麼樣的效果。最後，本次的投稿也還會介紹除了 LayerZero 之外，其他相近的新一代跨鏈方案，例如 Multichain 提出的 AnyCall，Celer birdge 提出的 Celer Inter-chain Message Framework 以及 Chainlink 所提出的跨鏈護操作協議（CCIP） 和 LayerZero 相比有什麼差異和優劣之分，以及從目前這些協議的現行發展，可能存在什麼樣的隱憂。
=======
分享PostgREST研究經驗
=======
過往很多 BoF 主揪敲碗每場次一小時不夠讓大夥暢談…我們今年提供不限時的 hacking room 空間！
Hacking Room 是一個能容納 30 人左右的交誼廳，供會眾自由交流！在這裡，我們不會限制你的活動長度；你可以在議程與議程間的空檔三五好友打十五分鐘的桌遊，也可以和志同道合的開源夥伴進行兩小時的衝刺開發，更有可能有多個活動在這個空間同時發生，要怎麼運用這個自由空間由你決定！
如果你想要揪人參與在 hacking room 舉行的活動，歡迎在此文件宣傳！
想參加活動的會眾也可以在這份[文件](https://docs.google.com/document/d/1Ac9VZQJXvpPoAcGJ7sZ-6mZSZp22T6ygN1X3-iH5DZ0/edit)找到有哪些有趣的活動正在發生！
=======
在許多 Open source 專案中，時常有該專案自己的 Kubernetes CRD(custom resource definition)，
然而在 CRD 的開發中，時常會遇到更新欄位問題，期望在這個議程中討論多版本 CRD 的 conversion webhook 是如何運作的。
=======
沒有錢、沒有 server、不會 SQL、只會前端，有了 Firebase，還是可以架網站 / 寫 App！
本議程將會分為以下部分分享：
1. Firebase 簡介
2. Cloud Firestore - 等著你來用的資料庫
3. Authentication - 靜態網頁也可以登入？
3. 用 Firebase 如何開源 - 撰寫資料庫讀取規則
4. 介紹我自己參與的實際運用案例 -- NCU App
=======
分享最近在新專案中，如何透過導入 DDD (Domain-Driven Design) 與 Clean Architecture 讓工程團隊在迭代開發的過程中保持心情愉快。
=======
研究資料寄存所（又稱 depositar）是中研院資訊所和資創中心支持的線上資料儲存庫 (data repository)，供所有人寄放、保存、管理與瀏覽研究資料。
depositar 以 CKAN 為基礎建立，並逐步擴增其功能。CKAN 是使用 Python 撰寫、開源的資料管理平台套件。在過去數年，CKAN 被多國的政府部門採用，以建立其資料入口網站。
本議程將介紹 (1) CKAN 的特色功能 (2) 如何透過 CKAN 建立自己理想的資料管理平台 (3)  depositar 的操作。
想自己架設資料管理平台？想為手邊的資料找一個長期的家？好奇如何經營資料管理平台？歡迎都來這場與我們討論，一起解決資料管理的問題！
本議程將介紹以下三部份：
1. CKAN 的特色功能：將介紹如後設資料 (Metadata) 欄位、彈性資料集搜尋 (包括時間、空間等)、即時資料預覽與視覺化、資料 API、持續識別碼、與自動化資料採集等。
2. 如何透過 CKAN 建立自己理想的資料託管平台：將以 depositar 為例，說明在使用 CKAN 架設資料平台時，會考量的問題以及解決方案，又要如何透過撰寫 CKAN 的擴充套件去達成。
3. depositar 的操作：說明使用者寄存與管理資料的流程、相關的資料應用情境、使用限制等，以及如何使用 depositar 進行研究資料管理。
一些參考資源如下：
- 研究資料寄存所支援手冊：https://docs.depositar.io/
- CKAN 官網：https://ckan.org/
=======
現今NFT的發行愈來愈普遍，作為NFT的發行商需要同時管理許多的NFT合約，要考慮使用如何的NFT合約可以讓使用者節省瓦斯費以及合約的架構可以節省部署合約的成本以及避免漏洞的發生。
先講述公版的openzeppelin ERC721合約架構的優缺點以及我們可以如何優化來達到使用者的需求，使用Proxy Upgrade Pattern做到合約升級以避免漏洞發生或合約需要新功能，Beacon Proxy可以做到同時升級多個合約，最後講解各個架構的利弊以及如何選擇。
=======
猜數字 (Bulls and Cows) 或被稱為 1A2B 透過兩個玩家彼此的猜測與揭露，透過 Haskell 來介紹 Functional Programming 的概念並實作出一個猜數字 AI
- 如何學一門程式語言，動手做吧！
- 從 Functional Programming 的基本介紹開始，接著介紹幾個基本的 Haskell 語法與特色，再搭配幾個 Haskell 常見概念。在此議程中將介紹如何用機器解猜數字的方法，並逐步帶入用 Haskell 猜數字所需函式。
- 聽完議程之後，希望可以讓你/妳對 Functional Programming 有更進一步的認識。以及稍微了解什麼是
 1. Guards (case expressions)
 2. Side effect
 3. Pure function
 4. Map function
- 以及希望可以讓你/妳對 Functional Programming 有興趣
=======
在本議程裡，我會開源一支看圖說故事的AI機器人，使用者只要上傳照片，它就會講一段話來描述這張照片，並且同時串接Azure、AWS、Google等雲端服務，剛好可以比較不同服務的影像辨識效能。
=======
業務量大增! 當然要一起來加速你的 PostgreSQL!
=======
GitHub Actions 在開源專案中通常是作為 CI / CD 的 runner 使用，但免費又無限總執行時間的 runner 想必是有很多用途的吧? 現今已經有很多開源專案使用 GitHub Actions 來製作 Uptime Bot 或是生成 Status Card 等。這次就要帶大家了解其中的秘密！讓我們手刻一個可以定期生成 Minecraft 伺服器狀態卡片的  GitHub Actions 吧！
Let's get our hands dirty!
介紹如何自行撰寫 GitHub Actions 並配合它完成周期性任務。
=======
本議程是介紹筆者打造的一個整理地圖中各地點相關資訊的生產力工具。
這個工具可以幫助筆者收集關於各個地點的故事，比如某個網頁、youtube、podcast中有提到某個地點的介紹，可以將這些故事給記錄下來。
而當筆者想要整理一個地點鄰近的故事時，又可以自動連結出將過往收集的故事。
本議程會介紹創作的背景，想法，以及實作的細節。
你是否經歷過以下情境：
看著youtube的影片，看著主持人介紹的景點，想著把這個景點放入口袋名單？
聽著podcast，聽到某個有趣的故事發生在某個地點，想要把這個故事記起來？
看著旅遊blog，覺得主人翁的故事真有趣，有一天也想要去這個地方看看。
隨著每天接觸到新的故事，有些舊的故事在記憶裡可能會被覆蓋掉，所以有時候我們會很想要想起某個聽過的故事，但卻怎麼也想不起來。
基於這個需求，所以想要做一個工具可以幫助自己收集故事，以及在想要回想的時候可以方便連結過往的故事。
=======
在這個議程中會介紹 Headless UI ，並且跟現有的元件開發方式比較。接著以清楚明瞭的範例，以及 react-table 這套著名的 open source 來看如何實踐 Headless UI。
簡報連結：https://showwell0120.github.io/headlessui-coscup-2022
Headless UI 是一種開發 UI 元件的機制。不像 Material UI、Ant Design 等有完整的排版系統和一致的樣式風格；headless UI 是透過依賴反轉的方式將自訂的樣式注入元件，並且只專注實作在元件的行為邏輯。
Headless UI 的主要好處是可以讓使用者自行決定外觀，不用再辛苦地覆寫樣式。開發者也能將集中火力在更進階的功能支援上。
react-table 是一套基於 Headless UI 實作的著名元件，在 GitHub 擁有1萬6千多的星星數。它讓使用 react 的開發者可以渲染各種使用情境的表格，而不用從頭開發背後的複雜邏輯，甚至可以讓其他人自行開發 plugin，打造 react-table 的開發生態圈。因此希望透過閱讀它的原始碼，一探 Headless UI 的起手式。
=======
在 Go 1.18 版本中，register-based calling convention 正式實作進主流架構 (64-bit ARM & x86)，而此改善有效地提升 Go 10% 以上的效能。本次議程將介紹 Go 從原先 stack-based 轉換到 register-based calling convention 的轉變過程和兩個 calling convention  的差異。
1. Calling conventions for x86, ARM, and RISC-V architecture.
2. The difference between stack-based and register-based calling convention.
3. Why Go make this change.
4. Performance improvement from this change.
=======
Organisations across various industry are embarking on machine learning and artificial intelligence journey to transform themselves into data-driven enterprise. The big question is what is the right approach to get started on machine learning? Organisations decided to invest in machine learning either get started by hiring a team of data scientists or engaging external consultants.
Ever wonder how you can apply machine learning technology to your dataset without deep data science knowledge and complicated coding? With machine learning, you can solve your day-to-day business problems, for example, reduce customer churn, improve sales lead conversion, improve customer satisfaction. 
Join us in this session to discover the latest machine learning technology of MySQL HeatWave with your familiar SQL knowledge to train, test and predict with machine learning models:
- MySQL HeatWave Overview
- Machine Learning Quickstart with MySQL HeatWave
- Common Use Cases
=======
CourseAPI 開放式課程資訊匯流學院的兩位講者，分享團隊開發跨平台課程彙整網站的進度，包含網站爬蟲、雲端部屬平台 CNTUG Infra Labs、前後端成果，以及透過開源社群方式組成，推動課程資料開放倡議工作經驗。
CourseAPI 開放式課程資訊匯流學院，專案團隊是由在學學生、教育工作者、開放知識及開源社群參與者組成，目標在研擬開放式課程的資料架構 (schema) 與資料交換方案、建立一站式開放課程查詢網頁雛形。國內高等教育單位與政府課程，目前共約有一萬筆課程資料分散在 50 個以上的課程平台網站。
在本議程當中，我們將會聚焦於專案目前版本進度，從團隊組成成立、課程平台使用者偏好問卷成果，網站爬蟲 scrapy 技術運用、雲端部屬平台 CNTUG Infra Labs、後端開發 NestJS，以及前端 React.js 成果。本次亦會分享團隊參加 2021 總統盃黑客松，促進政府課程資料釋出的倡議經驗，以及專案社群與教育科技公司交流經驗。
與本次議程，相關資訊，可參考以下 HackMD 頁面：
https://g0v.hackmd.io/BFcKpo7bTxmMc_4kBsgazA
=======
Chinese, Japanese, Korean(CJK) users need different features than other languages. Language and culture dependent features and usage are important for productivity software such as LibreOffice. This talk will introduce some recent problems encountered in the CJK user environment of LibreOffice and how to improve them.
Chinese, Japanese, Korean(CJK) users need different features than other languages. Language and culture dependent features and usage are important for productivity software such as LibreOffice. This talk will introduce some recent problems encountered in the CJK user environment of LibreOffice and how to improve them. It may also be applicable to other smartphones and desktop apps. The LibreOffice project is an aimed at multilingualism, as stated in The Document Foundation’s “Our Values” of “Our Next Decade Manifesto” that anyone can translate so that everyone can use it in their mother tongue. https://www.documentfoundation.org/pdf/tdf_manifesto.pdf However, LibreOffice developers are mostly in Europe, and in order to use them conveniently in other languages, those who understand those languages ​​need to solve the problem. LibreOffice 's CJK and problems unique to the Japanese environment are various such as vertical writing, external characters, phonetic, currency and date notation. Sometimes CJK regression bugs occur in the LibreOffice project. It is important to strengthen user’s feedback loop approach. We have to be able to explain it to people from different cultures. It is also important that CJK people actually try to fix the CJK bugs. In openSUSE.Asia 2018 (COSCUP 2018) and COSCUP 2019 my talks, I organized examples of concrete CJK bugs and introduce typical LibreOffice CJK bugs. In COSCUP 2021 my talk introduced how to explain the bugs. In this talk, I will introduce the major recent issues in CJK environment and detailed episodes related to them. One of the main episodes is, there was a re-design of the dialog regarding font settings. It was proposal that changes be made in a way that would big affect CJK users. I'll talk about them why it happened, how it was resolved or it didn't, and if there were other options. It also will describes workarounds and solutions for users who encounter for CJK bugs.
=======
Disfactory 農地違章工廠回報系統為地球公民基金會來 g0v 黑客松提案的專案，從 NGO 倡議的需求出發，三年來從零開始開發網站地圖回報介面、管理回報資料和公文的後台、專案 landing page、大家來找廠衛星空照圖比對小遊戲，每週約有 10 位活躍參與者，包括工程師、設計師、NGO 研究員與產品經理，前後共有超過 70 位貢獻者。開發過程中一直在思考通用性架構與客製化需求之間的平衡，如何維持開源社群專案的歡樂和創造力、如何讓科技平台在社會議題倡議發揮影響力、如何讓程式碼和資料開放更方便社群使用、如何讓利害關係人參與產品設計和提升使用者體驗、如何不重複打造輪子。這個過程中也包括了與 NGO 工作者的文化磨合，以及開發工作模式的拉扯，這樣跟組織合作的開源社群專案可以長出什麼協作模式？這次希望能夠分享我們跌跌撞撞的經驗，以及跟更多開源專案學習討教。
專案介紹：https://about.disfactory.tw/
Project Intro：https://english.cw.com.tw/article/article.action?id=2982
## 過往相關專案開發過程分享
- 在 g0v 專案當 PM — 開源社群與 NGO 的混亂有序開放協作｜Disfactory 農地違章工廠回報系統
https://aelcenganda.medium.com/open-source-civic-tech-product-manager-in-disfactory-with-ngo-f40d050f886b
- 牧貓人 —— g0v 混亂有序開放協作專案管理 | g0v summit 2020
https://www.youtube.com/watch?v=mQYmkLYCKuI
- TICTeC Show & Tell - Disfactory: mapping and reporting illegal factories in Taiwan
https://www.youtube.com/watch?v=Q0A6MbP3a0w
=======
在此次的演講, 會聊到為何會加入台灣社群, 為何會加入國際社群, 讓來參加的朋友對參與國際社群, 舉辦會議及收穫有相關了解. 
個人參與國際社群的動力為何?（增廣見聞? 練英文?） 
參與國際社群的方式？(如何跨出第一步? 如何進行後續貢獻?) 
國際社群介紹
* openSUSE / GNOME /  VMUG / AWS Users Group / GDG 
研討會介紹
* GNOME 會議 ( GNOME.Asia Summit / GUADEC )介紹 
* openSUSE 會議 ( openSUSE Conference / openSUSE.Asia Summit ) 介紹
與不同國家社群成員合作相關經驗與方式 
參與國際社群經驗 / 收穫 / 趣味分享
=======
開源研討會的參與者並非只有工程師、開發者 (coders) 而已，這場議程中，將介紹使用者 (users) 與推廣者 (promoters) 在開源研討會中可以如何參與以及融入活動。本次的分享將介紹 3 個國際級開源研討會：Creative Commons Summit, FOSDEM & HKOSCon。
參與這場將會聽到：
* 這些開源研討會的特色
* 參與研討會前該做的功課有哪些？
* 如何獲得旅費？
開源研討會的參與者並非只有工程師、開發者 (coders) 而已，這場議程中，將介紹使用者 (users) 與推廣者 (promoters) 在開源研討會中可以如何參與以及融入活動。
本次的分享將介紹 3 個國際級開源研討會：
* Creative Commons Summit: 活動參與角色多元，包含創作者、教育界、工程師、律師等角色，多數都在討論在各地推廣 creative commons 與著作權的議題。
* FOSDEM: 歐洲最大的開放原始碼研討會，由志工籌備的研討會，參與人數超過 8000、800 多場分享，是每年歐洲開源人相聚的大拜拜。
* HKOSCon: 香港開源年會，HKOSCon 與 COSCUP 的志工們有多年交流經驗。比起前面兩場研討會來說，對於新手出國參與，應該是比較簡易入門的。
你參與這場將會聽到：
* 這些開源研討會的特色
* 參與研討會前該做的功課有哪些？
* 如何獲得旅費？
=======
OAuth 2.0 是全世界最流行的 Open Protocol 之一，我們幾乎每天都在使用它（例如：Google/FB Login、Google/Facebook/Github APIs）。究竟它想解決的問題是什麼、適用什麼情境，以及背後的設計理念與安全考量是什麼呢？  
在這場分享中，我們將會一起一層一層地解構其核心設計，並用最生活化的例子理解它
分享內容將包含：
- OAuth 2.0 想解決的問題、適用的情境
- OAuth 2.0 的基礎知識
- OAuth 2.0 的核心設計理念拆解 (Implicit, Authorization Code, PKCE flow)
*此場分享將會以全英文進行
---
- [投影片連結](https://docs.google.com/presentation/d/13jfj1AnEny_mPE9mbQjMHgyh6EmpIaVa/edit#slide=id.p1)
- [共筆連結](https://hackmd.io/@coscup/H1Oxr0Jp9/%2F%40coscup%2FH1J24AJ69)
關於 Barry Chen：
- Appier 資深工程師，曾負責設計與開發公司內 enterprise authentication solution ，因而對 OAuth 2.0, OpenID Connect 有更深的理解
- 很喜歡分享所以我在這
- 土生土長的台灣工程師，喜歡用科技解決人們遇到的問題
- GoodJob 職場透明化運動 (https://www.goodjob.life) 的創辦人
=======
How to hack your own Arch Linux image to run on ARM embedded systems and servers.
=======
簡單說就是同樂會 — 有相同喜好的人、歡樂聚會的活動！BoF 是 COSCUP 每年的重頭戲之一，你們可以暢談彼此在相同主題上的新發現，又或者與其他只在網路上聊過天、卻沒見過面的「熟人」碰個面。
COSCUP 年會聚集開放源碼社群成員，是舉辦和開源、社群及開放文化有關開源相關主題 BoF 的絕佳環境！
歡迎開源社群在 COSCUP 期間舉辦 BoF 同好會！如果你想要預約 BoF 時段（每場次一小時），請至此[文件](https://docs.google.com/document/d/1Ac9VZQJXvpPoAcGJ7sZ-6mZSZp22T6ygN1X3-iH5DZ0/edit)閱讀注意事項並登記；同時，也歡迎在此宣傳場外自行舉辦的開源聚會！
想參加活動的會眾也可以在這份文件找到有哪些有趣的活動正在發生！
=======
你有想過用 Go 語言自幹雲端桌面作業系統嗎？
從 2016 年開始，我因為個人需要開發了一個名為 ArozOS 的開源網頁桌面作業及雲端硬碟系統，不僅持續不斷地更新至今，使用者人數也在不斷地增加。在這 30分鐘的議程中，我會跟您分享在開發及維護上的種種趣事與挑戰，包含：
  - ArozOS 系統的設計流程
  - 從 PHP 轉移到 Go 的原因
  - 重寫的過程和得到的改善
  - 如何設計可熱插拔的模組
  - 在 Go 內執行 JavaScript Interpreter 讓用戶進行 scripting
等等多種意想不到的開發技巧與實作方法！
如果你剛好有一片閒置的派（Raspberry Pi），想要建置一套個人用的雲端硬碟系統，你會選用甚麼方案？
ArozOS 是一套開源網頁桌面作業及雲端硬碟系統，誕生於 2016 年春天並在 2018 年時於 GitHub 上開源。最初是以 Raspberry Pi 為主要平台，不過也相容於 x64 的 Linux 伺服器、arm64 / armv7+ 的開發板，甚至相容 Windows、 Mac 及 OpenWRT 等平台。除此之外，ArozOS 在設計上參考了很多不同的商用及開源系統，包括 OS.js、Synology DSM 及 Google Drive 等，讓使用者可以很簡單的部署和存取到放在伺服器上的各種不同檔案。
隨著系統及使用者人數的成長，我們在效能和功能實現上逐漸遭遇到瓶頸，最終決定將整套系統由原本的 PHP 7 改用 Go 1.14 重寫。但不可避免的我們也在過程中遇上了很多問題，比如不知道如何正確的處理 Error、沒辦法進行模組的熱插拔、如何自己設計 sandbox 執行 ArozOS 的 WebApp 等等。
本次議程的內容大綱如下：
  - ArozOS 系統及其作者簡介
  - 從 PHP 轉移到 Go 的原因與痛點
  - 基於 Reverse Proxy 的高相容性模組熱插拔架構
  - Otto - Go 語言寫的 ECMA5 intepreter 與 ArozOS WebApp 的連接架構
  - 透過 Go 語言進行系統 OTA 更新的方法分享與實作
Github：https://github.com/tobychui/arozos
=======
核心網路開發是一個高技術門檻的技術工程，早期的核心網路都是不開放原始程式碼的，並且相關技術也被 NOKIA, Ericsson, Cisco 等科技大廠壟斷。
最近幾年在 GitHub 上卻出現了開放原始碼的核心網路專案，free5GC 遵從 3GPP R15 且採用 Apache 授權讓許多研究單位與中小型企業都可以免費的使用它去做研究、甚至是商業化行為。
但是要從0基礎開始閱讀 3GPP Spec 對一般學生或是開發者都是有難度的，本篇議程將嘗試在 30 分鐘快速帶大家理解 5G 核心網路是如何運作的，希望能夠藉由這次的分享讓更多人投入開放原始碼專案的貢獻！
在這個 30 分鐘的議程中，將包含以下內容：
- 5G 核心網路介紹
- Network Functions
- Common Procedures
- 如何快速的在個人電腦啟動 5G 核心網路
=======
從動詞（copy, move, clone, borrow, ref, deref）切入 Rust 基礎觀念
從與  The Rust Programming Language 不同的觀點切入 Rust 的所有權、記憶體管理、多執行序與型別轉換。投影片參見：https://sharils.github.io/slides/20220731-learn-rust-verbs/
=======
從參與招募以後，發現從面試者變成招募者，視野跟想法也會跟著有許多轉變。並且，面試這件事情本身真的是有技巧的，把握重要的面試原則，可以讓招募者更能看見自己的實力。這個講題想要講講面試心路歷程，也針對面試的技巧與扣分項目做一些分享，蒐集來自面試者疑問與招募方的建議，希望大家掌握到了精髓以後都可以完整展現自己的能力，拿到理想的 offer。
* 履歷篇
  * 數字的迷思
  *了解自己（的履歷）
* 面談篇
  * 了解的深度
* 作業篇
  * 動手前的思考與規劃
=======
自從 2020 年發布 PHP 8 開始，針對新語法的討論層出不窮
今天我們來聊聊如何利用這些新語法，讓你的程式看起來更加清晰，讓其他人更好修改以及維護！
=======
開放式組織特徵 
決策參與
什麼是目標 
精英制度 vs 民主制度
戲說 Open Source 八點檔
=======
在開發、部署一個完整的 Web 應用程式時，通常會需要兩個或以上的 App 之間進行協調，才有辦法交付完整的服務。而在這樣的情況下，必然會需要 Orchestration service 來協助應用程式間的溝通、並且維持整個服務的 scalability 及 availability。這次的演講，將會介紹 Docker 專屬的 Ochestration service, Docker Swarm 的使用方式，以及如何將 Ruby on Rails deploy 到 Docker Swarm 的群集中，並同時使用 Traefik 作為反向 proxy 設定服務間的 network，降低部署時的複雜度。
=======
FreeRTOS is a popular real-time kernel. It supports multiple microarchitectures, including ARM and RISC-V. Also, it provides synchronous primitives and three scheduling policies for performing real-time tasks. In this talk, we aim to reason the FreeRTOS’ scheduling behaviors with the Spin model checker. The Spin model checker can exhaustively check an abstract model of a multithreading program against given properties. Especially, it interleaves the behaviors of every single threaded model and tries to report an counterexample which violating the given properties on the model. We manually build an abstract model of the FreeRTOS’ scheduling behaviors at the C code level and leverage assertions in [FreeRTOS’ demonstrations](https://github.com/FreeRTOS/FreeRTOS/tree/main/FreeRTOS/Demo/Common/Minimal) as properties.
Although we aren't the first to model FreeRTOS, we do have interesting results. The model checker reports two types of errors under different scheduling policies. In order to show they are not spurious, we successfully reproduce those types of errors on a STM32F429 board. We find similar results on a SiFive-HiFive-Rev-B board.
[Our model](https://github.com/kaizsv/FreeRTOS-Spin) and [reproduction](https://github.com/kaizsv/FreeRTOS-Spin-Reproduction) are available online. Also, we've [shared one type of errors](https://forums.freertos.org/t/consecutive-executions-of-the-scheduler/14891) with the FreeRTOS community. It seems to the community that the error is not a serious problem and our reproduction of the error is unusual. Nevertheless, we still hope to reveal the errors to programmers.
=======
2015 年，“工地打印小妹” Miya 因为想要为普通人打造一个分享的平台，开启了她的社群营造之路。随后她加入了全球最大的开源公益编程教育社区 freeCodeCamp.org，从志愿者成长为中文社区大使，和世界各地的人们协作推动教育公益事业的发展。
水歌是一个从高中就开始深入参与公益 IT 技术社团创建的青年人，同时期遇见开源软件，坚信其开放协作的理念是社会应有的样子，便开启了 16 年开放社群的平凡之路。
他们和一群朋友协作营造“开源市集”，这是国内第一个以开源技术社区为起点，联结科技、人文、艺术、环保等不同领域的朋友的开放社群。他们希望通过深度交流、协作共创点亮更多有趣的灵魂。
沒有摘要
=======
區塊鏈在物聯網的應用上仍有許多問題，例如感測器的資料無法長期監控，因為手續費以及擴展性的問題，導致物聯網導入區塊鏈會耗費許多成本，雖然供應鏈使用智慧合約已經有很多成果，但是物聯網的歷程資料無法被記錄在區塊鏈，從物聯網感知層到網路層中的資料傳遞過程並非公開透明。為了解決擴展性、效能，以及手續費等問題，出現了有向無環圖 ( Directed Acyclic Graph， DAG ) 的分散式帳本Tangle，由IOTA提出。有別於一般區塊鏈帳本是以區塊打包成鏈狀結構，Tangle使用DAG的結構作為帳本的基礎，可以提升交易的速度，同時可以完整記錄物聯網的歷程記錄。
IOTA雖然已經被使用在許多物聯網的應用上，但他們的限制大多是感測器的節點是必須直接連接到IOTA的節點，但許多感測器是在內部網路，甚至有些沒有連網功能，也無法做到IOTA的交易簽章，例如：WSNs。因此我將IOTA Streams Channel架構結合自己設計了物聯網身份驗證，確保資源受限的設備也可以自由存取IOTA Tangle網路，達成完全分散式網路，往Web 3.0的路上邁進。
本議程會分享IOTA和傳統區塊鏈有甚麼不同，並且在無線感測網路如何應用IOTA streams來傳遞資料。希望藉由分享IOTA的好處和應用，提供更多人了解IOTA的機會。
IOTA雖然已經被使用在許多物聯網的應用上，但他們的限制大多是感測器的節點是必須直接連接到IOTA的節點，但許多感測器是在內部網路，甚至有些沒有連網功能，也無法做到IOTA的交易簽章，例如：WSNs。因此我將IOTA Streams Channel架構結合自己設計了物聯網身份驗證，確保資源受限的設備也可以自由存取IOTA Tangle網路，達成完全分散式網路，往Web 3.0的路上邁進。
本議程會分享IOTA和傳統區塊鏈有甚麼不同，並且在無線感測網路如何應用IOTA streams來傳遞資料。希望藉由分享IOTA的好處和應用，提供更多人了解IOTA的機會。
=======
屬於 Archers (Arch Linux Users) 的 Lightning Talks 時間，歡迎踴躍報名！
=======
在使用Rust在專案中，難免會有些整合性的測試案例需要先Ignore。
本場會概略的整理一下，現在Rust中ignore的問題和未來的可能，
同時分享一下，對Rust開PR修改Ignore訊息的經驗。
=======
聽過典藏藝術品、典藏藝術家，但你聽過典藏一個藝術機構嗎？如果要為典藏藝術機構建立一套方法，可能會遇到什麼問題？竹圍工作室已於2021年底宣告終止對外營運，但在完全解散之前，創辦人蕭麗虹老師及工作室運作26年來所留下來的大批藝術檔案，如何找到下一個去處？創辦人蕭麗虹老師有意將私有的藝術檔案轉化為公共財，然而，為了追求這個理想、保留這批文件檔案，又經歷了哪些試錯的過程？而這批藝術檔案所含括的種類多元、內容也涉及不同主軸，在執行技術面，會面臨哪些挑戰？
本次講題將分享竹圍工作室自2020年末至2022年初，為了追求機構自我典藏而進行的不同嘗試，以及在不同階段所遭遇到的挑戰與困難，並提出現階段所發展出的工作方法。期望透過此次分享，邀請各方人士一同集思廣益，擴充典藏藝術機構的概念與未來可能。
=======
2021 年 5 月隨著台灣疫情升溫、紙本實聯制出現個資窺視疑慮，g0v 社群自發討論出了「簡訊實聯制」系統設計而由政府採納，成為了「公私協力」、「數位防疫」的金招牌之一。然而實際上簡訊實聯制對疫調的貢獻有多少？執行伴隨的法規爭議與課責性問題又有哪些？在本議程中，我們將檢視簡訊實聯制的統計資料，並盤點實行過程中的各項議題。
=======
LIFF Plugin 是 LIFF 上的一個功能，能讓開發者可以在 LIFF 上做擴充功能，再給其他開發者安裝。而 LIFF Mock 是由 LINE 官方開發的，一個 LIFF Plugin 的擴充功能，能夠輔助開發者進行 LIFF 相關程式的自動測試，本議程將帶您讀過 LIFF Mock 大部分的原始碼，並且了解其運作的原理。
=======
Log4j was a major security vulnerability. We worked on fixing log4j and other security vulnerabilities in various open source projects. Along the way, we learned a few lessons about security processes.
=======
空氣盒子的發展，展現了公民科技力量在空氣品質監測的成效，然而，除了空氣品質的問題，水環境也是長久以來的問題之一，例如：水資源時空分佈不均，造成乾旱和淹水；河川水質出問題，造成魚類大量死亡，究竟空氣盒子的經驗是否可以應用到水環境監測呢? 本場次即想藉由邀集對於水環境監測和水盒子開發有經驗的專家一起來討論公民科技的力量是否有機會用來解決水環境問題。
本場次是以座談(panel)方式進行，預計邀請 LASS 社群哈爸介紹「喝好水 吃好物 有良居」」計畫和頭前溪公私協力的過程與經驗，同樣為 LASS 社群的劉紹淵介紹水盒子計畫的發展歷程，安研科技的黃思瑋博士介紹英國如何利用水盒子監測河川水質的經驗，及 OCF 如何推廣民生公共物聯網至國外，以及以公民科技思維落實環境監測以賦權於一般民眾了解環境品質，最後將邀集各專家進行綜合討論，以各自經驗和想法激發出與會者更多公民科技應用的思維
=======
VeriGPU is an opensource GPU, written in verilog. We present details on our planning and design decisions; on our implementation details; on how we perform verification, and on how we measure metrics. We use only opensource and free software. No software that requires a licensing fee is used in this work.
 The internal GPU Core ISA loosely compliant with RISC-V ISA. Where RISC-V conflicts with designing for a GPU setting, we break with RISC-V. We intend to keep the cores very focused on ML. For example, brain floating point ("BF16") throughout, to keep core die area low. This should keep the per-core cost low. Similarly, we intend to implement only a few float operations critical to ML, such as exp, log, tanh, sqrt. We don't actually intend to tape this out ourselves, but we intend to do what we can to verify that tape-out would work ok. We will measure and minimize die area and maximum propagation delay. We will implement a HIP API, that is compatible with the pytorch machine learning framework.
We hope that this opensource GPU will enable private companies to easily tape-out and produce GPUs. We hope that we will lower the barrier to entry into the GPU market, and potentially contribute to increasing the ratio of power to cost of GPUs.
=======
在此議程中，講者會介紹目前在 Cloud Native Taiwan User Group 進行的其中一項計畫，CNTUG Infra Labs。議程將會包含 Infra Labs 雲端環境的架構以及其是如何在幾個小時內被建立的。
在此議程中，講者會介紹目前在 Cloud Native Taiwan User Group 進行的其中一項計畫，CNTUG Infra Labs。議程將會包含 Infra Labs 雲端環境的架構以及其是如何在幾個小時內被建立的，其中會介紹
- 使用的技術和工具
- 如何部署最初的裸機
- 如何部署儲存環境 (Ceph)
- 如何建立雲端環境 (OpenStack)
=======
An introduction to the Transformers.jl and relative packages for building transformer models.
Transformers.jl is a Julia package built on top of Flux.jl. It provide a framework and tools for defining custom transformer models and training on language related task. In the talk, I will give an brief look on what functionality this package provide. For better understanding the materials in this talk, it's recommended for the audience to have some background knowledge.
=======
GCP 雲端平台介紹
如何跨出雲端平台使用第一步？
常見 GCP 服務以及資源介紹
GCP 平臺工具快速介紹
GCP 平臺使用經驗交流
=======
在這個講題裡我們會在VS Code裡結合Vim的模式使用，依次彙整RA的功能，輔以使用情境的說明。幫助聽眾有系統的了解Rust Analyzer的重要功能與使用方法，讓Rust的開發更順手且有趣。​
[Rust-Analyzer](https://github.com/rust-lang/rust-analyzer)是Rust開發裡的重要​工具，並在今年正式成為官方項目。​
但在初次看過[User Manual](https://rust-analyzer.github.io/manual.html)上的各種用法後，是不是因為功能繁複產生了些許眼花繚換的感覺呢？​
這個講題我們會在VS Code裡結合Vim的模式使用，依次彙整RA的功能，輔以使用情境的說明。幫助聽眾有系統的了解Rust Analyzer的重要功能與使用方法，讓Rust的開發更順手且有趣。​
---
​
關於講者：Wayne Tsai​
​
1. 去年的Rust講題:  [《那些Rust裡好用的抽象與實用語法火力展示》](https://www.tenlong.com.tw/products/9786263330016?list_name=b-r30-zh_tw)
2. VSCodeVim的Contributor​
3. [Visual Studio Code實用指南](https://www.tenlong.com.tw/products/9786263330016?list_name=b-r30-zh_tw) 作者​
> 這本書是致敬《Practical Vim: Edit Text at the Speed of Thought》的作品​
> 書裡探討並處理了幾個沒有在《Practica Vim》或相關VSCodeVim書籍裡提及的問題，像是​
> - VS Code與Vim快捷鍵綁定的運作原理，對應處理方法​
> - Keyboard Remapping的方法與原則(MacOS、Windows適用)
> - 對Emacs在VS Code中使用有興趣的讀者，這本書在附錄A-5介紹了VSpaceCode的方法，可以供參考。
=======
四位开源社的核心成员的分享我们与社群一同成长的心路历程，COSCUP在开源社成立的2014年给了我们很大的启发。开源社发展的演变过程有1.0-2.0-3.0等不同阶段，在发展历程中，我们观察到了整个中国开源生态发展的洪流，身在其中的每个人，个人的职业和发展也跟开源社越来越变得密不可分。我们不仅找到了组织，寻找了有同样开源认知的一群人，也在开源社这个平台上，个人和社区成就彼此。
沒有摘要
=======
A look at the Open Source ASIC tooling, the Google sponsored shuttle runs and a quick demonstration.
In this presentation Matthew Venn will present an overview of the recent growth in the Open Source ASIC tooling and community. A look over the last 2 years, including results and lessons learnt from the first shuttle. The tools will be discussed and a quick demonstration will be given. Information on how to get involved and how to make your own submission to take advantage of the free Google sponsored shuttles.
=======
MantaGO是一個GUI(圖像化操作介面)的聊天機器人建置平台，提供人性化的操作介面，結合AI 智能回覆聊天機器人。讓使用者從服務推廣、智能回覆到熟客行銷，不再受限於技術限制。平台號稱：只要交給 MantaGO，30分鐘快速設定、輕鬆上手。
但市面上這麼多相似的產品，MantaGO要怎麼在紅海市場裡面殺出一條血路，還要讓台灣的小農願意付費，用訂閱制的方式花錢購買服務? 讓平台經理Janice無私的和大家分享商業的秘密。
=======
tinyML是一個號稱以電池供電、毫瓦(mW)等級就能執行小型AI應用的新概念，而它正迅速崛起，讓更多邊緣裝置或感測器瞬間變聰明，不再依賴雲端就能實現智慧物聯網(AI+IoT=AIoT)，其中最重要的核心便是單晶片（MCU），而能夠支援tinyML技術且使用最廣的就是Arm Cortex-M系列產品。 透過本次分享希望讓大家一口吃下這顆爆漿瀨尿牛丸(tinyML)就能享受牛肉丸(MCU)的鮮美、瀨尿蝦(AI)的甘甜，更讓大家在享受美食時同時了解它如何製作及開發出更適合自己口味的新丸子並分享，讓大家能更快進入tinyML的世界吧。
=======
This talk is to introduce the mechanism of async in Rust briefly,
go through popular runtime libraries, and study
[par-stream](https://github.com/jerry73204/par-stream)
as a showcase to build up a tool for async and parallel computing.
The async/.await is a powerful feature in Rust. It enables us to implement
concurrent and multi-task programs with ease.
This talk aims to gently introduce the mechanism under the hood 
and to let the audience learn asynchronous programming from scratch.
It will explore code construction based on future and stream,
learn the polling and waker model behind the scenes,
and introduce common-used runtimes, such as tokio and async-std.
Finally, we will overview the [par-stream](https://github.com/jerry73204/par-stream)
project to see how asynchronous Rust benefits practical applications.
=======
在這次的分享中，會從背景知識開始，由淺入深的帶領大家了解何為 Out-of-Order Execution processor ，以及其背後的原理: Tomasulo's algorithm 。
在了解背景知識的同時，展示如何使用 Rust 來實做對應的 emulator 。
**目標聽眾**
學習過計算機組織，想了解其中提到的神秘名詞究竟是如何運作的人
**備註**
由於時間關係，主要會聚焦在算術 / 邏輯運算之上，因此本次分享中並不會包含：
- 記憶體存取
- 分支
- 例外 / 中斷
**參考資料**
https://github.com/justapig9020/rUOoOeP
在學習計算機組織時，對於其中提到的 Out-of-Order execution (OoOE) 這種既可以提昇執行效率有可以保持計算準確的技術感到興趣。
透過使用 Rust 來建構 OoOE processor 的 emulator ，可以了解 Tomasulo's 演算法的核心概念，以及其中會遭遇到的問題。
=======
Open Pedagogy projects invite students to be collaborators, contributors, and creators who shape public knowledge. They are designed with the intention of sharing them openly with future publics — be that with future students, or out on the web — to be reused, revised, or remixed. Open pedagogy projects also invite students into a different relationship with instructors and with knowledge. They invite students to be collaborators and creators instead of learners and consumers. Open pedagogy can be an exciting way to reinvent the learning experience; however, making the shift can seem daunting at first. Because an open pedagogy project’s scope typically looks beyond the confines of a traditional classroom learning space, these projects are multi-faceted and require a project management plan to be sustainable. In this session we will discuss the Open Pedagogy Project Roadmap, an openly licensed, step-by-step, module-based, discipline-agnostic project management guide for instructors to think through the process of scoping, implementing, sustaining, and sharing their own open pedagogy projects regardless of its size or scope. The four modules of The Roadmap guide faculty through the 5 Ss of open pedagogy projects: Scope, Support, Students, Sharing, and Sustaining.
Open pedagogy can be an exciting way to reinvent the learning experience; however, making the shift can seem daunting at first. Because an open pedagogy project’s scope typically looks beyond the confines of a traditional classroom learning space, these projects are multi-faceted and require a project management plan to be sustainable. In this session we will discuss the Open Pedagogy Project Roadmap, an openly licensed, step-by-step, module-based, discipline-agnostic project management guide for instructors to think through the process of scoping, implementing, sustaining, and sharing their own open pedagogy projects regardless of its size or scope. The four modules of The Roadmap guide faculty through the 5 Ss of open pedagogy projects: Scope, Support, Students, Sharing, and Sustaining. 
Open Pedagogy projects invite students to be collaborators, contributors, and creators who shape public knowledge. They are designed with the intention of sharing them openly with future publics — be that with future students, or out on the web — to be reused, revised, or remixed. Open pedagogy projects also invite students into a different relationship with instructors and with knowledge. They invite students to be collaborators and creators instead of learners and consumers. Thus, there are additional considerations for both instructors and students alike.  While there are case studies detailing open pedagogy projects and useful handbooks to guide faculty who are interested in exploring open pedagogy projects, a review of the literature revealed that there was a space for this type of practical open pedagogy project management guidance. Drawing from our collective experiences and the literature, 5 Ss of open pedagogy projects emerged as essential tenets to consider when planning for and sustaining one.   
Developed by two academic librarians, the Roadmap walks instructors through a process of identifying core elements of their project in order to create a customized, sustainable, and actionable implementation plan, work that is critical to success but is often set aside in the interest of time. The Roadmap asks instructors to consider the values they bring to their project, the collaborations that may be involved beyond the classroom (e.g., librarians, instructional designers), the resources they will need, and their plans for sharing and sustaining the project. The Roadmap also encourages them to consider issues like student agency, assessment, and the role of open pedagogy in fostering diversity, equity, inclusion, and accessibility.  
In this session, we will discuss as our experiences as librarians with supporting the creation and dissemination of two open pedagogy projects and how this work informed the creation of the Roadmap.
=======
討論如何使用 Kotlin scope function 
來讓程式碼的語意更加清晰
=======
這個talk想帶大家了解Go 1.18新增的type parameter(generic)功能，比較不同語言generic的設計
- Generic想解決的問題，在type parameter之前的generic (interface, code template, reflection)
- 初步探討 Interface 跟reflection內部實作與generic實作上的差異 (monomorphisable)
- Type parameter 的基本介紹
- 比較Go generic與其他語言的差異
- 從 C++ template programing 所提供operator overload, partial specialization等功能來看generic programing目前的發展狀況和其副作用
=======
This talk will present an example of a web-application implementation using JQuery-UI, JQuery, and Bootstrap to provide impressive front side pages connected to the Rails backend server.  Due to various problems, it is not so easy to build an excellent web app with a state-of-the-art front-end framework and the latest Rails platform.  The most straightforward way to realize such an application with attractive user interfaces working with the Rails server is to operate the Rails server in API mode and make the front-side and the server communicate using AJAX. However, the developers must confront several difficulties, such as security protection, preventing vulnerabilities, etc. This talk will introduce some examples to avoid such obstacles to implementing an attractive web app by showing a practical case the presenter recently created.
=======
Influxdb 為市占最高的 time series DBMS 之一，使用上與 RDBMS 有不同優劣勢。
在維運方面，database 有許多相似需求：穩定性、高可用性、備份、還原、資源管理、調度、災難復原...等。社群常聽到有人問：可不可以在 K8s 上跑 database。
本演講會分享在 k8s 中維運，實務上所遇到的問題，提供一些思考方向。
本次演講的 influxdb 版本為 Influxdb OSS / enterprise 1.9+
Influxdb 為市占最高的 time series DBMS 之一，使用上與 RDBMS 有不同優劣勢。
在維運方面，database 有許多相似需求：穩定性、高可用性、備份、還原、資源管理、調度、災難復原...等。社群常聽到有人問：可不可以在 K8s 上跑 database。
本演講會分享在 k8s 中維運，實務上所遇到的問題，提供一些思考方向。
本次演講的 influxdb 版本為 Influxdb OSS / enterprise 1.9+
- 簡介 Influxdb，time series 與 RDBMS 的差異
- 使用 time series 的幾個情境: 
- 在 k8s 上跑 DB
  - 穩定性 Availability、HA (enterprise)、faillure recovery
  - 資源管理 OOMKilled、cpu throttling、OutOfDisk
  - DB management: data migration、backup & restore、data retention
- 小結: 你該不該用 cloud service / VM / 在 K8s 上跑 database
=======
Use spreadsheet applications to Extract/Transform/Load/Export data. loading data from CSV or Excel is easy, but if you need to get data from various sources such as Blog, JSON, XML, CSV, RDB, Email, etc. You often need to copy and paste data that has been converted somewhere else. In this presentation, I would like to show how to automate data acquisition (and of course output) using Apache Hop, a data orchestration tool.窶ｨ
In this case, I will use LibreOffice Calc as the spreadsheet and Apache Hop as the ETL tool.
Apache Hop became Apache TLP in December 2021.
The Hop Orchestration Platform, or Apache Hop, aims to facilitate all aspects of data and metadata orchestration.
Hop aims to be the future of data integration.窶ｨThis presentation will be clearly explained with demonstrations of data transformation.
=======
圖神經網路（graph neural network, GNN）是幾何深度學習（geometric deep learning）的重要分支。Message-passing 架構是 GNN 相當重要而流行的架構，然而這個架構卻無法發揮圖的全部威力而造成重大的缺陷。更重要的是，Message-passing 架構只考慮每個節點的鄰居，卻不能考慮圖的局部拓樸結構。取自 Transformer 的方法，利用位置編碼可以有效讓圖的拓樸結構被 GNN 使用，並增強 GNN 的學習效能。過往的流形學習（manifold learning）都使用靜態圖（static graph）作為建構高維流形的手段，但是建構高維流形與學習降維的方法分離。這樣會造成流形學習沒有辦法捕捉到正確的流形結構，導致流形學習的失敗。動態圖更新（dynamic graph update）是一個被提出來解決這個問題的手段，透過在圖捲積層（graph convolutional layer）中建構高維流形，這樣就可以提昇 GNN 學習高維流形的效率。本演講中將會描述如何在 Julia 的 GeometricFlux.jl 中實作這些方法，並且提高 GNN 模型的學習效能。當中還會提及 GeometricFlux.jl 中的新功能，例如如何使用 GPU 來做批次學習（batch learning）提高訓練速度、如何使用群捲積層（group convolutional layer）等等。
=======
Ruby 圈最多人使用的測試框架 RSpec 是以易於人類閱讀的 DSL 開發而成，而在使用 DSL 帶來的測試便利中，除了思考為何需要寫測試、編寫時的考量，以及如何編寫測試外，也發現過度使用 DSL 提供便利語法的問題。
=======
來自不同社群的兩位議程講者，分享各自開始開源貢獻的原因與理念，及在不同面向開源社群中貢獻的經驗，包含 JVM 編譯器的開發、以及開源社群與專案的經營。
本議程講者為兩位來自不同縣市與社群的學生，包含國中生及準大學生。ChAoS UnItY 會介紹其在編譯器、程式語言的 issues & pull requests，而 Ted 將會介紹 CourseAPI 社群專案的經營與推廣，期待透過議程讓更多人了解並踏出開源貢獻的第一步。
=======
The Department of Defense (DoD) approves and publishes the Security Technical Implementation Guide (STIG) for MySQL Enterprise Edition 8.0.
The session will provide Demo on STIG viewer with MySQL security.  We will go over the MySQL 8.0 security in details.
國防部 (DoD) 批准並發布了 MySQL Enterprise Edition 8.0 的安全技術實施指南 (STIG)。
該會議將在 STIG Viewer上提供具有 MySQL 安全性的演示。 我們將詳細介紹 MySQL 8.0 的安全功能。
=======
過去二十年來，我們見證了醫療行業的驚人增長，但這也造成了醫療系統資料標準不統一。當在個別系統間需要互相通信時，就會出現對通用語言的需求。 HL7 International 建立了 HL7 標準解決了這個問題。但儘管有了通用語言，它仍需要一個中央接口來幫助系統之間的連接。
Mirth Connect 是一個開源、跨平台的中央接口集成引擎。自 2006 年第一版推出以來，它已部署到超過 10,000 台服務器上。它成功的秘訣在於其開源策略，這也使它能夠輕鬆連接到開源數據庫後端，例如 MySQL。在本次會議中，我們將介紹這個已廣為使用的集成引擎，包括它的理念、技術架構以及連接各種醫療系統的能力。
=======
隨著網路時代快速的興起發展，以及硬體裝置的普遍，物聯網這個名詞慢慢地映入大眾眼簾，物聯網裝置除了應用在工廠場域、學校等公共場所之外，也擴及到了家庭與一般使用者端，透過物聯網裝置來打造生活應用，並改善與提升生活的品質，本議程，以PHP開發者的角度為出發點，看有沒有可能建置一個智慧家庭來提升與改善生活上的品質。
本議程的章節安排如下：
- 動機，在生活中所遇到的問題
- 物聯網與智慧家庭的基本介紹
- 物聯網裝置選用，自造or現成？
- 物聯網裝置選用後，基本裝置的設定
- IFTTT介紹與基本應用
- 物聯網裝置與IFTTT的基本連動應用
- 利用PHP開發Webhook與IFTTT的整合
- 完成後的應用介紹與Demo
- 成本估算&總結
=======
本次演講我會介紹我的 rrxv6 project，用 Rust 重製 xv6 核心。實作核心讓我使用許多跟 Rust core 有關的功能，是在平常使用 std 時不會特別使用的。我會介紹這些平常少用的功能如 pointer、記憶體管理等等。
我們可以用 Rust 實作 kernel 嗎？可以。  
現在已經有許多 Rust 實作的核心，像是瞄準在嵌入式系統的 Tock OS，或是通用型的 Redox OS，以及許多其其他他的核心。  
rrxv6 是我去年開始的專案，目標是打造一個 xv6 核心的複製品，沒有 std 的支援，我們必須重頭打造一個核心該有的功能，如排程、記憶體管理等等。我們使用了平常不會用到的 pointer、Rust 記憶體分配器等功能，不但重新學習作業系統，也更深入的了解 Rust；同時，Rust 也提供較 C 更為高階的虛擬化，即便少了 std ，rrxv6 核心的實作仍然非常 Rusty。
我希望 rrxv6 能成為如何用 Rust 打造核心時的簡單範例，不會如 tock os 或 Redox OS 般太過複雜而難以理解；一系統相關的文章發表在 blog 上，包括 Rust 的實作與 RISCV 的相關介紹。  
https://yodalee.me/series/rrxv6/
目前 rrxv6 開發到 system call 完成，已經能透過 system call 從 user space 印出 hello world；如有興趣可以參考 github。  
https://github.com/yodalee/rrxv6
=======
Our FLOSS GPU driver rock star Alyssa will be here (remotely) for the Q&A regarding GPUs and their open source drivers.
In this session, we have invited Alyssa, who has been famous for the Panfrost, the ARM Mali GPU driver, and the mesa driver stack for Apple M1 GPU (AGX).
This session will be presented in Q&A interview style.
We will run through the question list first, including how the reverse engineering on GPUs works, what kind of tools will be used and so on so forth.
Then we will be open for questions then :-)
=======
-
=======
李群是相當強大的連續空間轉換的數學工具。李群可以被應用於多個領域，包含機器人、自動控制、最佳化、微分方程等等領域。本次演講會分享我如何在 Julia 上實作一個簡單的李群套件 LieGroup.jl，利用這個套件來訓練一個虛擬機器人在三維空間中移動並轉向，並且讓機器人通過事先標定的空間位置完成任務。
=======
以筆者於桃園龍潭2010~2017年經營臉書社群平台之經驗與觀察，發起一連串的社區營造與行動計畫，主要探討虛擬社群平台所產生的空間形式之關係。並從線上虛擬經營與線下實際操作，進一步分析兩者之間能夠交互運作的關鍵點，以及補充兩者之間原有的不足之處。
本研究以參與式觀察與行動研究兩種方式做為研究方法，藉此了解這樣的經驗當中，所產生的現象與回饋到底是什呢？並以桃園龍潭為研究主要對象，從中了解，如何透過社群媒體的線上操作，與這些看不見的居民們做溝通，凝聚共識及社區資源盤點，再回到真實社會當中加以驗證，擴大傳統社區營造可能無法觸及的族群。
=======
I will share the research papers from IOTA Foundation (arXiv:2205.01345v1 and arXiv:2205.02177v1) and also explain why IOTA's approach can make it one of its kind project among the whole DLT landscape. The data structure and consensus protocol from first principle really make IOTA the hidden gem.
=======
O-RAN是什麼？ 是「黑輪」嗎？可以吃ㄇ？
5G O-RAN (Open Radio access network) 顧名思義就是「開放式無線電存取網路」，就是他讓下世代的 5G 網路智能化 (AI)，可以依需求自動的調節網路資源；就是他阻止了網路供應商的壟斷，讓不同設備互通性高，擁有大靈活度，進而降低消費者成本，並提供消費者更多選擇。
本演講除了簡介目前 O-RAN 聯盟在電信上的發展，更介紹O-RAN的實際應用，並在探討最O-RAN網路元件、介面與最新的 F release規範喔。
台灣關於 5G O-RAN 的技術文章，科普資源真的太少，讓我們加入 O-RAN SC 一起來開源吧！
到底有多open呢？
5G O-RAN擁有開源開發社群 O-RAN SC；開放式的網路元件及介面（O-CU, O-DU, O-RU）與無線電接取網路智慧控制器（RIC），開放任何廠商研發製造，讓設備容易採購與升級。
本演講除了簡介目前 O-RAN 聯盟在電信上的發展，更介紹O-RAN的實際應用，並在探討最O-RAN網路元件、介面與最新的 F release規範喔。
台灣關於 5G O-RAN 的技術文章，科普資源真的太少，讓我們加入 O-RAN SC 一起來開源吧！
=======
簡單說就是同樂會 — 有相同喜好的人、歡樂聚會的活動！BoF 是 COSCUP 每年的重頭戲之一，你們可以暢談彼此在相同主題上的新發現，又或者與其他只在網路上聊過天、卻沒見過面的「熟人」碰個面。
COSCUP 年會聚集開放源碼社群成員，是舉辦和開源、社群及開放文化有關開源相關主題 BoF 的絕佳環境！
歡迎開源社群在 COSCUP 期間舉辦 BoF 同好會！如果你想要預約 BoF 時段（每場次一小時），請至此[文件](https://docs.google.com/document/d/1Ac9VZQJXvpPoAcGJ7sZ-6mZSZp22T6ygN1X3-iH5DZ0/edit)閱讀注意事項並登記；同時，也歡迎在此宣傳場外自行舉辦的開源聚會！
想參加活動的會眾也可以在這份文件找到有哪些有趣的活動正在發生！
=======
過往很多 BoF 主揪敲碗每場次一小時不夠讓大夥暢談…我們今年提供不限時的 hacking room 空間！
Hacking Room 是一個能容納 30 人左右的交誼廳，供會眾自由交流！在這裡，我們不會限制你的活動長度；你可以在議程與議程間的空檔三五好友打十五分鐘的桌遊，也可以和志同道合的開源夥伴進行兩小時的衝刺開發，更有可能有多個活動在這個空間同時發生，要怎麼運用這個自由空間由你決定！
如果你想要揪人參與在 hacking room 舉行的活動，歡迎在此文件宣傳！
想參加活動的會眾也可以在這份[文件](https://docs.google.com/document/d/1Ac9VZQJXvpPoAcGJ7sZ-6mZSZp22T6ygN1X3-iH5DZ0/edit)找到有哪些有趣的活動正在發生！
=======
這邊將介紹一個，可以自動把原有的 Perl 程式加速許多的 library 的實作。
我會先解說 script language 效能不佳的主要因素，以及此 library 針對它們改善的努力。
另外也會介紹 Perl 這個以 dynamic type 或 untyped 為人所知的語言，裡面所留有特別多 type friendly 的特性，使得這個 library 可以在不額外增加標示的情況下，自動完成改進動作。
=======
Sketchup 是建築界常用的 3D 建模軟體，而 Ruby 則是程式語言，看似八竿子打不著的兩者，結合起來究竟能碰出什麼火花呢?
在本次議程中，講者將帶你了解到如何使用 Ruby 在 Sketchup 中進行自動建模，透過 Sketchup Ruby API 你將能完成怎樣子內容的專案。
=======
Shunsuke has visited many Pycons in each Asian Country (and more)  and hot springs there, he will talk about what happened there, the visit logs and more.
Shunsuke would love to see PyCon in various locations since he became the chair of PyCon JP in 2017, and he has visited many PyCons including PyCon APAC (Singapore) PyCon APAC Philippine, PyCon Taiwan, PyCon JP (Tokyo), PyCon mini Kyusyu(Okinawa and Kumamoto), PyCon mini Sapporo(Hokkaido), PyCon US(Portland, SLC) and many more, and I have also visited many hot springs there. I would love to talk about what happened on it and my visit logs.
=======
高市府農業局首開全國地方政府之先！推出Line版高雄農來訊，農友可一手掌握產銷資訊、防災告警資訊，讓產銷資訊可以一手掌握，加上原有之農產業資訊共通平台，不僅讓資料來源更加豐富、貼近農民，進而提高決策輔助的準確度。上面這些是2021年的新聞介紹，2022會有什麼新內容呢？敬請期待！
農來訊持續推動農產業智慧化，今年完成2項AI應用，包含影像辨識的"木瓜熟了沒？"，以及數值分析的"大智莊稼"，希望透過兩項服務，嘗試農產業AI應用的可能，並引導農民瞭解智慧農業；同時有關成果也提供開放API，提供有興趣的開發者可以進一步開發應用，並規劃農民補助方案，降低建置成本，協助智慧農業落地生根。
=======
講者將分享去年參加 Google Summer of Code(GSoC) 的心得。GSoC 是一個全球的線上活動，旨在使更多新人加入開放原始碼貢獻的行列。每位參加者將會與一個開源社群合作，並與一位mentor配對，在mentor的指導下進行12周以上的專案。分享內容涵蓋 GSoC 的申請經驗、參與過程與心得感想。並會開放 QA 且力邀應屆 GSoC 參與者一起參與問答。是想參加 GSoC 的同學不容錯過的議程喔！
- 開場
- 自我介紹
- 什麼是 GSoC
- 如何開始？
    - 找專案
    - 寫提案
    - 找人
- 申請經驗
    - 如何寫？
    - 何時開始？
    - ![](https://i.imgur.com/KwjCpyr.png)
    - 看範例
        - https://docs.google.com/document/d/1SR6yoOnKd0FSmgLmuOmw0QROLoNK1QwWJrgP1rKT7Q4/edit#heading=h.ll13ddk4b2am
    - 如何接觸 Mentor？
        - 一定要先認識，但不用很熟
- 參與過程
    - https://summerofcode.withgoogle.com/projects/#6124590243250176
    - （請見投影片）
- 心得感想
    - （請見投影片）
- 常見 Q&A
    - 把上次在 GDSC NTNU 工作坊覺得很經典的 Q&A 拿來回應
- 討論：用 Slido 後續問答
投影片連結：https://tg.pe/xE6f
=======
Verilator是一個日漸受到矚目的開源模擬工具，透過將Verilog/SystemVerilog轉成C++進行模擬。借助開源的Verilator我們可以透過其的一些特性，更快更方便的建構出開源的處理器測試環境。
本次將分享透過開源的RV32IMA Aquila Core來介紹透過Verilator搭建測試環境的基本方式，以及最有名的Rocketchip或是riscv-sodor或是cva6來看當今完整處理器下透過riscv-debug-spec的支援來進行的測試方式。
=======
台灣維基媒體協會協助台灣推廣維基計畫的團體推廣維基，協助申請維基基金會的聯盟補助。2022年度有三個組織成功申請，這次COSCUP請到兩個團體的代表，新樂園藝術空間與OpenStreetMap，來分享從撰寫提案，到回答審查委員的意見與質疑，以及目前執行的狀況。
=======
Software Transactional Memory (STM)提供程式設計師一套更抽象化的同步套件，與 lock機制不同的地方在於，STM 將記憶體保護責任由使用者下放至系統層級，不僅能有效防止
deadlock情形，更能在多執行緒下有更好的可擴充性，本議程將由介紹 STM基本機制出發，說明 STM現階段問題，最後帶出我們使用 coroutine達成 STM動態排程並提升 STM library效能。
Agenda: 
- Introduction to STMs
- Three limitations of the traditional STM system
- How to use the coroutine for STM dynamic scheduling
- Performance evaluation
- Conclusion
=======
OCF 過去數年跟不少社群夥伴，一同參與了眾多開源和開放科技相關國際會議，而在過程當中除了認識國際夥伴開啟實質合作，更有臺灣參與者加入會議中認識的國際夥伴行列，成為跨國國際工作者！這個議程，將有兩位夥伴現身說法，分享如何從參與 RightsCon、Internet Freedom Festival 等活動，以開源技術人的身份融入國際上開放科技、數位人權、網路自由的大社群並找到更多機會。
此外，透過這兩位資深的國際會議參與者／國際組織現職工作者，也將跟大家分享，還在臺灣但對國際會議、國際組織不熟的你，該如何著手開始參與？有哪些資源可以馬上取用？
本議程由開放文化基金會作為規劃、主持者，邀請過去跟我們合作參與國際會議，並最後在國際組織開拓職涯的夥伴現身說法擔任與談講者，提供 COSCUP 此議程最貼切、最實戰、且長期耕耘國際會議和人脈的相關經驗分享。
本議程預計以 Panel 的形式，由 OCF 邀請兩位與談人分享過去五年親身經驗，介紹從台灣到國際社會的職涯發展路徑。並且搭配與 OCF 合作的攤位，提供面對面的諮詢時間，協助更多有志於此的夥伴加入此道。
=======
簡單說就是同樂會 — 有相同喜好的人、歡樂聚會的活動！BoF 是 COSCUP 每年的重頭戲之一，你們可以暢談彼此在相同主題上的新發現，又或者與其他只在網路上聊過天、卻沒見過面的「熟人」碰個面。
COSCUP 年會聚集開放源碼社群成員，是舉辦和開源、社群及開放文化有關開源相關主題 BoF 的絕佳環境！
歡迎開源社群在 COSCUP 期間舉辦 BoF 同好會！如果你想要預約 BoF 時段（每場次一小時），請至此[文件](https://docs.google.com/document/d/1Ac9VZQJXvpPoAcGJ7sZ-6mZSZp22T6ygN1X3-iH5DZ0/edit)閱讀注意事項並登記；同時，也歡迎在此宣傳場外自行舉辦的開源聚會！
想參加活動的會眾也可以在這份文件找到有哪些有趣的活動正在發生！
=======
簡單說就是同樂會 — 有相同喜好的人、歡樂聚會的活動！BoF 是 COSCUP 每年的重頭戲之一，你們可以暢談彼此在相同主題上的新發現，又或者與其他只在網路上聊過天、卻沒見過面的「熟人」碰個面。
COSCUP 年會聚集開放源碼社群成員，是舉辦和開源、社群及開放文化有關開源相關主題 BoF 的絕佳環境！
歡迎開源社群在 COSCUP 期間舉辦 BoF 同好會！如果你想要預約 BoF 時段（每場次一小時），請至此[文件](https://docs.google.com/document/d/1Ac9VZQJXvpPoAcGJ7sZ-6mZSZp22T6ygN1X3-iH5DZ0/edit)閱讀注意事項並登記；同時，也歡迎在此宣傳場外自行舉辦的開源聚會！
想參加活動的會眾也可以在這份文件找到有哪些有趣的活動正在發生！
活動紀念品就像紅花旁邊的綠葉，雖然沒什麼人討論、但其實紀念品做得好，也能點亮活動本身！
（大家看到厲害的紀念品一定會忍不住轉發的吧～）
但是，每次在想紀念品的時候卻總是絞盡腦汁，左思右想卻想不出個好點子；
又或者剛好錯過了某次活動，因為再也拿不到那個限量的酷東西而扼腕呢？
這裡，讓我們來交流吧！
我們一起來討論，怎樣的紀念品：做起來沒負擔、拿的人很喜歡！
也會同時舉辦紀念品交換大會、除了交流外，說不定真的能換到最適合你的小物喔❤️‍🔥
如果可以，希望大家可以準備：
* 一個自己超喜歡的活動紀念品（炫耀用）
* 一個想要跟人交換的紀念品
但是空手來也超歡迎的啦！
備註：不一定要是社群活動拿到的，商業活動、公司員工贈品，甚至是股東會的都可以呦！
=======
We’ll talk about how Kubernetes has progressed from 1.23 to 1.24 and now to 1.25 including how Kubernetes releases are more secure. We’ll also cover new features that are planned for 1.25. We will then look at key trends in the project, what kinds of challenges the community faces and how you can get involved.
We will also celebrate the work done by CNCF contributors from Taiwan! This talk is geared towards everyone from Kubernetes newbies to advanced users.
=======
Ruby on Rails 是個歷久彌新的 Web 開發框架，講者從 Rails 1.1 用到 Rails 7，將分享一路走來個人和小型團隊開發 Rails 專案的經驗，包括:
* 接手舊專案改造再生
* 貫徹和發揮 Rails monolith 單體精神
* 物件導向 anti-patterns
* 路由設計 case study
* 現代前端(Vue.js)的整合方式
* 各種有用的 Rails Tips 等等
=======
在 Steam Deck 宣布採用以 Arch Linux 為基底開發的作業系統之後，似乎代表了 Arch Linux 不再是那麼地難以上手、高不可攀。倒底 Steam 採取了怎麼樣的設計來讓 Arch Linux 變得平易近人？Container 與 Flatpak 又在 Steam Deck 上扮演了什麼角色？在 container 如此勢不可擋的今天，對傳統的 unix 思維與使用習慣帶來什麼改變？
=======
Aptos 是前 Facebook Diem 區塊鏈團隊獨立自組的新 Layer 1 底層公鏈，提供更高的效能（每秒處理超過十萬筆交易）、更好的使用與開發體驗、和更先進的智慧合約開發語言（Move VM）。
這個分享會包含 Aptos 的特殊區塊鏈機制、智慧合約語言、帳戶系統，讓你了解他們端出了什麼新菜
=======
介紹不同種類NFT的應用情境，包含 ENS, Soulbound Token, POAP，以及Writing NFT
NFT只能用來炒做賣錢嗎?
有沒有其他實用又有趣的用例呢?
來看看NFT在不同宇宙中的多重功能吧!
=======
Longhorn is a Kubernetes cloud native distributed block storage solution. Longhorn only supported one CRD version, v1beta1, prior to v1.3.0. We introduced a new API version, v1beta2, to stabilize the API and align the CRD representation with the upstream Kubernetes project in v1.3.0. In this talk, we'll go through multi-version CRDs and how to upgrade Longhorn API using the conversion webhook.
=======
這次分享 K8S 的 autoscaling 的工具，以及預設 HPA 不足的地方可以怎麼突破，適合正在導入或者正在找尋 K8S 更好的 scaling 工具的聽眾，並且分享我們寶貴的產線失敗經驗，讓大家可以少踩一些坑。
=======
Foundry 是一個由 Paradigm 從 Solidity 開發工具，全由 Rust 撰寫，本次議程希望給原本使用 Hardhat 的開發者可以快速上手 Foundry
=======
The presentation mainly introduces how engineers at Space Technology Laboratory, Tamkang University take advantage of open-source software to empower and accelerate the development of sounding rockets in Taiwan.
=======
To add more entertainment value to NFT, the blind box trend has been led since last year. Accordingly, it's essential to ensure that the "redeem blind box" is fair. “Fairness“ means that each blind box must have a fair chance of getting one of the unrevealed NFTs. However, it's not easy to generate fair random numbers on the blockchain because each usage of operation and space will increase the gas costs. Therefore, the cost reduction in an efficient manner is well worth exploring. 
In this session, firstly, we will introduce some general random number generators. Secondly, present another approach to reducing the gas cost via the "binary operation" concept which came from AMIS engineers. Finally, we will show the benchmark to reveal the gas comparison for the above methods.
=======
因 5G、AIoT、工業 4.0 應用爆發，電腦化、數位化和智慧化的轉型讓供應鏈攻擊事件不斷發生，導致近年來供應鏈資安已成為全球皆關注的議題。而開源軟體 (Open Source Software) 在這幾年成為資通訊領域的主流趨勢，舉凡從 5G (ORAN)、區塊鍊、 AI、Cloud、到嵌入式設備等等，從應用層到 driver 層都已經被大量使用。從消費端到工業應用，業界已非常頻繁的使用開源軟體作為元件來整合或進行二次開發。於是乎，如何打造開源安全供應鏈就是個非常重要的課題。
Linux Foundation 官方專案 OpenChain 致力打造一個可提供開源信任且合規一致性資訊的供應鏈。 OpenChain 在 2020 年發布了 ISO/ IEC 5230 OpenChain 國際標準，透過流程管理規範，用於識別應存在組織流程、政策或培訓的內外出入口。搭配 Software Bill of Material (SBOM) 來識別和追踪使用和實際產出部署的軟體之合規狀態。因為此流程可有效識別和追踪使用和實際產出部署的開源軟體，於是 OpenChain 將涵蓋的範圍延伸到安全以及出口控制，並且在今年發布了 OpenChain 開源軟體安全保證參考規範。
OpenChain 開源軟體安全保證參考規範內容注重論述 "What" 跟 "Why"，而不是深入研究 "How" 和 “When”，以確保任何規模和任何市場的公司都可以彈性地使用此參考規範。其內容包含檢查開源軟體與相關安全漏洞、GitHub/GitLab 漏洞報告等公知的安全漏洞。
此次分享，SZ 會介紹 OpenChain 開源軟體安全保證參考規範的關鍵要求，組織可透過相關要求打造開源安全供應鏈，並在不同組織間建立信任以交換由開源軟體組成的解決方案。
=======
What's new in PostgreSQL 15
=======
本議程介紹 rv32emu 這個精簡的 RISC-V 指令集模擬器，支援大部分 RV32I 和 Extension M/A/C。除了典型的直譯器，近期也規劃及時編譯器以加速指令模擬，貫徹「小而美」的原則。
rv32emu 最初是國立成功大學資訊工程系計算機結構課程的教材，示範具體而微的 RISC-V 指令集模擬器如何逐步建構，程式碼少於四千行，內建 ELF 載入器，並在 Linux 和 macOS 進行多項測試。經由師生合作後，現已通過 RISC-V 架構測試 (RV32I)，並陸續支援 M/A/C 等 extension，還提供繪圖處理的系統呼叫，允許 Doom 和 Quake 遊戲在該模擬器上執行。近期將實作及時 (just-in-time) 編譯器以加速指令執行，但依舊維持程式碼的精簡。
專案頁面: https://github.com/sysprog21/rv32emu
=======
“Design bitcoin for everyone”. That is the tagline of the [Bitcoin Design Community](https://bitcoin.design), which formed in the middle of 2020. It is an open community with the goal of making bitcoin more intuitive and accessible. Our central community project is the [Bitcoin Design Guide](https://bitcoin.design/guide), which is full of best practices and references to help both designers and developers create better bitcoin experiences faster. We also work to promote the idea of [open design](https://bitcoin.design/guide/getting-started/open-design/), to bring more designers and other contributors into the space, help open-source projects adopt better design processes, and create more inclusive outcomes. This presentation will provide an overview of community efforts, practical stories of what has worked and what hasn’t, where we are, and what the future might hold.
=======
Riscduino is a 32 bit RISC V based SOC design targeted to be pin compatible with arudino platform.  Multiple version of this SOC design has been tape-out is part of efabless Shuttle program. This project uses only open source tool set for simulation,synthesis and backend tools. The SOC flow follow the openlane methodology and SOC environment is compatible with efabless/carvel methodology.
Key feature of Riscduino SOC
    * Open sourced under Apache-2.0 License (see LICENSE file) - unrestricted commercial use allowed.
    * Single/Dual/Quad 32 Bit RISC-V core
    * 2KB SRAM for instruction cache 
    * 2KB SRAM for data cache
    * 2KB SRAM for Tightly coupled memory - For Data Memory
    * Quad SPI Master with 4 Chip select, supports both SPI flash and SRAM interface
    * 2 x UART with 16Byte FIFO
    * USB 1.1 Host
    * I2C Master
    * UART Master
    * Simple SPI Master with 4 Chip select
    * 6 Channel ADC (in Progress)
    * 6 x PWM
    * 3 x Timer (16 Bit), 1us/1ms/1second resolution
    * Pin Compatbible to arudino uno
    * Wishbone compatible design
    * Written in System Verilog
    * Open-source tool set
       * simulation - iverilog
       * synthesis  - yosys
       * backend/sta - openlane tool set
    * Verification suite provided.
Git Repo Path: 
Riscduino Single Core: https://github.com/dineshannayya/riscduino
Riscduino Dual Core: https://github.com/dineshannayya/riscduino_dcore
Riscduino Quad Core: https://github.com/dineshannayya/riscduino_qcore
=======
南台灣唯一指定行動科技年會，就是 MOPCON。
今天不戰南北，來聊天抽卡牌遊戲，
卡牌問題都是用來 CON CON 你是否是真程式工程師、真網路遊俠、真高雄粉。
至於要聊什 MO 嗎？順著卡牌聊美食、聊迷因、聊程式仍至於他的父親，還有～
為什 MO 要來 COSCUP ？ 最近想做什MO Side project？
我們為什 MO 要當志工？打 code 當邊緣人涼涼過日子不好嗎？
MOPCON 還在找志工喔！場務、公關、媒體、攝影歡迎參觀選坑。
=======
We will have a look of how Python is used in Debian and its derivatives like Ubuntu. For example, what "software components" Python "glues" in such GNU/Linux distribution are, and how to implement them. If you are a user of Debian or Ubuntu, you may be surprised that you are using so much Python everyday.
The father of Python, [Guido](https://en.wikipedia.org/wiki/Guido_van_Rossum), published his famous essay "[Glue It All Together With Python](https://www.python.org/doc/essays/omg-darpa-mcc-position/)" in 1998. People probably started to descript Python as a glue language since then.
A GNU/Linux distribution is a collection of software components, including applications and libraries.
As a GNU/Linux distribution, [Debian](https://en.wikipedia.org/wiki/Debian), and Debian's derivatives, e.g. [Ubuntu](https://en.wikipedia.org/wiki/Ubuntu), they use Python to "glue" themselves as well.
In this talk, I am going to talk about some examples of how Python works as a glue language, including as a scripting language, in the (GNU/Linux Debian/Ubuntu) distributions, and the examples of how the glue of Python is made. By understanding the "glue role" of Python in these distributions, it will help users and developers know their own distribution more.
=======
每當 Linux kernel 開機後，就將交手給 User space 的第一支程式 init。接著，就開啟了各 Linux distribution 的特色旅程。本次將以 Busybox 為例，分享 Linux kernel 如何去找到這要執行的 init，如何導向 Busybox。以及 Busybox 執行起來後，要做哪些事，如何取得 console ... 等。像極了簡約風格的 Linux System
當 Linux kernel 要交手給 init 程式前，需要先支援 file system 與該 storage 的 driver/module，才找得到 init 程式。Kernel 的 boot command 也需要指定 root device 與 file system，才能正確掛載 root file system。而 init 導向執行的 Busybox，因為其基礎功能豐富、需要儲存空間也小，是支輕巧好用的程式。因此，也常用在需要簡化系統環境的嵌入式 Linux 系統上。
本次會先以虛擬環境為例，再實際於 Raspberry Pi 上示範。
=======
Apache Kafka 爲目前熱門的分散式事件串流平臺，本身自帶各種豐富的功能，比如 Replication, JBOD, Authn/z, Encryption, Compression, At-most/At-least/Exactly once Delivery, Transaction，目前常見的 Kafka 應用包含：高吞吐量的資料管線、串流分析應用和資料整合中介軟體。
隨著叢集經歷上層應用的業務需求增長以及叢集資源使用變化，Kafka 叢集在經過這些現實情境的摧殘後，勢必會遭逢負載不平衡的情況， 放任負載不平衡的情況不顧，最終叢集會遭遇效能瓶頸和叢集穩定性問題。
我們提出了一個開源的高彈性的叢集負載平衡工具 - Astraea Balancer，藉由搬移計劃生成和滿足特定平衡目標的打分機制來做到負載平衡，協助管理者持續維護叢集的和平。
本研究特別感謝『科學園區計畫-自主高效串流資料管理平台與新興應用』和『教育部開源人培計劃』的支持。
Apache Kafka 爲以 JVM 為底的熱門分散式事件串流平臺，本身支援豐富多變的功能和高擴展性，方便上游應用利用，現今 Apache Kafka 已經被許多知名企業採用於生產環境。
由於業務需求和叢集資源使用的改變，Kafka 叢集勢必會遭逢負載不平衡的情況， 放任負載不平衡的情況，最終叢集會遭遇效能瓶頸和叢集穩定性問題。
對此我們提出了一個開源的 Kafka 叢集負載平衡工具，於伺服器端解決問題：
* 高彈性架構：負載平衡目標可重新定義，套用自己在意的負載平衡目標對症下藥
* 自動把關負載平衡過程：Kafka 伺服器端的負載平衡涉及很顯著的資料複製代價，我們將有一個機制確保負載平衡不影響上游應用運行。
=======
區塊鏈的瓦斯費貴得要死，進行一次交易的手續費價格居然可以幫國小生買二十份營養午餐....。在State channel/Plasma後, 以太坊的網路還能用什麼方式來增加吞吐量？各種sidechain/rollup風起雲湧，被視為生命、宇宙終極問題的答案的zk rollup究竟又是什麼東西呢？ 本演講將試著解析zk rollup的核心技術之一，zkEVM，來看看區塊鍊技術在2022發展到了哪裡，能對區塊鏈的吞吐量及運算能力有什麼幫助。
Keywords: 
#Prone to change
=======
台灣有傑出的半導體產業與晶片設計公司, 但是在產業端要招募AI 晶片設計人才困難重重, 在大學端的教育機構, 要如何能協助有志於AI 晶片設計的學子, 能一窺AI晶片設計的世界, 了解他們應該具有的知識儲備, 了解AI晶片設計的基本流程, 與在AI晶片設計的行業裡的工作性質, 是這個短講, 我們希望討論的主題, 在這個短講中, 我們會同時介紹成功大學敏求智慧運算學院中, 人工智慧運算架構與系統該入門課程開源的實作教材, 讓更多有興趣學習人工智慧晶片設計的入門者, 能參與該課程或是透過實作教材的練習, 得到更多的儲備知識與啟發, 在短講裡也會討論該實作教材的設計理念與初衷, 以及與國際接軌的設計細節
=======
A plugin that performs automatic differentiation (AD) of statically analyzable LLVM.
Talking about what is Enzyme and how to use it in Julia.
=======
"Captain's log, stardate 41153.7". Stardate is the calendar used in Star Trek. See how Stardate is connected throughout the Star Trek series.
Stardate uses Apache Hop to import into the Neo4j graph database from many StarTrek sites.
Next, add relationships.
Time travel is complicated by multiple Stardate.
There can be multiple Stardate within a single story.
This graph should help you understand how Stardate work.
Now you are one of the Trekkies.
=======
如果一個 Chatbot 有極大量的使用者，又串接了自己訓練的NLP Model，那麼 back-end service 同時要 inference 這麼多使用者的自然語言，想必會是一個瓶頸。為了解決這類的問題，Nividia 推出了一套開源的 inference server 工具，Triton，可以在 GPU 或 CPU 上部署模型，將 GPU/CPU 利用率最大化，以達到更快速的 inference。
本次演講會介紹 Triton Inference Server，並且透過實際範例將 NLP Model 部署進去 Triton。
Chatbot 要串接到自己訓練的 NLP Model，那麼就需要建立一個 back-end service，讓使用者的自然語言送到 back-end service 裡做 inference，並回傳結果到 Chatbot。可是如果這個 Chatbot 有極大量的使用者，那麼 back-end service 同時要 inference 這麼多使用者的自然語言，想必會是一個瓶頸。為了解決這類的問題，Nividia 推出了一套開源的 inference server 工具，Triton，可以在 GPU 或 CPU 上部署模型，使用動態批次處理和並行模型執行等功能，將 GPU/CPU 利用率最大化，以達到更快速的 inference。
本次演講會介紹 Triton Inference Server，並且透過實際範例將 NLP Model 部署進去 Triton。
=======
本次分享將會分享近年來非常熱門的 eBPF 是如何從不同層面，如網路，監控，安全等面向來強化你的 Kubernetes 叢集。
eBPF 近年來聲勢浩大，其使用面向與方式逐漸清晰，本次的分享將會介紹基本的 eBPF 概念並且探討如何使用 eBPF 從不同的角度， 如網路，安全，監控，維運等各種面向來強化 Kubernetes 叢集，對叢集與維運人員帶來何種改善與能力，最後也會聊聊維運人員該基於何種心態與想法來面對 eBPF 的熱潮。
=======
JasonQuery is a lightweight, portable and easy-to-use database tool designed for programmers.
You can use the same friendly GUI to connect to major databases like PostgreSQL/Oracle/MySQL/MariaDB/SQL Server.
JasonQuery 是一套超輕巧、免安裝、支援多國語言的資料庫工具軟體，提供自動檢查新版本及一鍵更新功能。
友善的操作介面，支援常見資料庫 PostgreSQL/Oracle/MySQL/MariaDB/SQL Server。
超多您意想不到的實用功能，非常值得您花 30分鐘了解一下它的特別之處。
從2018年開發至今，持續修正bug，並不斷地開發新的功能。
+Portable, multilingual, lightweight and easy-to-use
+Support new version checking and one-click update
+Support PostgreSQL/Oracle/SQL Server/MySQL/MariaDB
+Connect to Oracle directly through TCP/IP protocol without involving the Oracle Client
+Advanced SQL editor with syntax highlighting
+Support Paging Query(customized)
+Support Auto Replace(customized): Keyword binding for favorite queries, such as "sf" => "select * from"
+Automatically detect parameters, such as "WHERE id = :id AND name = :name"
+Automatically direct to wrong location of SQL statement and display error message
+Press Ctrl+Enter to execute whole paragraph of SQL statement quickly. You don't need to select the entire paragraph yourself.
+SQL History: Quickly search, copy and delete previously executed SQL statements
+Schema Browser: List Table/View/Function/Trigger and related information
+Support non-Query batch execution: for example, when you execute 1000 "update" statements at a time, there is a progress bar window which can be cancelled or interrupted by CANCEL button.
+In these two places, SQL Editor and Data Grid, you can use Ctrl+Mouse Wheel to zoom in/out
+Customizable appearance: You can customize the appearance & configurations that best match your personal taste. Need a dark theme? JasonQuery has it all.
=======
在維基條目與開放街圖的編輯中，街景照片作為參考資料有著無可替代的重要性。本次議程著重於如何將現有的360相機圖片，上傳至以創用CC授權的街景服務平台，內容包含但不限於：
1. 街景拍攝的心得分享
2. 360相片的基本原理
3. 照片的前處理
4. 批次上傳的作業細節
OpenStreetMap 臺灣社群今年度有幸爭取到維基媒體基金會的聯盟補助，除了購置了兩台 Insta360 相機之外，也規劃一系列的街景踏查活動與編輯工作坊。
社群成員以行車方式搭配360相機進行街景紀錄（目前涵蓋北海岸與部分北部山區）之後回到電腦前將照片進行處理，再上傳至街景服務平台，最後循著照片與相關軌跡在OpenStreetMap 添加資料。
本次議程將會提到這些活動的相關資料，以及社群成員在拍攝 360 相片之前與之後的一些作業細節。
議程相關資源：
https://topo.tw/p/2022.07.30/
=======
-
=======
分享使用樹莓派打造自己的智慧溫室幫你養植物。因為自己熱愛豬籠草，在找不到市售適合的溫室之下，開始打造自己的智慧溫室，可以自動控制光照、溫度與濕度，並且能依照每小時設定不同的變化，並提供網頁界面，程式主要使用 Python，整個程式都會開源讓大家自己打造。
使用樹梅派 + Python 撰寫能自動控制溫濕度的溫室，透過 GPIO + Relay 來控制電器 (植物燈、風扇與加濕氣) 來養豬籠草，並使用 Flask 打造網頁的界面，能看到數據，紀錄每天的光照、溫濕度，甚至可以在網頁上控制電器。我將分享製作的整個過程、挑戰與問題，內容不會談到太多的程式碼，只會看到系統的架構，並概述會用到的感測器，電子電路，全部都會在議程中公開，還會分享養豬籠草的經驗談 XD，歡迎同好一起加入。
=======
COSCUP 今年實體回歸，在無論好奇超過三百場議程是怎麼煉成的，或是第一次參加 coscup 被同時十幾軌議程嚇到選擇障礙，都可以在這個議程聽到 COSCUP staff 分享。
適合參加者：會眾、講者、社群夥伴、有興趣參與 2023 籌辦的人
=======
如果你平常就有在寫PHP 或者考慮要入坑PHP 都可以來聊聊你有那些問題想要解決。像是要不要用框架，要用哪個框架，有哪些套件可以用，或者不用套件可以怎麼寫，都可以來聊聊。
=======
「Flex 開發人員工具」是講者為了輔助開發 LINE chatbot 而製作的小工具，它主打的功能是在收到 Messaging API 的 Event 時會直接回傳 JSON，如果傳送 Message JSON 或是 Flex Message Simulator 複製的 JSON 給它，你還能直接看到這個 JSON 的呈現結果！在這個議程內將會詳細介紹這個小工具的使用方法。原始碼以 MIT License 釋出: https://github.com/taichunmin/gcf-line-devbot
=======
NLP對多數人來說似乎是有點陌生又有點熟悉的名詞，我預計在此場議程中快速地讓大家了解NLP，並使用Google Colab以及NLP領域最大的開源社群Hugging Face，來輕鬆體驗NLP到底可以做哪些事?
「呃…自然語言處理? 那是做什麼的阿?」每當我回答我的畢業專題是做自然語言處理的時候，大多得到這樣的回覆。
「簡單來講就是AI寫小說、自動翻譯那種啦。」但當我舉出實際的例子時，大部分的人就會搞懂了。
自然語言處理(Natural Language Processing, NLP)，對多數人來說似乎是有點陌生又有點熟悉的名詞，但其應用卻已經廣泛出現在我們的生活中。我想透過這場議程中帶大家快速的了解NLP，以及Google Colab和NLP領域最大的開源社群Hugging Face，輕鬆體驗NLP到底可以做哪些事? 
我以前是也在台下聽演講，常常聽完後根本聽不懂台上說了什麼。所以我只會講最基礎的部分，就算不了解NLP的人也歡迎來聆聽!
=======
2016 年 9 月，GitHub 增加了一個新功能是偵測並顯示專案使用的授權條款，不過有支援的授權條款並不多，只有比較有名的那些授權條款。當時講者是個重度的 Vim 使用者兼擴充套件開發者，也一直對 Vim 所使用的特別的 Vim License 有所認識，於是我也在 GitHub 推出這個功能後不久，就發現到他們的授權條款偵測功能並無法辨認到 Vim License，由於 GitHub 用來偵測授權條款的部分是使用開源的函式庫，這也讓我興起了透過貢獻開源專案來讓 GitHub 可以偵測到 Vim License 的念頭，結果這個想法，花了將近五年的時間才終於到達終點，這場分享就是這將近五年時間，我的所知和所學的彙整。
- The license detection feature of GitHub
	- Choose a license
	- Detect and display the license
- How to contribute new licenses to GtiHub
- The Licensee lib
- choosealicense.com
- SPDX license list
- Vim License
	- Software name?
	- The maintainer?
	- Who is using it?
- Implement
- The unexpected issue
	- The issue
	- How to solve
- Release!!
=======
SystemReady 是 ARM 提出的一系列硬體認證. 這個 session 將展示 SystemReady 的意義, 以及實作上的一些內容.
目前已經有許多硬體獲得 SystemReady IR 的認證. 在這個 session 中我們將展示 SystemReady IR 於 imx8mm 上的成果. 以及 SystemReady 將對整個 ARM 開發環境做何影響. 以及硬體商在實作 SystemReady IR 時可能會遇到哪些問題.
=======
舊年佇咧呼籲逐家濟濟參與維基來寫臺灣話的維基百科佮Wikidata，這馬欲來講，過了一年矣，有啥物新的變化。
欲來講閩南語維基百科的狀況，猶閣有Wikidata遮的問題，
* 發見台北市村里資料重複建立的問題，進前有閩南語維基百科建立的的村里，無予人發見
* 大量閩南語維基百科條目，無對應著 Wikidata 項目，跨維基百科無仝語言的連結，猶閣有資料庫之間的連結無人來創
* 雖然講會當佇閩南語維基百科寫台文漢字的條目，閣共條目透過永久重複項來連 Wikidata，整體無啥人來寫百科條目
=======
Bufferbloat 是現今在有限頻寬的網路環境中常見的問題，而在 Linux kernel 中實作了 fq_codel 這個機制來解決。本議程將會帶來 bufferbloat 與 fq_codel 的介紹，並且帶聽眾讀過 Linux kernel 中的實作。
Bufferbloat 是現今在有限頻寬的網路環境中常見的問題，而在 Linux kernel 中實作了 fq_codel 這個Active Queue Management (AQM) algorithm 來解決。本議程將會帶來 bufferbloat 與 fq_codel 的介紹，並且帶聽眾讀過 Linux kernel 中的實作。
- Bufferbloat 介紹
- fq_codel RFC8290 介紹
- fq_codel 在 Linux kernel 中的實作
- 簡短 Demo
=======
We propose using the scientific method to develop a deeper understanding of CPU schedulers used in Linux kernel. From these observations we are able to infer the underlying CPU scheduling policy and create models that predict scheduling behavior. Meanwhile, we would talk about CPU scheduler improvements which aim to be efficient and scalable for interactive tasks.
=======
Open design panel at COSCUP 2022
June 3, 2022
This is a proposal for the Open Design track at COSCUP 2022 for a 30-minute panel discussion.
Goal
To share personal experiences and insights from different designers about their experience in open-source. This may help other designers better understand what the opportunities and difficulties are.
Title
Open Design: Stories from the trenches
Details
We invite several designers on the stage and learn about their personal journeys, problems they have faced, what gets them excited every day, and their perspectives on open-source. After 20 minutes of discussion, we will open the floor up to questions.
Participants
All participants are experienced designers active in the open-source space, each with a different background. This list might change based on availability and in order to ensure we have a diverse set of designers.
Christoph Ono
Bosch
Stephen DeLorme
Conor Okus
Edward Pratt
We invite several designers on the stage and learn about their personal journeys, problems they have faced, what gets them excited every day, and their perspectives on open-source. After 20 minutes of discussion, we will open the floor up to questions. All participants are experienced designers active in the open-source space, each with a different background:
Christoph Ono
Bosch
Stephen DeLorme
Conor Okus
Edward Pratt
=======
MEV(Maximal extractable value) 指的是礦工因為擁有打包/排序交易的絕對權力，所以能從鏈上活動中提取（跟使用者搶錢）的價值。對開發者而言，首先要避免 DApp 成為被提取 MEV 的來源，不過也可以反過來透過主動創造 MEV，根據合約設定的條件付款，讓區塊創建者/礦工成為 DApp 的服務提供者。本議程將介紹正面使用 MEV 的幾種方式。
常見的 MEV 應用情境包括：
優先 mint NFT、智慧合約/DeFi keeper、代付手續費（meta transaction）等
=======
加入世界級團隊！​
​由 ​CMoney、foodpanda、漸強實驗室、新加坡商鈦坦科技、KKCompany 等公司​，為 COSCUP 會眾現場介紹量身打造的職缺​！​
=======
- What is L2?
- Current development of L2s
- What's the bottleneck of L2s?
- What are the current WIPs to scale L2?
=======
這個議程我們會介紹10個台灣新創農企業，並提供實行生招募的資訊說明。歡迎想入坑的新鮮人來聽聽問問。
如果您是農企業，也想找實習生，歡迎連繫COODFA社群聯絡人柴哥 atripr2018@gmail.com。
=======
介紹 GIN Index
GIN Index 的歷史及其應用,包含 JSONB 資料型態還有 full text search的使用案例.
=======
# 台科不分系學姊
「台科不分系學姊」是一款專為台科全校不分系新生製作的 LINE 聊天機器人，為了解決每年全校不分系新生入學時的困惑，因此由本人主動發想、設計並完成此專案，目前提供**選課解答**、**畢業條件**和**校內大小事通知**等功能。
=======
帶著大家一步一步安裝 Arch Linux ，從只有 Command Line 的黑底白字畫面到漂亮的桌面環境，打造屬於自己的作業系統。
歡迎帶實體機來安裝！
在安裝的過程中說明平常用 GUI 安裝介面的時候到底都發生了什麼事情，並且只安裝自己需要的套件，沒有任何不必要的預裝軟體，未來發現系統有問題要除錯時也能比較清楚是哪個部份有問題。
=======
Jetpack Compose is the new next generation UI toolkit. It uses a declarative component based paradigm for building UIs easily and quickly. It’s written entirely in Kotlin and embraces the style and ergonomics of the Kotlin language. The goal of this talk is to help developers get familiar with this new programming model. To do so, we're going to build a mood tracker application, Kimoji, completely from scratch.
The goal of this talk is to help developers get familiar with what and how Compose can achieve in modern Android development. To do so, we're going to build a mood tracker application, Kimoji, completely from scratch. 
For this talk, we're going to take a bottom-up approach and start by building the "Memory" composable. Here, we'll talk about some useful ways of how to compose the app's UI out of Composable functions.
And then we'll move on to building the "Headquarters" to create new memories, where we'll get to understand a little bit about how Compose manages state.
Finally, we'll tying all of these pieces together at the top level and talk a bit about app architecture.
This talk should be pretty helpful for developers to get an idea of how modern UI development in Android works, and how they can turn designs into working implementations all using Jetpack Compose and Kotlin.
=======
Open Source for Good helps our lives and systems in so many ways. An example is the introduction of Open Streets Map which is a free,  editable map of the whole world which is maintained by volunteers. In most parts of the world, Geo-data is not free and you won’t have full access to it but OSM gives you access to the Geo-Data.
Open Source for Good helps our lives and systems in so many ways. 
An example is the introduction of Open Streets Map which is a free,  editable map of the whole world which is maintained by volunteers. In most parts of the world, Geo-data is not free and you won’t have full access to it but OSM gives you access to the Geo-Data. 
Open Street Maps(OSM) provides great ways of saving our communities; from collecting geographical data in our communities to creating meaningful insights in time critical decisions in times of disasters, OSM continues to provide a way of improving upon geo-data.
The use of Open Source for Good is widely spreading in some areas but also struggling to permeate through other parts of the world. 
The Open Cities Accra Chapter have embarked on some projects in the past to contribute more to providing geographical data and wiki data. 
Also, topics on how to contribute, data integrity and validity are of great concern when it comes to contributing data but OSM uses the wiki style process thus errors are quickly spotted and corrected since the other 99.9% of people can correct it.
In this presentation, we will explore:
 - A brief on OSM and how it helps
 - Contributions in the past that have helped in some parts of the world
 - Touch a bit on Open Cities Africa and talk on a past project
 - How to sign up and make your first drawing
 - How to upload data correctly on HOTOSM
=======
A powerful ECP5 board for open source FPGA development
The ULX3S is a fully open source, compact, robust and affordable FPGA board equipped with a balanced spectrum of extra components and expansions. Although primarily developed as a teaching tool for mastering the principles of digital circuit design 1, a wide selection of useful features and interfaces enables it to serve as a broad spectrum module for installation in complex devices. 
https://radiona.org/ulx3s/
Embedded systems are everywhere, including in trusted environments. But what is really inside them? ULX4M is a modular version of the popular open hardware project ULX3S. ULX4M delivers a versatile programmable (FPGA) modular mainboard that can be used a wide choice of peripherals. The main board is "vendor neutral" and can be used with different FPGA vendors SOM boards. As the community continues to grow, lots of FPGA modules are written, and one goal of our boards would be that we can easily switch and check other vendor chips, and work more on vendor neutral code where possible. The project also improves SERDES availability. Some cheaper FPGA chips do not have lots of SERDES lines and when someone makes a board it needs to choose what peripheral will be using those SERDES lines. With an open source design, users are not dependent on anyone to make boards and can run independent production.
I will talk about features of ULX3S, how we got to modular version and what are the differences between them.
All boards are open source and available on github
https://github.com/emard/ulx3s
https://github.com/intergalaktik/ULX4M
=======
Kotlin 是近年來最火熱的程式語言之一，除了是 Google 認證為開發 Android 的官方語言之一外；另外一個原因是 Kotlin 支援不同的語言範式，如：物件導向程式設計（Object-Oriented Programming，簡稱 OOP)、函式程式設計（Functional Programming，簡稱FP）... 等，多種範式讓開發者能夠更靈活的針對不同的需求挑選不同的範式來開發。
由於 Kotlin 將 FP 完美的融合，所以學習 FP 不再是那麼的困難，您在不知不覺當中，就已經悄悄的學習到 FP 的技巧及應用。
在本次分享中，會先從 OOP 的角度切入，之後逐步將思考的方式轉成 FP。但在深入討論 FP 之前，會先介紹 FP 的定義，構成 FP 的三大類函數：轉換（transform)、過濾（filter）以及合併 (combine)，以及在 Kotlin 中是利用哪些功能實作 FP 。
最後，介紹在 Kotlin 中的 FP 第三方函式庫 — Arrow，它提供更多、更強大、更正宗的 FP。
- 為什麼要使用 FP?
- OOP 與 FP 的不同
- 什麼是 FP？
- FP 的三大類函數
    - 轉換(transform)
    - 過濾(filter)
    - 合併(combine)
- Kotlin 的函式秘密武器
    - Top level 函式
    - 高階函式
    - Lambda 函式
    - Extension 函式
- Arrow - Kotlin 的 FP 第三方函式庫
=======
簡單說就是同樂會 — 有相同喜好的人、歡樂聚會的活動！BoF 是 COSCUP 每年的重頭戲之一，你們可以暢談彼此在相同主題上的新發現，又或者與其他只在網路上聊過天、卻沒見過面的「熟人」碰個面。
COSCUP 年會聚集開放源碼社群成員，是舉辦和開源、社群及開放文化有關開源相關主題 BoF 的絕佳環境！
歡迎開源社群在 COSCUP 期間舉辦 BoF 同好會！如果你想要預約 BoF 時段（每場次一小時），請至此[文件](https://docs.google.com/document/d/1Ac9VZQJXvpPoAcGJ7sZ-6mZSZp22T6ygN1X3-iH5DZ0/edit)閱讀注意事項並登記；同時，也歡迎在此宣傳場外自行舉辦的開源聚會！
想參加活動的會眾也可以在這份文件找到有哪些有趣的活動正在發生！
=======
對於大多數 PHP 開發者所熟悉且習慣的都是 Blocking I/O 的流程，但近幾年 PHP 中 Async I/O 的套件發展越來越成熟，並隨著 PHP 5.5 的 Generator 一直到 PHP 8.1 的 Fiber 新特性，將本來 Async 的開發模式能更加以 Coroutine 化。
一般開發者對於 Generator 的使用情境大部分僅限於處理大量資料時節省記憶體使用，本議程將帶大家理解 Async I/O  與 Coroutine 的概念與實務應用，以及藉由主流的 Async I/O 專案來了解 Generator 與 Fiber 的特性為其帶來什麼幫助。並且討論在 PHP 專案中使用協程化 Async I/O 時的常見問題。
對於大多數 PHP 開發者所熟悉且習慣的都是 Blocking I/O 的流程，但近幾年 PHP 中 Async I/O 的套件發展越來越成熟，並隨著 PHP 5.5 的 Generator 一直到 PHP 8.1 的 Fiber 新特性，將本來 Async 的開發模式能更加以 Coroutine 化。
一般開發者對於 Generator 的使用情境大部分僅限於處理大量資料時節省記憶體使用，本議程將帶大家理解 Async I/O  與  Coroutine 的概念與實務應用，以及藉由主流的 Async I/O 專案來了解 Generator 與 Fiber 的特性為其帶來什麼幫助。並且討論在 PHP 專案中使用協程化 Async I/O 時的常見問題。
=======
本演講將以30分鐘簡單介紹開放基站(Open Radio Access Network, Open RAN)的基本架構、致力於推動開放基站的O-RAN聯盟(O-RAN Alliance)，以及O-RAN聯盟與 Linux基金會(Linux Foundation)合作成立的O-RAN Software Community (OSC)開源軟體計畫。希望能透過相關經驗的分享，鼓勵更多有志青年投入開放基站開源軟體的開發。
=======
台灣行政院從 2012 年正式開始推動開放資料相關政策至今已滿十年，公私部門依舊對何謂開放資料懵懵懂懂。本次將從基本定義出發，透過介紹資料開放五星評等的標準、資料價值鏈和資料生態系運作模式，分享開放資料是如何在眾人參與協力之下成為當今世界最寶貴的能源，並成為民主社會中推動各種議題前進的基石。
=======
從印表機到網頁瀏覽器，從作業系統到 5G 電信系統，因爲有自由軟體、開放原始碼軟體運動的影響，使得軟體發展與科技演進有了更蓬勃的效應，原本封閉的資訊軟體產業，轉為自由、開放的競合模式，而開放文化 (Open Culture) 的概念亦源因開放原始碼運動，而有嶄新的發展。
在本議程中，講者將回顧開放原始碼運動的故事，介紹「自由軟體」、「開放原始碼」的概念，說明這股開放風潮如何加速增進軟體界的發展，並進一步介紹，當自由與開放的概念被擴展到其他領域形成開放文化時，這個文化如何影響著我們所存在的數位世界。
=======
鄉野統計，網頁軟體工程師大部分時間都是在做 CRUD。那如果有一種 API 開發方式，只需專注於 Database Schema 設計及對應，無需再修改 / 維護如 ORM 的程式碼，而「自動」產生對應的 API 時，是否可以藉此擺脫 CRUD 開發者的枷鎖，把更多的時間與精力「浪費」在更美好的事物上？
本議程將與大家一同分享此次探索過程中的心得與成果。
適合 1-2 年工作經驗的網頁軟體工程師；
適合負責帶領團隊、提升工程師體驗的新手技術管理者。
=======
好奇為什麼今年的 PyCon TW 變成了 PyCon APAC 了嗎？
還是想了解今年的 PyCon 有什麼特別的嗎？
又或者是想來入坑成為 PyCon 的一份子呢？
歡迎來聊天，聊聊 PyCon、Python、還有晚餐吃什麼XD
=======
Wikidata 佮 OpenStreetmap 社群拚力共溪流佮村里的戶役政代碼寫入去兩个計畫頂懸，嘛發見一寡問題：親像講資料更新，官方無所有的溪流資料，官方的編碼毋是資料庫概念，仝一个村改名了好竟然編號變無仝，官方愛等才有釋放開放資料出來等等。愛若做若修改食會當綴著，予 Wikidata 佮 OpenStreetMap 頂面的資料是上新的。
這場欲來講 Wikidata 佮 OpenStreetMap 欲按怎來綴政府釋放的開放資料，來共兩个計畫頂面的物件更新過，尤其是村里戶役政系統代碼佮河川代碼，佮兩个計畫當中的物件會當雙向連結，發揮連結的開放資料的功能。嘛會一寡時間講臺灣已經匯入的資料，親像學校、圖書館、幼稚園、i郵箱等等。
=======
Back in 2020, we were the first, if not among the first, to use the eFabless open MPW program and free, open-source OpenLane/OpenROAD toolchain as the primary teaching medium in a University class project. In this talk I will reflect on the allure and dangers of using FOSS tooling for University classes, the results, what went wrong and what went right, and what we've done since.
=======
Kotlin 程式語言的標準函式庫內建設計優美的 Collection 函式庫，可以讓開發者用簡潔的程式碼來描述操作資料的步驟，用更好的語意表達邏輯。Collection 在實作時也用上許多語法糖，所以愈了解 Collection，也會愈了解 Kotlin 的語法特性。在這場分享裡，會先從 Collection 四大類別開始介紹，並從九大功能分類中，挑出數個具代表性的用法做範例展示。最後將在活動現場出題模擬實戰，讓聽眾在聽講的過程中，透過參與解題，實際了解 Collection 的應用情境。
預計分享大綱如下：
* Kotlin 及 Kotlin Collection 簡介
* 綜覽九大 Collection API
* 常用 API 介紹
* 模擬應用情境
* 回顧與總結：學習 Collection 有什麼好處？
=======
*BSDCon 是開源界最早的會議之一，多年後演變成了每年在亞美歐三大洲各一次的會議，以及眾多隨附或是獨立的地區會議、開發者高峰會和廠商高峰會。一大傳統特色是講者的機票住宿會由大會盡力補助，為社群表達感謝貢獻的一種方式。想知道 *BSD 和其會議的文化，還有如何參與 BSD 社群嗎？如果喜愛旅行並認識來自各國的朋友，參加 *BSDCon 一定不會讓你失望！
=======
## 軟體測試
一般開發人員想到軟體測試，第一反應大概是使用 unit test, 拿自己想好的輸入對應正確的輸出，但是這樣測試出來的軟體真的是安全的嗎？ 會不會有一些異常的輸入可以餵進去到程式裡面然後他就crash了呢 ？ 於是就有了模糊測試（fuzzing test）的概念。
## 模糊測試
下圖為模糊測試的流程，模糊測試是使用隨機去產生輸入測試程式, 但是隨機的輸入往往測試不到更深層程式的邏輯，所以有了2個概念。
    ![](https://i.imgur.com/tlwiMqy.png)
    1. 變異測試: 拿初始化輸入當作基底，去隨機變換輸入
    2. code coverage feedback: 如果沒有一個回饋機制，就不知道測試的成效，於是有了code coverage feedback，而 code coverage feedback 是使每次的輸入的code coverage。
## AFL
- AFL 為 google 於 2013 開源的模糊測試工具，主要有實作變異測試與code coverage feedback。
    - 連結: https://github.com/google/AFL
    - 除了剛剛提到的變異測試與code coverage feedback還有一個很重要 AFL 實作的部分 -- forkserver
        - forkserver 主要使利用 __libc_start_main 的機制
            - __libc_start_main
                - 主要利用 main 之前執行的 constructor，在 constructor 直接 fork 出 child process，讓 child process 跑受測程式。
            - 好處: 在執行受測時，可以不用 fork + execve，execve 的 overhead 較高，可以提升執行效率。
會先介紹模糊測試，在介紹AFL+DEMO，最後談一下模糊測試的瓶頸
=======
在國外演講，應該要用英文吧？
在日本用日語演講，「大丈夫」？
剛好我會唸五十音呢！
那就用日文演講吧！
=======
- 檢視 jQuery 設計架構
- 欣賞一些有趣的寫法
- 理解設計原理後，試著復刻一個陽春版的 jQuery
=======
Buildroot 與 Yocto Project 是嵌入式 Linux 最熱門的兩大 build system, 前者為現行最古老的 build system 之一並且持續維護中, 後者則是 Linux 基金會旗下的開源專案，兩者的共通點是從 toolchain, bootloader, Linux 核心到 userspace 皆從原始碼編譯產生 ，依照需求組建一個可以開到 shell 的 Linux 系統，將使用 QEMU 作為範例，即使沒有實體開發板也能輕鬆打造 RISC-V Linux 開發環境。
=======
The MySQL Operator for Kubernetes is an operator for managing MySQL InnoDB Cluster setups inside a Kubernetes Cluster developed by Oracle MySQL. It manages the full lifecycle with set up and maintenance that includes automating upgrades and backup. This MySQL Operator is already GA since April-2022. This session will provide insight on new features and how to use the operator to run InnoDB Cluster on Kubernetes related to installation, InnoDB Cluster characteristic on Kubernetes using this operator, upgrades, Private registry, etc.
Many developers are looking to have their applications and the data layers organized on the same fast deployment and automation principles offered by Kubernetes. However, deploying and managing an MySQL InnoDB Cluster in a containerized environment can be a bit lengthy and complicated task due to various resources involved in the configuration, while using operators will let a Kubernetes user securely deploy and easily manage InnoDB Cluster databases in a custom resource definition. The operator will manage the full life cycle that include automate upgrades and backup. Oracle MySQL Operator for Kubernetes recently went GA. This 30 mins talk will provide explanation on what are inside the GA release of this operator.
=======
- 經營開源專案往往會需要開發者投入相當多的時間與心力，而如何從經營的過程中持續性的獲得正向回饋即是決定開發者能否長期投入的關鍵因素。在這次的分享中我將以 facebook-crawler 為例，從專案管理的角度與大家分享 facebook-crawler 的理念、策略與收穫。不論你想要為開源專案貢獻一份心力，或者已經是開源專案的貢獻者，相信你/妳都能從這次的分享中更深入的了解經營開源專案會遇到大大小小的事情。並且希望透過這次的幫助大家設計與打造正向的回饋機制!
- facebook-crawler 是一項開源的 Python 套件，可以協助使用者用簡潔的語法快速收集 Facebook 上的公開粉絲專頁、社團的貼文資料，開源至今已經累積超過 2 萬次的下載量，在學術、商業、風險偵測、教育等等方面都有許多應用。
- Github: https://github.com/TLYu0419/facebook_crawler
- PyPI: https://pypi.org/project/facebook-crawler/
# (4 mins) facebook_crawler 套件介紹
- 套件簡介
- 套件特色
  - 不需登入: 不需要輸入帳號密碼，不用擔心密碼外洩/被鎖定
  - 簡單: 僅需要粉絲頁/社團的網址和停止的日期(用來跳脫迴圈)
  - 高效: 透過 request 直接向伺服器請求資料(不需安裝 Selenium)
- 使用方式
# (4 mins) 開源之前的核心思考
- npm 套件庫遭破壞的事件
  - 熱門的 npm 線上套件庫於 2022 年 1 月遭到作者自行破壞，破壞的原因是作者為了生計決定不再無償維護該熱門專案，而企業如希望繼續使用則必須進行付費。這件事情引起了開源界相當廣泛的討論，我們也能從這件事情得知要長期經營開源專案並不是一件容易的事情。
  - Ref: [要求使用者付費！熱門函式庫作者搞破壞殃及數千專案 | iThome](https://www.ithome.com.tw/news/148822)
- 確認為什麼想要做這個專案? 
  - 對社會有幫助 / 解決商業問題 / 社群需要 / 個人發展...
- 是不是已經有類似的產品/專案?
  - 如果還沒有的話就是你潛在的機會
  - 如有已經有的話是否在功能、效率上有不理想的地方?
# (5 mins)在開源過程中會遇到的問題
- 發現理想和實務之間的落差
  - 設計最簡可行產品
  - 持續精進專業能力
- 發現技術能力的不足
  - 培養拆解問題的能力
  - 透過社群的力量給予你幫助
- 規劃產品地圖
  - 界定明確出處理與不處理的問題
# (10 mins)開源之後的收穫
- 解決問題帶來的成就感
- 來自社群的肯定(Github專案的Star和Fork數)
- 專業能力的持續提升
- 幫助身邊的朋友、同事解決問題
- 認識許多社群的大大，可以互相討論問題
- 協助使用者解決業務需求，了解領域知識
- 評估走向收費模式
- 成為後輩心中的榜樣
# (3mins) 心得總結
- 如果發現了一個痛點還沒有人解決，那麼這可能就會是你成為開發者的大好機會
- 經營開源專案不是一次性的提交程式，而是需要長期性投入時間與心力的過程
- 要能夠持續從經營的過程獲得正向回饋才能長期投入專案
- 如果你是使用者，請溫柔一些對待這些開發人，因為他們是無償幫你解決問題
# (4mins) QA
=======
cosmos-sdk是目前在區塊鏈的cosmos生態系的標準SDK，其是為golang所寫。基於對rust的興趣，以及希望拓展 cosmos生態系，我嘗試著在前人的基礎上實作出rust的版本，期望可以給大家帶來不同的cosmos-sdk體驗。在這場talk之中，我將會分享在嘗試的過程中一些經驗跟簡介架構以及跟現有的cosmos-sdk的比較說明。
Medium: https://medium.com/crypto-nature
Podcast: https://soundcloud.com/kazami-143146370
=======
在2018年初，各國電信商領軍成立了國際開放網路架構組織聯盟（Open Radio Access Network Alliance, O-RAN），近年來也引發了諸多討論。O-RAN聯盟目前設立十個工作組，進行無線接取網路的開放式架構和標準化介面開發工作，希望建立出一套開放式的網路架構，以讓更多廠家進入這個產業。其中，第三工作組針對智慧基站控制系統（RAN Intelligent Controller, RIC）進行標準制定，希望整合行動網路的環境動態，透過RIC來進行區域性的基地台資源分配以提供最佳的服務品質或符合特殊使用情境。本演講將針對RIC的開源發展狀況進行分享。
Keywords: O-RAN, RIC, ITRI, Athena Orchestrator
=======
There are many Wikidata Query have been established on the pre-existing database. 
However , the 1) Duplicate Entries and  2) Broken Connections  3 ) False-Mapping are posing problems . 
Hence , I'm working on a plan  that is able to retrieve from Minnan Wikipedia  and enter information to Wikidata . This is a brief attempt to analyse .
=======
「開放透明並非萬靈丹，藝文機構的開放皆需投入大量的行政資源。」這是2020年典藏網中的【開放文化專題】的一段話，道盡了藝文機構在面對到這波的 Open Data 浪潮中的掙扎。
在藝文機構選擇付出相對應的成本進行資料開放時，如何有效的評估效益以及開放資料的後續工作策略都是討論的重點，本次將會探討的兩個案例：2018年李梅樹紀念館維基館藏數位開放計畫以及2020年新樂園25年藝術資料的結構化想像，透過量化兩案所投入的實際人工時成本以及開放資料所帶來的效益，並說明兩案實際上面對的困境與挑戰，來為藝文機構在思考未來的 Open Data 策略時提供一個相對客觀的數據做為決策的參考。
=======
眾所周知，原以 top-down 方式表達的 Fibonacci 函數可改以 bottom-up 的方式省去重複的計算。合併排序 (mergesort) 通常寫成 top-down 的遞迴函數，但也有一個 bottom-up 的作法：將相鄰的區段倆倆合併，直到剩下一個大區塊為止。是否有個有系統的方式將 top-down 演算法轉換成 bottom-up 演算法呢？我將回顧 Richard Bird 2008 年的一篇論文 --- 使用 natural transformation 與 "zip" 的觀念談論這兩類演算法的轉換.
=======
新樂園藝術空間今年計劃建置以Linked Open Data為基礎的資料庫，這對於過去臺灣藝術圈來說是相對少見的資料庫建置嘗試。但是對於臺灣藝術圈來說，有關這類數位資料庫、甚至線上公開瀏覽的資料或檔案，到底要以何種方式應用在研究與評論工作之中，甚至是否能夠因其數位資料的技術特性，擺脫過往傳統文獻分析方法，至今相對較少獲得討論。
臺北市立美術館在「朗誦／文件：台北雙年展1996-2014」展覽中，公開了1996年至2014年臺北雙年展的展覽手冊、藝術家、報導評論等檔案，並將其上載至線上供各界瀏覽。我們首先將針對這批藝術資料進行盤點，除了藉由傳統的文獻分析方法掌握臺北雙年展的基本知識之外，本次講座嘗試引入詞彙分析、性質分析、資訊視覺化等方法，以不同方式描述這些年的臺北雙年展，也希冀科技圈人士能夠針對這些研究分析方法提供更多回饋與批評。
=======
大虫農業，是全球最大肥料跨國企業「Yara」肥料的獨家代理公司，這幾年開始導入無人機施肥、田間水稻勘查的技術，紮紮實實的「蒐集數據、解讀數據、結合知識與數據」賺錢。平常台北看不到、無法認識的業者大虫，請多把握機會和他交流！
Lecture will be presented in Chinese.
=======
將以Ubuntu PC OEM team的Member根據目前Ubuntu PC發認證過程的
經驗, 分享一些在認證過程中的測試項目, 以及在今日如何購買一台可以
順順地跑Linux的電腦的方法.
實用方法面將介紹如何根據元件選電腦,
技術面將簡介一些測試項目, 如: 睡眠壓力測試, 耗電測試等等.
=======
在寒假期間，高中生的我發現同學們翻閱大學申請簡章覺得麻煩，我就自主開發一支查大學科系標準的 LINE 機器人，只要傳校名 + 科系，就能找該科系的相關資訊，並一鍵將面試日期加到行事曆，在發布不到一個月內使用者就破萬。
在本次議程中，個人會分享我的設計動機與思路、使用的開發技術，後台資料，以及後期我優化效能、推廣 side project 的方法，希望能藉由自身開發過程，幫助也想建立 side project 的與會者。
=======
MySQL Shell for VS Code是MS Visual Studio Code的全新的插件。Oracle MySQL開發團隊充分發揮了MySQL Shell的全部功能，並直接在Visual Studio Code中提供所有操作MySQL所需要的功能。
同時結合對 OCI雲上 MySQL 資料庫服務的支持，我們的新插件為 MySQL 開發人員提供了大量的新功能。本演講將向您展示MySQL Shell外掛程式的VS Code的詳細功能，如何獲取這個插件，以及如何利用它來提高MySQL應用程式開發人員的工作效率。
MySQL Shell 是一個廣受歡迎的新世代MySQL客戶端的工具,它豐富的功能包括:
1.協助用戶下一班性的SQL指令
2.以JavaScript及Python處理JSON 文件型資料
3.管理及設定MySQL,例如配置InnoDB Cluster的高可用功能
現在MySQL的開發團隊更開發了MySQL Shell for VS Code, 讓更廣大的應用程式開發者能以他們熟悉的環境使用在本地或雲端的MySQL資料庫
在這個演講中,我將為大家說明及演示這個新的VS Code挿件,並展展示在各種MySQL應用場景下如何充份發揮發這個工具的功能,協助MySQL應用開發者增加生產力
=======
很多人都知道 golang 只需要用 standard library 就能做出一個高效實用的 http server，那麼 golang 究竟在 net/http 裡面加了什麼？就讓我們一起窺探一下。
agenda :
1. 什麼是 non-blocking IO?
2. 什麼是 I/O multiplexing?
3. golang 如何實作 I/O multiplexing?
4. tcp connection 為何會 blocking？
5. 回顧一下 tcp connection 如何誕生
=======
This talk will introduce NaxRiscv, a recently developed out of order / super-scalar / RISC-V CPU generator and dive in its non-usual hardware elaboration, demonstrating the usefulness of general software technics used as an hardware elaboration tool.
The project is using Scala (A general purpose programming language), SpinalHDL (A Scala hardware generation library) and multiple software patterns, enabling non-intrusive modification and extensions of its CPU design.
NaxRiscv Repository : 
https://github.com/SpinalHDL/NaxRiscv
NaxRiscv documentation :
https://spinalhdl.github.io/NaxRiscv-Rtd/main/NaxRiscv/introduction/index.html
=======
With the rapid shortening of product life cycle and the increase of product variety, companies need to launch new products as fast as possible to meet the needs of the customers; as a result, the operation management, as well as product design, gets increasingly more and more complicated, which in turn demonstrates the importance of setup-cost control when companies change over different products. With the help of simulation tools developed in the APS, we can arrive at an approximated optimal solution and reduce the operating cost of companies. With the above-mentioned scenario, Julia comes into the picture. Julia boasts its high computational power and the APS module can run loads of simulations using it. In addition, Julia’s readability along with the multiple dispatch mechanism makes it easier to cater to the needs of different scheduling projects. This case study shares some insights into the role that Julia takes on in a production system and the influence it exerts on the operating cost of the companies.
=======
Discuss what MIDI 2.0 achieves, what was already achieved before MIDI 2.0, and how we can use MIDI 2.0 in our music software world.
MIDI 2.0 specification was finalized in early 2020, and it has been slowly getting adopted in our music technology ecosystem. MIDI is still alive, but there are various technical elements that were replaced by newer alternatives. For example, we don't distribute MIDI files as our music production anymore. You would be unsure where and how MIDI is still used.
Also - will MIDI 2.0 bring things back to MIDI? Is it worth? Aren't everyone using VST or AudioUnit nowadays? There aren't really MIDI 2.0 hardware devices as of Spring 2022. But - MIDI 2.0 is a thing over there too, and there are actually certain adoption of MIDI 2.0 in the software stacks that you would not be aware of. It would be good to observe the state of the union.
Through the session you would find -
- Review what MIDI (1.0) was really about, and what replaced it.
- Understand what MIDI 2.0 brings and which problems it tries to resolve.
- What Universal MIDI Packet is, and how capable it is.
- How MIDI 2.0 is embraced so far.
Target audiences would be those who are interested in audio and music software, especially in open and non-proprietary standards.
=======
利用 Opentuner 結合輕量化的 Python script，找到如何在 CUDA Code 中，添加正確的 Unified Memory Advice 以及 Prefetch，提供更便捷的程式撰寫方式，並帶來良好的效能。
傳統CUDA的 Explicit Data Movement 的方式，需要工程師自行管理 GPU 和 CPU 之間的搬運，且當資料大小超過 GPU 本身記憶體的大小時(稱之為 GPU Memory Oversubscription)，則無法執行。在CUDA 6.0後，CUDA 增加了 Unified Memory (UM)，將 CPU 和 GPU 的記憶體視為同一空間，工程師不再需要自行管理資料搬移。
UM 的好處是書寫程式碼上更為容易，並且支援 GPU Memory Oversubscription，然而因為其採用 On-demand Page Migration，意即當GPU需要使用資料時，才會將物件從CPU的記憶體搬移到GPU上，使效能相比之前大幅下降。為此，CUDA 提供了許多 UM 的進階 API，如 cudaMemAdvise，讓使用者可以提供 UM Driver 記憶體存取特性的提示，或是 cudaMemPrefetchAsync，讓 GPU 提前將物件預取到記憶體中。但是該如何使用這些 UM 的 API，卻也是一大難題，不正確的使用可能會讓效能更糟。
本議程將會探討 CUDA 提出的 cudaMemAdvise 以及 cudaMemPrefetchAsync 會對程式帶來什麼影響，並且闡述我們的方法，結合Opentuner開源框架，自動找到如何設定 UM 參數。如此一來，使用者除了可以同時享受 UM 帶來的書寫便利，也可以避免因使用 UM 而造成效能大幅度的下降。
=======
介紹目前兩大 Ruby 型別分析工具，Sorbet 與 Steep。
型別分析工具可以有效的處理 Ruby 的太過動態的問題，有效地提升程式碼的正確性。
包含以下內容
- Ruby 型別分析工具是怎麼定義 Type 的
- Ruby 型別分析工具是怎麼運作的
- 如何在你的 Ruby 程式裡加入 型別分析工具
=======
在台灣：為何自由軟體跟開放資料喊了多年，沒有幾個計畫是能好好維持可持續產出的?
為何自由軟體界來來往往的人，到後來幾乎就只剩下在電腦公司當小碼農或退出，沒有累積幾位像Linus 般可當重任的人才？
為何很多父母跟老師戲稱翻轉教育其實是翻車/翻桌教育而所謂"教改"變成一個很髒的字眼?教改多次的結果，讓學的東西越來越雜，升學補習並沒有歇業，學歷越來越貶值。
109年我從建中啟動 "合作式數位視覺設計"課程，用全新的觀點下的實際行動來示範解答上面三問題。這是一系列針對自由軟體跟開放資料的教育與合作產出（如建中紅樓3D 模型）計畫。核心目標在於人文關懷，運算設計思維，合作實作，開放數位管理架構。
一些分享的重點
* （數位）人文關懷：有些實體或許不能保留，但是至少現在可以先保存數位記憶，再圖日後發展
*  學習解決問題的能力 不是給魚，也不是給釣竿，而是教他如何找材料自己做釣竿所以能釣魚
*  與人合作有他的困難跟必要性，數位時代的合作，必須要有數位化的設計與管理思維
*  主事者要有釋出權力給團隊，但是又能夠幫全體善後的能力
=======
It's been passed over decade since Raspberry Pi was released in 2012.there are now many Raspberry Pi products and we are using it everywhere - not only education/IoT but also cloud/servers. Masafumi will talk latest Raspberry Pi updates with technical aspects and intoduce some use case with the interviews and how to spread your words more to Raspberry Pi community.
## lastest Raspberry Pi updates
1. Raspberry Pi Products (supply chain updates)
2. Raspberry Pi OSes (Raspberry Pi OS/Ubuntu and etc.)
3. Raspberry Pi Foundation and Raspberry Pi LTD. - Edudation/DIY Hobby/Enterprise.
4. Raspberry Pi Press/Media and etc.
## Raspberry Pi Use Case Interviews
1. CutiePi(tablet) by Penk Chen
2. Vineyard Kikushima(wine brewery)
3. 
## How to spread your case
1. Social Media (twitter and etc.)
2. Other ways
## Recap
=======
來看看 iOS/Swift 熱門的開源專案如何編寫他們的測試。
=======
According to the official Kubernetes website, there is one note: “In API version apps/v1, a Deployment's label selector is immutable after it gets created.” However, it's inevitable to update labels in existing deployments sometimes. Due to the immutability of the label selector, the simple way is to recreate deployments. Nevertheless, in most cases, it's not a good practice to directly shut down services. Therefore, in this session, we will introduce a zero-downtown label migration method that AMIS engineers based on ingress rule priority setting came up with.
=======
Linux cfg80211 作為網路子系統的一部分, 提供無線網路卡進行設備管理。vwifi 則是基於 cfg80211 實作出來的虛擬網路驅動程式。由 vwifi 產生虛擬網路介面支援 station mode 以及 hostap mode, 其可運行無線網路環境模擬。
=======
Operators let us extend the functionality of the Kubernetes API, enabling it to configure, create, and manage instances of applications automatically using a structured process. Deep diving into the capabilities of Kubernetes controllers, security risks, lifecycle management, including backup, recovery and automatic configuration tuning. Benefits for the presentation is to explore the uses of Kubernetes Operator Writing Controller logic by having unique way to manage the application deployments, this may solve many complex use cases.
About application deployment using k8s operator and custom controller implementation.
Application-specific controller that can help us package, deploy, and manage a Kubernetes application.
Operators lets us extend the functionality of the Kubernetes API, enabling it to configure, create, and manage instances of applications automatically using a structured process.
Operators use controllers that monitor Kubernetes objects. These controllers are slightly different from regular Kubernetes controllers, because they track custom objects, known as custom resource definitions (CRDs). A CRD is an extension of the Kubernetes API that provides a place to store and retrieve structured data (the desired application state).
=======
典型的單元測試都是透過 Example Based 的方式來撰寫，但例如 input 為一個陣列時，我們可能需要列出多種可能性才有辦法測試到多種情境。因此，本場演講將介紹 Property-Based Testing 可以如何加強測試。
=======
开源社区是一个众多相关方参与的平台，代表了未来的一种组织架构模式。高校作为一个重要的智力资源能够为开源社区带来众多的贡献，很多著名的开源项目也是从高校发起起的。本报告以 X-lab 开放实验室为例，介绍我们在高校参与开源项目与社区的经历，希望对大家有所启发。
沒有摘要
=======
你亦想欲和 Siri 話台語嗎？語音輸入的關鍵，就是夠濟夠豐沛的口音資料。Common Voice 著是 Mozilla 欲招逐家來錄音，拾做一个免錢、自由開放，含括四方語言的語音資料庫，讓工程師會使得開發聲音技術。Common Voice 亦佇咧今年二月開放著台灣話錄音矣！作夥來將自己的聲音錄落來，幫贊台語的語音科技發展。
台語分享
=======
适兕将以开源强相关的读书会「OSCAR·开源之书·共读」小组为例，分享一个积少成多的学习小组，特点就是以开源之道的方式来构建。
沒有摘要
=======
# 從機器工程師到機器學習工程師的轉身與降肉
## 身為機械跨領域，我轉職成為ai工程師的經驗，以及菜鳥面對應用落地的挑戰。
- 如何使用 Open Source 資源來學習，例如：freeCodeCamp、python100天。
- 如何貢獻 Open Source 專案：寫更多文章教學，推廣專案
- 如何在利用streamlit 快速豐富履歷，讓你找到好工作
- ML專案落地踩坑解坑實錄。
=======
想知道怎麼拿補助出去國外玩嗎？一起來看看有哪些開放原始碼專案在國外舉辦了研討會，又要如何參與吧！
這個演講會包含一些我參加過的開放原始碼國際會議，以及當初投稿了什麼題目，也歡迎現場會眾用力推坑。
=======
想要最大化螢幕使用嗎？
想要只利用鍵盤就高效率的完成視窗的縮放、佈局管理嗎？
想跟 r/unixporn (https://www.reddit.com/r/unixporn/) 上面的截圖一樣有酷酷的桌面嗎？
或是你只是想聽聽看平鋪式視窗是什麼玩意兒。
那麼平鋪式視窗管理員 —— i3 WM 歡迎你來嘗試。
Arch 哲學提倡高度客製化的作業系統，從桌面環境到 Kernel 皆是，除了常見的 Gnome 、 KDE Plasma 5 桌面之外，你還可以選擇不裝一大包的桌面環境，只裝自己覺得需要的套件，本議程將帶著大家了解 Desktop Environment 、 Display Manager 、 Compositor 及 Window Manager 分別在做什麼，以及分享自己入門平鋪式視窗 —— i3 WM 的心得，和單獨安裝 Window Manager 時要注意的事情。
=======
We build a simple, OSS-based infrastructure for visualizing and analyzing vehicle/people location information to realize a digital twin computation. We present our architecture how technologies to be combined, and demonstrate a system with a simple case in the session.  1. Distributed processing platform to process large amounts of data rapidly and quickly; Apache Hadoop. Apache Spark, and Apache Kafka   2. Multi-user ad-hoc analysis services; Jupyter Lab and Jupyter Hub  Additional talk will include a spatial-temporal databases and technologies as extended topic.
I aim to develop an infrastructure that enables people from various companies and industries to utilize and analyze each other's data in my position promoting NTT's IOWN (Innovative Optical and Wireless Network*1).
We focus on infrastructure that enables multi-users to analyze large amounts of data, and build a simple analysis infrastructure using Open Source products. We tackled three challenges throughout the project, and take a following
actions. 
(1) Use JupyterHub to achieve multi-user analysis
(2) Build with Big Top for quick Hadoop/Spark/Kafka deployment 
(3) Pick Pyspark and configure a Jupyter execution kernel for it to handle data
on Hadoop clusters
We realize a multi-users service to provide Jupyter notebook to analyze large
amounts of data on Hadoop cluster. We will extend our service in a point of
following challenges in the future.
(1) Deploy JupyterHub with Kubernetes container cluster for scalability
(2) Provide Multi-tenant service
I'd like to share further Open Source products to related our work in a field of spatial-temporal data processing.
*1. https://www.rd.ntt/e/iown/
=======
由近日的 AGPL 授權爭議切入，探討因應雲端運算崛起、企業搭便車、以及超時勞動現象而生的各式軟體授權，並分別討論其於法律執行面的挑戰、與資訊社群「四大自由」的衝突、以及未來可能的社群走向。
<blockquote><img src="https://imgs.xkcd.com/comics/dependency.png"><br>「現代資訊建設奠基於內布拉斯加的某個路人從 2003 年默默維護至今的專案之上。」–– <cite>xkcd #2347〈相依性〉</cite></blockquote>
在開源專案蓬勃發展的今日，軟體開發的生態也邁向了「there’s a GitHub repo for that」、想要的功能彷彿取之不盡的年代；然而隨著雲端運算盛行、企業積極採用開源，刻意「搭便車」、得利於開源專案卻吝於回饋社群的情況也越發明顯。不願再被剝削的開發者、以及推崇開源卻也不樂見成果被整碗端走的新創公司，紛紛選用或發明拘束性更強的授權條款：從 Server Side Public License 到倡議勞權的 Anti-996 License，這些授權反應了部分資訊界對開源現狀的反彈，卻也有批評者認為這些限制根本上違背了自由軟體基金會 (FSF) 所提出的「四大自由」(four freedoms)。本演講將由近日 AGPL 條款爭議切入，介紹各式具有強烈著左權 (copyleft) 特性或反抗意味的軟體授權，並分別討論其於法律執行面的挑戰、與四大自由的衝突、以及未來可能的社群走向。
=======
1. 一個高效能的NFV平台，基於intel DPDK，以及Docker containers所開發的架構。 
2. 可以用於SDN上，透過簡單下達一些指令實現Network Function轉發封包處理流程之功能。
3. openNetVM為”NetVM: High Performance and Flexible Networking using Virtualization on Commodity Platforms”這篇論文內的NetVM之開源版本
## openNetVM 功能
1. Container-based NFs: 透過Docker contatiners跑在標準的user space
2. NF Manager: 用於管理network functions
3. Zero-Copy IO: Packets由DMA直接放入shared memory並由NF Manager讓所有NFs直接操控處裡，不須複製
4. No Interrupts: DPDK’s poll 讓封包的處理不需要再經過Interrupts，加速整個流程
5. Scalable: NFs可以輕鬆的拓展，NF Manager會自動在threads之間平衡管理封包，最大化效能
=======
We found several issues linked inherently with ISA of RISC-V itself when using ftrace after turning on kernel preemption. In RISC-V, we must use 2 instructions to perform a jump to a target which is further than 4KB, and we cannot promise any 2 instructions being executed on the same process context if preemption is enabled. However, this is how we patch code in ftrace in current implementation. Thus, we proposed a change that could possibly solve it, making kernel preemption work with ftrace. The patch has been published on the mailing list. We would like to share and discuss our thoughts on LPC. And the talk will cover following content:
Current Implementation of RISC-V ftrace
How does stop_machine() work
Reviews of ftrace Implementations on other Architectures
Mixing with Kernel Preemption
Limitation of RISC-V ftrace due to RISC-V ISA
Possible Solutions to Enable ftrace with a Preemptible Kernel
Proposed Solution
Experiment and Results
=======
分享 17 直播在近期使用 GKE 維運後端 API 的兩三事，希望能減少聽眾踩雷的時間
分享 17 直播如何將全球後端 API 都放在 GKE 上，並以過往的經驗說明 GKE 在那些情況會需要特別小心
- route-based vs vpc-native
- kube-dns-autoscaler 調整
- 一個 svc 底下最多能有幾個 pod
- GKE auto-upgrade
- 自己開發的 pre-scaling
=======
質量對於產品交付是重要的指標，如何節省手動測試的時間是個重要的議題之一，可以藉助自動化工具可以幫助達到其目標。
在 Web 測試中如何面對瀏覽器的多樣化是個很大的挑戰，這次要介紹的開源框架是 Playwright，支援跨平台測試，支援 Firefox、Webkit、Chromium 等 Web 三大瀏覽器核心。降低開發者在自動化測試的難度與跨程式語言的挑戰。
在本議程會與大家分享下面幾個議題
➊ Playwright 是甚麼 ? 
➋ Playwright 特性與解決什麼問題 ?
➌ Demo
=======
CNCF (Cloud Native Computing Foundation)是開源、供應商中立的雲原生計算中心，作為Linux Foundation的一部分，託管 Kubernetes 項目，以使雲原生具有普遍性和可持續性。
在 Kubernetes community 託管了 kubernetes、kubeadm、kubelet、apiserver 等專案，開發人員想成為其中的一員是很自然的，但他們面臨著知道從哪里以及如何開始貢獻的障礙，這阻礙了許多人實現這一目標。
本議程將介紹針對 Kubernetes Projects 做出貢獻，並且如何加入相關的Sig小組。
=======
講者自身以5G 開放架構進行創業的經歷以及相關的創新創業在職涯中的發展，分享在5G高科技技術上的成長、相關工具的使用、資源的獲取以及新的事業進行發展的方向，以及所遇過的創業困境等，希望可以提供相關社群夥伴們一點經驗分享，並且探討或加入5G 開放架構之發展與交流。
劉恩成，通訊工程博士，個性內向害羞，參與國際標準組織 ONF, O-RAN並以5G 開放架構進行新創事業之發展，擅長電信軟體系統開發、雲端虛擬化技術、5G行動通訊網路、電信標準化測試等，在軟體系統、雲端系統、遠距服務系統如智慧醫療、智慧工廠應用等具有完整技術開發與產官學整合經驗；技術著作與產出包含國際期刊論文5篇、國際會議論文 13 篇、台灣專利 6 篇 、美國專利 5 篇等成果。
=======
Sciwork is a community for researchers and engineers to share and discuss computer code for scientific, numerical, and engineering work. Our activities include but are not limited to coding sprints, hands-on tutorials, and technical talks and conferences, on-line or off-line. You are welcome to join us!  DC: https://discord.gg/6MAkFrD
COSCUP 年會聚集開放源碼社群成員，是舉辦和開源、社群及開放文化有關開源相關主題 BoF 的絕佳環境！
歡迎開源社群在 COSCUP 期間舉辦 BoF 同好會！如果你想要預約 BoF 時段（每場次一小時），請至此[文件](https://docs.google.com/document/d/1Ac9VZQJXvpPoAcGJ7sZ-6mZSZp22T6ygN1X3-iH5DZ0/edit)閱讀注意事項並登記；同時，也歡迎在此宣傳場外自行舉辦的開源聚會！
想參加活動的會眾也可以在這份文件找到有哪些有趣的活動正在發生！
Sciwork is a community for researchers and engineers to share and discuss computer code for scientific, numerical, and engineering work. Our activities include but are not limited to coding sprints, hands-on tutorials, and technical talks and conferences, on-line or off-line. You are welcome to join us!  DC: https://discord.gg/6MAkFrD
=======
LaMDA是Google最新發表的語言模型，LaMDA是基於Transformer的自然語言理解(NLU)模型，專門應用於對話使用。本次分享會針對基本對話理解的自然語言理解(NLU)概念做簡單趨勢的介紹，接著針對LaMDA的運作方式、模型微調、衡量指標等內容做分享。
LaMDA是Google最新發表的語言模型，LaMDA是基於Transformer的自然語言理解(NLU)模型，專門應用於對話理解的領域。本次分享會針對基本對話理解的自然語言理解(NLU)概念做簡單趨勢的介紹，接著針對LaMDA的運作方式、模型微調、衡量指標等內容做分享。
=======
在這次演講中，
我將介紹如何使用Spring團隊於去年才發布首版正式支持production的項目：
"spring-security-oauth2-authorization-server"
實現OIDC授權服務器的搭建～
以及說明為何在Java這種物件導向的程式語言中要使用事件驅動
－「物件導向」與「事件導向」的關係
並以OpenID多元身分驗證的FinTech場景，簡單又優雅地展示
發現不尋常的授權活動時，如何以事件來發動告警通知信，
讓銀行導入數位整合服務的同時確保帳戶安全。
Production-ready：
https://spring.io/blog/2021/08/19/spring-authorization-server-goes-to-production
Demo Source Code：
https://github.com/knowledge420/spring-authorization-server-demo-coscup-2022
=======
AWS SDK for Rust allows you to build cloud native applications on AWS. By using AWS SDK for Rust and Lambda Runtime for Rust you can easily build serverless web applications without managing any infrastructure. We'll walk you through the architecture and tools for using Rust on the Cloud.
=======
1. Cloud Native Taiwan User Group (CNTUG) 社群介紹
2. 為什麼想加入社群志工?
3. 參與社群對職涯、自身技術或生活有什麼影響或心得?
4. 怎麼加入開源技術社群?
5. 怎麼支持或貢獻開源技術社群?
介紹何謂 Cloud Native Taiwan User Group (CNTUG) 社群，以及從參與社群的小小會眾到變成社群志工的一些心路歷程分享，並如何藉由社群舞台與自我行動去改變開源專案現況或是技術理念的推廣。
=======
2020年社群發起人柴哥興致勃勃地分享農業科技詞彙資料庫，隔年繼續賣瓜推廣「農業計畫通」，2022了，這些專案還能繼續走下去嗎？看起來是很慘澹耶(迷之音)。免驚，生命自會找到出路，2022柴哥要來分享另一個副本，「農業病害影像協作資料庫」，今年直接越級打怪，不玩文字資料，改玩影像資料囉！鳩竟是怎麼一回事，記得來找柴哥就對了！
=======
相信大家一定都聽過、用過維基百科吧！但其實在維基百科的條目背後，是靠著「維基數據」來連結、支撐著龐大的資料量。如果想加入維基的大家庭，不妨從「維基數據」開始吧！透過這次的入門工作坊，你將對維基有著更深入的了解。
=======
開源社群參與與經營  The journey in Open Source community without programming
可能有人會好奇熱愛開源是否只能是興趣？不寫程式還能怎麼樣投入開源貢獻，進而成為自己職涯的加分點呢？這個 talk 將分享四貓投入開源貢獻的一點心得。
Some people may be wondering if open source can only be an interest. How can you contribute to open source without writing programs and then become a plus in your career? This talk will discuss Si Mao's experience contributing to open source.
=======
Debug information is a mapping between the original source code and low-level binary locations. It provides developers powerful insights to diagnose problems (via debuggers) in their code and acts as one of the most important foundations for modern software development. Furthermore, in recent years, we are seeing increasing demands of high quality debug information for highly optimized applications that are otherwise “un-debuggable”. For instance, debugging unoptimized games is generally not feasible since it's likely to miss every single frame. In this talk, we are going to introduce how debug information works and how compilers generate proper debug info even with extensive levels of optimization enabled. At the end of this talk, you will gain insights into the structure of debug information and learn key compiler engineering knowledge on generating high quality debug info for critical, highly optimized software.
=======
Gene regulatory network governs the complex gene expression programs in various biological phenomena,
including cell development, cell fate decision and oncogenesis. Single-cell techniques provide higher
resolution than traditional bulk RNA sequencing in gene expression, but also bring larger noises and
sparse expression measurements. It is difficult to infer gene regulatory network with noisy and sparse
gene expression profiles. Furthermore, inference of a complete gene regulatory network across different
cell types is also challenging. Here, we propose to address the problem by constructing context-dependent
gene regulatory networks (CDGRN) with single-cell RNA sequencing data. A gene regulatory network is
decomposed into subgraphs, which correspond to distinct transcriptomic contexts. Each subgraph of gene
regulatory network is composed of the consensus active regulation pairs of transcription factors and
their target genes shared by a group of cells. The activities of each regulation pair in different cell
groups were inferred by a Gaussian mixture model using both the spliced and unspliced transcript
expression levels. In addition, we found that the union of gene regulation pairs in all contexts poses
sufficient information for reconstruction of differentiation trajectory. The connection between gene
regulation in molecular level and cell differentiation in macroscopic view can be established by CDGRN.
The cell cycle, cell differentiation or tissue-specific functions are enriched along developmental
progression in each context. Surprisingly, we observed that network entropy for CDGRN decreases along
differentiation progression, which implies the differentiation direction. In conclusion, we leverage the
advantage of single-cell RNA sequencing and establish the connection in both molecular regulation and
differentiation trajectory. The context-dependent network entropy may indicate maturity of cells in
certain context.
=======
index 可以有助於加快查詢，是以一個以空間換取時間的工具，隨著時間推移及功能增加，有些 index 會隨著功能的改變而不再被使用。或是因為資料表經過一段時間的新增與修改，導致 index 不再那麼有效率，那這些棄用的 index 存在於有限的空間內，當然是不好的，需要定時清理。
為了解決這個問題，可能會講到以下內容：
* 透過 PostgreSQL 內部的統計表 pg_stats，來找出你不知道，但可能已經沒在使用的 index
* index 在 b-tree 的結構特性下，如何從中榨出更多的空間
* 最後希望能透過週期性的監控來維護 index，保持一定的儲存空間
=======
Cofacts 是一個結合 LINE Bot 與事實查核的開放平台，這平台上存放許多透過 LINE Bot 收集的轉傳訊息，為了讓查證的編輯能夠更有效率的進行查核，Cofacts 推出利用 AI 做文章自動分類的功能，能夠自動的把收到的轉傳訊息加上標籤。這個議程會分享 Cofacts 如何標記文章、訓練模型、部署模型。
=======
Vector Extension 是去年底 RISC-V 最新通過的標準擴展指令集之一, 指令的彈性設計預計可帶來大幅的效能改善, 並且可應用於許多領域如 AI, 電腦視覺及多媒體處理等, 對於 RISC-V CPU 生態來是不可或缺的一部分, 除了今年陸續會有硬體問世外, 相關的軟體支援也在如火如荼的進行, 講者將分享在軟體方面尤其是編譯器以及語言擴充方面設計的第一手經驗.
這場 talk 預計會分回上下兩場, 前半段介紹指令集部份, 後半段討論 Intrinsic 設計以及編譯器相關議題.
=======
在不使用 kubeadm 等的 Kubernetes 工具幫忙下建立 Kubernetes cluster，從而了解 Kubernetes 中不同 component 的用途，構造和運行，並介紹不同設定的優劣，讓聽眾了解 Kubernetes 不是高不可攀的，而只是要花時間研究
Kubernetes 已經是雲原生計算 (Cloud Native Computing) 領域的標準平台。平常建 Kubernetes 時都是由平台或者工具代勞的時侯，這次完全不用工具自己建立一座出來，並透過改變設定去優化 cluster 運作
=======
加入世界級團隊！​
​由 ​5G 產業創新發展聯盟 開源系統軟體SIG、Blocto​、玉山銀行、Shopline、Appier​ 等公司​，為 COSCUP 會眾現場介紹量身打造的職缺​！​
=======
在 Go 實現 file-system based route 的 Web 伺服器
=======
GNU Debugger(GDB) 對使用 Linux 進行開發的程式撰寫者來說可說是不可或缺的工具。其通過強大的 ptrace 系統呼叫，讓 GDB 可以追蹤甚至修改其他行程(process)。
在本議程中，我們基於 ptrace 在 Linux 上打造一款具體而微的 debugger，結合被除錯者(debuggee) 的 DWARF 資訊，這個 debugger 可以提供斷點(breakpoint)設置、被除錯者的暫存器與記憶體的讀寫、原始碼等級(source-level) 的單步執行與堆疊展開(stack unwinding)等功能。藉由此具體而微的 debugger，我們將對 ptrace 在 GDB 中扮演的角色有更深刻的認識。
=======
閉包轉換是函數式編程語言編譯過程中的一項重要技術，本節將了解我們為什麼需要這個轉換、如何實現，順便了解一下 nanopass
閉包轉換是一種從任何表達式中刪除所有自由變量的轉換。通過把自由變量包裝進一個結構之中，再將 lambda 與它包裝進結構之中，就是一個閉包。 調用閉包時，調用者必須解開閉包以獲取 lambda 再獲取已包裝的自由變數，然後將 lambda 套用上原本就有的參數及已包裝的自由變數。對上述兩種描述，自動轉換程式的演算法就叫做閉包轉換。閉包轉換後任何 lambda 都不再有自由變量，因此可以繼續套用 C 或是 assembly 等語言的編譯轉換。
=======
* 為什麼使用資料庫
* 誰會使用資料庫
* 遇到什麼困難
* 如何用得更好
系統的運行，不單只有開發交付上線。
讓產品更好，並不只是技術面的問題。
流程要順暢，也不僅僅是會議桌的事。
這個議程將用資料作為光源，用三稜鏡的發散方式來各別檢視資料、資料庫應用的開發，探討不同階段、腳色、情境會遇到的問題，以及如何讓我們可以做得更好。
=======
介紹利用LINE Bot開發出多元的手遊系統，介紹如何設計出吸引人的遊戲體驗，以及分享本案BOT的遊戲功能，以及LINE Bot開發運用技巧。預期聽眾能在本次演講中獲得LINE Bot在遊戲娛樂開發上的發展性。
1.LINE Bot發展到現在普遍運用在商業上，極少數會運用在遊戲娛樂上，現在利用LINE Bot開發「手機遊戲」(手遊)，也是種選擇，不論是LINE的普遍使用率以及友善的開發環境都很適合(LINE Developers)，而且利用LINE Bot開發遊戲也能讓使用者較有親切感，因為本體架構還是在LINE聊天室裡。
2.本次會介紹如何在LINE聊天室裡進行遊戲體驗，以及如何運用 LINE 提供的 API 如 Flex Message、LIFF、Rich Menu、LINE Notify 來完成設計與實作，以完善的功能創造體驗，滿足使用者遊玩的意願性，掌握遊戲的元素再搭配LINE Bot所能提供的支援下去做開發。預期觀眾們能在本次演講中獲得LINE Bot在遊戲娛樂開發上的發展性。
3.本Bot目前已設計兩大主題遊戲以及將近20種小遊戲，功能開發上分為三大系統：群組互動系統、單機遊玩系統、線上遊玩系統。會在本次演講中挑一部份出來做簡單介紹。
‧群組互動系統：利用LINE群組可加入BOT的權限，成員們可在群組一同解任務以及建立公會..等。
‧單機遊戲系統：有些使用者只想沉溺於自己的世界裡，本Bot開發：「養成類型」遊戲。
‧線上遊戲系統：有人的地方就有江湖，靠比較獲得成就，本Bot開發：「卡牌類型」遊戲。
=======
雖然說 [cgo is not go](https://dave.cheney.net/2016/01/18/cgo-is-not-go)，不過當專案需要的功能遍尋不著 Golang native 實做，且 C/C++ 世界裡已經有套成熟穩定且被廣泛使用的 library 時， cgo 就會是不錯的選擇。本分享會由講者自身使用 cgo 的踩雷心得出發，聊聊這個 golang 世界裡的禁忌話題 (誤
=======
熱愛進行電腦視覺深度學習研究的一名國中生，分享他在進行研究時，透過重現文獻中的模型結構，訓練後與研究結果比較，同時將這些模型進行開源與維護。
本議程講者為來自台北的國中生，正在進行多發性硬化症 MRI 影像分割神經網路的研究。為了與未開源的文獻模型進行研究結果比較，透過 PyTorch 重現文獻中的模型結構進行訓練，並再完成之後上架 GitHub，持續進行 code 與 docs 的維護。在本議程中，講者會對於所重現的模型技術與經驗進行分享，期待透過介紹，讓更多人了解 Open Source AI 的另一個貢獻方式。
=======
一般設計機器人認為智慧來自大腦, 但是在設計神經肌肉機器人時候認為大腦也是周圍裝置, 並有大腦訊號模擬器取代.這次分享將介紹在這樣計算框架下, Julia 如何與大腦與機器人模擬器互動, 並設計神經元觸發的控制器.
=======
延續去在 COSCUP 的 Wikidata 資料品質的討論，今年嘗試將 Wikidata、OpenStreetMap 開放街圖資料、與政府公開資料「戶役政資訊系統資料代碼 」進行整合。分享真實世界的資料 QA 清理整合經驗。
=======
區塊鏈研究，怎麼發揮最大的社會價值？
這次分享經營區塊鏈研究交流平台的經驗。平台成立的宗旨在於捕捉和促進更多對區塊鏈研究討論，並協助學業界解決區塊鏈研究關鍵瓶頸的交流，蓋出更好版本的Web3。
=======
在軟體工程師的世界中，一直以來存在著十倍速工程師的傳說。然而，十倍速是怎樣的概念，難道我們就不能慢慢的寫程式嗎？要怎麼做才能讓自己的時間慢下來慢慢寫，卻不影響原本的時程呢？
每個人都有一個「錢多、事少、離家近」的夢想，然而現實總是殘酷的，難道就沒辦法慢慢寫程式嗎？
在這十幾年的程式開發經驗中，我們還有一個辦法可以達到這件事情。
讓自己很快，快到世界慢下來就可以了！這場演講將會分享我自己的經驗，透過幾個階段的「快」來分析，該如何讓自己寫程式的時候感覺不到時間流逝，回過神才發現時間還剩下很多，享受慢慢寫的快樂。
=======
電子書閱讀器的畫面更新速度跟一般螢幕比起來慢很多。在這種限制下，如果想要利用它來有效地瀏覽網頁，在功能設計的概念上需要不同的思惟。本議程將會介紹一款開源的瀏覽器 EinkBro，說明它如何考慮到電子紙的特性，實作出一個又一個適合電子書閱讀器的功能。
EinkBro 是一款開源的小型 Android 瀏覽器(約 2.5 MB)。它針對電子紙的特性，在使用者介面上做了適當的調整，讓畫面更加清晰；在功能面則是引進了許多符合電子書閱讀器使用習慣的操作；比方說，讓使用者可以點擊畫面翻頁，或利用音量鍵翻頁，避免因為捲動網頁內容造成太多殘影；它也提供了市面上常用瀏覽器也有的 Reader mode，讓使用者可以更加沉浸在內容的閱讀上。它還有一個很特別的功能是：可以將當下的網頁輸出成 epub 檔案，方便使用者可以利用閱讀器上的其他軟體來做後續的閱讀。
本議程會說明 EinkBro 是怎麼開始它的開源之路；以及一路以來，如何透過其他開放程式碼的協助，不斷地新增各種實用的功能。也希望其他對瀏覽器開發有興趣或是對電子書閱讀器有使用經驗的朋友，一起來加入開發的行列。
=======
SQL 的 Query Optimization，被廣泛的認為是 Relational Database 實作中最困難的部分之一，Postgres 作為最被廣泛使用的資料庫之一， 用了基因演算法來處理 Query Optimization ， 本次演講，嘗試解釋 Query Optimization 為什麼困難？ 所謂的基因演算法是什麼？ Postgres 又是怎麼把基因演算法應用在  Query Optimization 上。下一個世代的 Query Optimization 技術又可能是怎麼樣？
5   min - SQL 為什麼可以優化? ＆ SQL為什麼需要優化？
  5   min - SQL 優化器為麼實作很困難？
10   min - 為什麼 Postgres 要用基因演算法？  ＆  基因演算法是什麼？
   7   min - 了解Query Optimizer 對於工程師的日常開發有什麼幫助？
                   下個世代的 Query Optimization 會是什麼？
   3   min -  QA
=======
學習新的程式語言對我是個負擔，於是我想，位何不自己發明一種語言，然後用編譯器的方法轉成其他語言呢？這樣我就只要學一種語言就好了啊！於是我設計了 Script1 語言，並且用 C 語言寫了 s1 這個轉換程式，目前可以轉 JavaScript 在 Deno 上跑，之後會支援 Dart 與 Python (轉 Python 正由我的學生劉立行開發中)
不管這個計畫能不能像 Python/JavaScript/Dart 那樣成功，但能發明新的程式語言是我的夢想，這個過程也對我在金門大學的教學會有幫助，所以我就這樣做了。目前已經將程式碼放上 https://github.com/script-one/script1 ，還持續的改版中。
=======
MySQL InnoDB ClusterSet extends the capability of MySQL InnoDB Cluster to support multi-data center by linking primary InnoDB Cluster to one or more InnoDB Cluster replica through asynchronous replication to maximize disaster tolerance. This session will discuss the origin of MySQL InnoDB ClusterSet, the use cases, how to setup and configure, how to operate and connect from application through MySQL Router, as well as discussing some disaster recovery scenario with the InnoDB ClusterSet.
This session will talk about  the feature of InnoDB ClusterSet, how to leverage InnoDB Cluster to support transparent, 0 data loss failover between database instances in the same data center, and I will also share with the audience how to replicate data between two data centers, and how InnoDB ClusterSet supports disaster recovery transparently when the primary center is down
=======
缺乏資訊技術資源的 NGO 組織，要如何與科技社群合作，生產許多倡議與對話的資訊工具？本次分享，將以掌握企業永續轉型的工具－「ESG 檢測儀」計畫為例，跟大家聊聊倡議團體的議題發想過程，以及如何與科技社群共同思考開發資訊系統的經驗。
綠色公民行動聯盟近年以數據資料作為政策倡議的重要工具，但組織內沒有專職的資料科學人才，要如何在有限的資源下，與科技社群合作，建置「透明足跡網站」與「ESG 檢測儀」、開發「掃了再買 App」、彙整企業集團資料庫、分析應用資料找出農地污染工廠及政府管制缺失，生產許多倡議與對話的資訊工具？
「ESG 檢測儀」是我們仍在開發中的計畫，透過彙整政府公開資訊及企業永續報告書，讓社會大眾更容易掌握企業永續轉型的軌跡，促進企業落實減碳及永續轉型的承諾，邁向環境永續的正向競逐。
本次分享，將以「ESG檢測儀」計畫為例，跟大家聊聊倡議團體的議題發想過程，以及如何與科技社群共同思考開發資訊系統的經驗。
=======
n this talk, Dr. Sandro Pinto and Jose Martins will start by covering the RISC-V hypervisor extension and discuss the implementation of this extension in two different RISC-V cores: Rocket and CVA6. They will then describe the port of the Bao hypervisor for RISC-V and explain all the building blocks required to build a full virtualized RISC-V system.
=======
隨著資訊科技正式被教育部納入課綱，台灣的國中小掀起一股學習運算思維與程式的風潮。程式教育被推廣了、學生的資訊素養提升了、運算思維被更多人應用到日常生活了。都市是如此沒錯，但是偏鄉呢？
回想我第一次開車一個半小時到深山中上課，有些小朋友第一次上電腦課，連電腦怎麼開機都不會，他們缺乏資訊科技方面的教學資源，我們能否為他們做些什麼，縮短他們與都市孩子的差距？
多虧開源技術與軟體的發展，我們現在可以使用這些資源來幫助偏鄉的孩子們學習。我將以自己在偏鄉學校教 Scratch 與 Microbit 的經驗，分享偏鄉資訊教育所面臨的難處，以及如何用開源軟體幫助這些活潑的孩子學習。
=======
Java 學習之路上總難免必須接觸或多或少的JVM Bytecode，而光這個名詞就勸退了不少人，但在這場分享中，我將會用親身開發JVM語言編譯器的經歷帶您了解：JVM Bytecode的架構、ASM函式庫的各種使用體驗、以及分享我對JVM Bytecode這門技術的看法。喜歡硬核技術的您可別錯過了！
本議程主要性質為分享講者自身學習JVM Bytecode Specification的經歷以及CASC Lang的JVM IR後端開發歷程。
=======
Empowers everyone who wants to use the data to do self-serve analysis. 
Introduce how-to with open source tools, dbt, and Metabase.
=======
分散式自治組織，DAO，是使用區塊鏈記錄和管理協作的組織，從最低度在數位世界協作的組織，到最為純粹，履行程式即定律、無需信任基礎、無大台、社群自治、自由參與、預設私隱、開放數據、不可竄改八大特性的數位組織，都被稱為 DAO。
本議題以 DHK dao ( https://dhk.org ) 為個案，探討如果使用 DAO 作大型社會實驗，摸索協作新型態。DHK dao 前身為 #decentralizehk，是一個從香港出發，延伸到整體數位世界的的專案。會中分享 DHK dao「為七百萬人建立共識」的目標的由來，實踐方式，過程中遇到甚麼困難，如何面對，未來展望等等。
建議參與者準備電腦，除了被動地聽，也花 15 分鐘「弄髒」雙手，實際參與，親身感受。
地球人。LikeCoin、DHK dao 發起人。
創業者。信仰民主自由、開放多元，左而不膠；人文為體，科技為用。香港中文大學計算機工程學士、副修社會學、政治及行政；資訊科技管理碩士。於民間學院任教「區塊鏈社會學．財務自由篇」。
創作者。著有《區塊鏈社會學：金錢、媒體與民主的再想像》，文章每週五發表於 #decentralizehk 週報，轉載於立場新聞、Matters 等公民媒體，並全數收錄於 ckxpress.com。
沒有固定手機號碼，但一封電郵就能輕鬆聯繫上—— kin@ckxpress.com。
=======
## 摘要
Apache Kafka 是一個分散式事件串流平台(distributed event-streaming platform)，提供訊息的發佈與訂閱。目前有許多知名應用使用，如：LinkedIn, Line, ...等。
而分散式系統會遇到的負載平衡問題，雖然Kafka 在概念上(partition) 有為平衡作考慮，但也是會發生負載平衡問題。為了解決這個問題，我們從客戶端(client) 下手，設計一個訊息分配框架，讓使用者根據自己在意的"效能指標"，決定訊息分配的策略。
本研究特別感謝『科學園區計畫-自主高效串流資料管理平台與新興應用』的支持。
## 說明
Kafka producer 在發送資料時，可以選擇要把資料送到哪個partition，也因此可以從這下手，調整叢集機器間的吞吐。
不同情境會有不同的解決方法，我們設計出一個框架，讓管理員可以藉由參數調整，改變producer 的發送策略，以符合不同的情境。框架的好處在於
1. 彈性面對各式情境：
  情境有千千百百種，要一一條列解決是不可行的，因此，我們就需要框架來重複利用程式碼，藉由修改參數，滿足多種不同情境。
2. no-code 重新組態partitioner：
  在no-code 下重新組態partitioner，讓管理員無須完全瞭解底層架構，也能調整partitioner 應對方針。
3. 方便自定義：
在未來，若出現新的情境，或許是需要"自定義的數據"，只要在程式碼中實作2~3個介面方法，便將程式插入我們的框架，方便自定義。
=======
身為文組畢業生，我在荷蘭轉職成為工程師的經驗，以及荷蘭職場文化分享。
- 如何使用 Open Source 資源來學習，例如：freeCodeCamp、MDN。
- 如何貢獻 Open Source 專案來增進自己的功力，例如架設COSCUP網站[1]、協助MDN技術文章的翻譯等。
- 如何在 GitHub 上公開自己的作品集，提昇自己履歷的能見度。 
- 異國工作心得。
[1]: https://coscup.org/2020/landing/
這是我第一次投稿，還請多多包涵，謝謝！
=======
這幾年函數式響應式編程 (functional reactive programming) 在網頁前端成為顯學，沒幾個月就冒出來的新 library 為這個領域帶來各種活力，在這些工具上我們可以窺見一些函數式程式設計常見的技巧。
反過來看，函數式程式設計有哪些精神，可以用在現代網頁前端開發上面呢？這個議程將介紹一些個人且非主流的技巧。
這個議程將介紹以下主題：
- 靠抽象層切割問題
- 自幹代數資料結構
- 在不同的語境中工作
  - 和 OOP 合作
  - 和 ES6 Promise 合作
  - 和 Rx Observable 合作
- 網頁前端裡的 CPS 變換
=======
1. 介紹雲原生這個字的來由，讓學員了解大致的含義，包含了各個時期對於雲原生的定義，讓什麼都不懂的學員也可以有基本的認識。大約  5 min。
2. 統整出較好理解的雲原生定義，並說明一般可接受的要素包含容器化、上雲、微服務、DevOps，以及基礎建設即程式（IaC，CNCF 更廣泛地稱之為聲明式 API），並帶出 CNCF 建議的雲原生導入地圖流程。學員對於雲原生有基礎認識之後，可以更深入了解雲原生的概念，並透過 Cloud Native Trial Map 大致理解專家建議的導入流程，以供學員可以進一步對照自身的狀況。大約 15 min。
3. 雲原生 IT 大調查，分享台灣這邊的雲原生技術使用狀況，並快速分析與 CNCF 2021 年調查的差異，讓學員可以進一步對照自身的狀況。大約 10  min。
近年來雲原生一詞在各大技術媒體不斷出現，但到底什麼是雲原生（Cloud Native)？不管是雲端大廠、儲存、資安，甚至各種數位轉型的文章，都會講到雲原生這個詞。似乎是在講指容器化、Kubernetes，但怎麼又扯到了CI/CD、微服務？這些其實都是導入雲原生可以依循的技術與脈絡。這邊就來介紹一下雲原生這一詞的演進，以及到底雲原生的幾個要素。是架構？技術？還是文化？
最後帶來了台灣這邊針對企業所做的「雲原生 IT 大調查」。了解概念之後，再來看看目前的現況，以及台灣相較於全世界，對於雲原生採用的差異。
=======
微光生活設計室除了空間、策展、創作及整合規劃等專業外，更多著墨於如何將藝文等相關議題透過共同營造的方式，帶入生活及教育場景中。
近兩年，龜山地方各單位（團體、各級學校）之間的連結合作，愈趨頻繁、緊密。蹲點在地方，作為觀察者、整合者及執行者等多重角色，試圖從觀察各單位之個性及專長、且擔任中介者整合相關資源，以及藉由不同計畫達到「共同」形塑龜山生活樣貌。
=======
開放科學是指針對科學研究過程所蒐集的資料、使用工具及產出結果的開放及再利用，有助於科學進展和知識傳播。本演講將藉由在高中舉辦天文黑客松的經驗，分享參與者如何透過使用開放資料及開源軟體，協作貢獻開源的科學教材，並說明這種開放協作的模式如何作為公民科學的一種新嘗試，並擴及到不同領域的科學教育。
=======
This session would show how Ruby can work with UN*X system and how it can replace POSIX utilities easily, especially for text processing. In this session, you would learn how to work with other CLI tools with Ruby and how to build CLI tools by Ruby.
=======
Privacy on the internet is stuck in a vicious circle involving tech and legislation, which we need to escape.
It takes far too long for legislators to transpose directives. The data industry uses an arsenal of dark patterns and technical stunts to creatively interpret or completely circumvent the applicable law.
A new approach is needed to solve this problem in a sustainable way and make the web a better place again. In our talk we will give a brief insight into problematic patterns and techniques as well as approaches to overcome them.
=======
專案開發時都會遇到各式的前端需求，過程將使用 Hotwire 實作 Partial Load 來增進開發速度，並探討其實現的機制
=======
巷子裡的開發者都知道，在終端機底下用指令做事是又快、又有效，而且看起來還很帥的做事方式。即便是專注於 Web 開發的 PHP 程式語言，也提供了 CLI SAPI 供開發者打造指令工具。在這場分享裡，將從撰寫 CLI 工具所需的基礎知識出發，逐步介紹如何輸出文字、表格、背景、動畫、打包、發佈以及開發生態系裡可使用的套件與框架。聽完這場分享後，將更能享受以開放原始碼打造工具的快感。
預計分享大綱如下：
* 執行 PHP 的方式：Web v.s CLI
* 開發 CLI 工具所需的基礎知識
* 基礎技巧 (程式執行、傳接參數、畫面輸出、常用套件及工具)
* 進階技巧 (顏色及背景控制、表格排版、動畫)
* 打包工具及發佈管道
* 回顧與總結
=======
I am able to influence the people around me with what I have learned through OSS activities while working for a Japanese company. I would like to talk about such daily life.
In Japan, it is difficult to make a living just by liking OSS. Except for those who are very skilled or have good business sense, it is true.
However, in order to make it as an engineer employed by a company in Japan, you should be able to make use of what you have learned in OSS.
In this talk, I will talk about what I learned from OSS and how I am applying it to my job as a security vendor in Japan, as an enthusiast of desktop applications, an OSS that is not considered profitable in Japan and for which I have neither much skill nor business sense.
=======
GitLab 近年來新增許多跟 DevOps 相關的功能，無論是整合 Kubernetes cluster 或是提供 Container Registry，整合 DevOps 生命週期的每個階段性功能，為開發或是維運提供了更方便的選擇，GitLab 也以成為 DevOps 平台持續發展中，本議程將介紹講者身為一個大學生，在學習 DevOps 過程中，在 GitLab 上發現的相關技術與工具，以及如何在專案開發後期階段中利用 GitLab 所提供的工具讓部署及後續維運監控更順利。
此議程可能或許應該會提到以下工具，但不限於，如 
- Security
    - SAST
    - IaC Scanning
    - Secret Detection
- Infrastructure
    - KAS(GitLab agent server for Kubernetes)
    - Terraform
- Image Build tool
    - Dind
    - Dood
    - Kainko
- Registry
    - Package Registry
    - Container Registry
    - Infrastructure Registry
講者希望能透過分享這些工具，降低學生踏入 DevOps 世界的門檻，歡迎對相關應用有興趣的學生來交流。
=======
小麥注音輸入法是一套開源的智慧選字注音輸入法，目前有 macOS 與 Linux 版本。今年我們嘗試將小麥注音的選字引擎移植到 Web 技術上，讓無法安裝輸入法的用戶，也可以透過某個瀏覽器分頁，使用順手的輸入法入中文，並嘗試做成 Chrome Extension。
結果發現，在 2022 年的環境下，使用網頁技術開發輸入法可說困難重重，但仍然是一個有趣的過程—踩地雷這種事情最有趣了。
包括
- 小麥注音是什麼？
- 過去使用網頁實作輸入法的簡短回顧
- 我們做了什麼？
- 我們遇到了什麼？
=======
說到LibreOffice 巨集，大家可能只會想到Basic，Basic的確是Office巨集當中的主角，卻不是唯一的選擇
Python 是最流行的程式語言之一，我們可以用它結合LibreOffice，打造巨集的無限可能性
我們或許會碰到很多問題
* 怎麼開始LibreOffice Python?
* API 很難查怎麼辦？
* 怎麼移到其他電腦，怎麼嵌入到檔案裡帶走阿？
這個講題，獻給所有想用Python寫LibreOffice巨集的人
Python 自帶文字處理、網路爬蟲、檔案資料夾搜尋、讀寫json檔與zip壓縮檔的能力
但是我們要如何將這些能力打造到到LibreOffice 中，將手中的LibreOffice 變成各種好用的工具，不管是一個按鍵大量更改不同資料夾內的檔名，或者是把手邊的文字檔變成整整齊齊的試算表，LibreOffice + Python 都可以辦到
=======
分享過去18個月在一個以 functional 為核心技術的超分散跨國團隊碰到的趣聞以及經驗。
包含，但不限於下面這些主題：
- 使用 functional 的工作不好找，但是多不好找？
- 以開發來說，平常到底都在做什麼？functional 在這之中扮演怎樣的角色？
- 寫 functional 很棒，但是和一大群 formal method 相關領域的 PhD 同事共事有什麼優缺點？
- 和外國同事工作的機會很多，但是一次性和成員來自超過七八個國家的團隊合作，那會是什麼情況？ 
- 當「維護一個巨型開源系統」碰上 「大家都愛 functional 但是都不愛寫文件」 ，身為英文小廢物的我如何自處？
=======
1. 我都叫 Shell，什麼是命令列介面 (Command-Line Interface, CLI)？
2. 為什麼要使用命令列介面？
3. 套件管裡系統 (Package Manager) 介紹
4. 琳瑯滿目的命令列介面和套件管理系統該如何選擇？
5. MSYS2 與 Zsh 調校步步走
macOS 和 Linux 發行版裡方便好用的命令列介面與套件管理系統是許多開發者離不開它們的主因之一；現在我們可以在 Windows 上接近百分之百原生複製它們的使用體驗。
※ 真正原生，不是用像 WSL 2 這種 VM 模擬。
=======
身為坐辦公室的上班族，難免會有久坐電腦前的情況，駝背的習慣也就慢慢成形。為了解決這個問題，筆者利用 Python 琢磨出具有實用性的 AI 專案，讓自己工作時，透過簡單的輔助，使身體時時抬頭挺胸向前看。本議程將揭露筆者做出防駝背神器的所有歷程與嘗試，包含程式碼與零件，都會一一揭露。
=======
在近代，多核心處理器的硬體大量進入到消費者等級市場，並行程式設計已被大量使用。而相關的 debug tool 也有被提出。
在 Linux Kernel 中也有相關的 concurrency debug tool ，如 Kernel Concurrency Sanitizer (KCSAN) 。
在此次演講中，會介紹 KCSAN 的運作機制。
=======
演講的主要內容會聚焦於一個通用API的介面設計，並特別介紹 ActiveMerchant，這個由 Spreedly 維護的支付閘道函式庫。從閱讀 Active Merchant 的源碼並討論其程式架構，關鍵元件與開發技巧，並在最後總結通用API的優缺點。
http://activemerchant.org/
https://github.com/activemerchant/active_merchant
=======
本議程將說明 Rails Template、Kamigo LINE Bot 聊天機器人框架、以及如何使用 Rails Template 來進行快速開發 LINE Bot 專案，預期聽眾能在聽完議程後理解建立一個 Rails 專案的各種方法，以及透過 Rails Template 來學習其他開發者的開發慣例。
Rails 是著名開發速度快的網站框架，能以極快的速度開發出中小規模的網站，對以接案維生的後端工程師來說，若能擁有無限的案源，那麼開發速度有多快就等於收入有多高。每個資深工程師都會有一套自己對於網站架構的 Best Practice，而 Rails Template 就是工程師將網站架構的 Best Practice 寫成自動化生成新專案的程式。如果經常有建立新的網站專案的需求，那麼使用 Rails Template 不但可以減少開發一個新網站所需的時間，也可以透過觀察別人的 Rails Template 來與其他資深工程師進行深度交流。
Kamigo 是基於 Rails 的 LINE Bot 聊天機器人框架，其核心設計理念是網站開發就是聊天機器人開發，Kamigo 試圖在網站和聊天機器人當中尋找對應關係，並且將其對應關係實作成框架，於是就可以用開發網頁的方式來開發聊天機器人。
使用 Kamigo 讓你快速打造一個含有豐富功能的 LINE Bot ，包含 Flex Message 以及 LIFF 等較新的技術都已整合進入 Kamigo 框架之中，而使用 Kamigo 所提供的 Rails Template 讓你能更快速地建立一個 LINE Bot 聊天機器人服務。
=======
WAGIWAGI 計畫橫跨了虛擬現實與多國文化的語境，進一步理解土地、紅瓦建築與生活空間的關係，紅土作為凝聚社會的社群力、科技現於當代社會的建築意義和轉譯，未來生活的轉變可能性有多大？
位於東南亞地區的印尼西爪哇的馬賈倫卡地區具有豐沛的紅壤，與台灣多個地區有著相似的氣候和地質面貌發展，然而我們鮮少有機會觀看、比對兩地的媒材、建築空間和文化景觀。通過「當代藝術」的創新前衛概念，放置於社區意識和探索藝術影響力，並且以「紅土」(terracotta) 媒材作為詮釋未來生活的文本，思考磚瓦產業面對城鄉發展下的挑戰和契機。
對照兩地文化脈絡，WAGIWAGI 計畫橫跨了虛擬現實與多國文化的語境，進一步理解土地、紅瓦建築與生活空間的關係，紅土作為凝聚社會的社群力、科技現於當代社會的建築意義和轉譯，未來生活的轉變可能性有多大？
=======
江湖傳說：『做一個事情超過十年，就會變成專家！』（Source : Malcolm Gladwell 著作《異數》）
人生有12年很投入 Open Source 社群活動著，也因為 Open Source 體會到「文化差異」：社會、群體、國家等等，還不是專家但是想分享那12年遇見的各國社群人事物，藉此推坑更多觀望的朋友們，來吧！開源大法環遊世界超有趣。
規劃中的內容綱要：
1. 亞洲其他區域社群與台灣開源社群，有趣的異與同。
2. 開源社群活動而體會到的社會演變，以及政治文化。
=======
-
=======
- OpenVINO 開源 AI 工具介紹
- OpenVINO 的社群與應用
- OpenVINO 輕鬆讓你深度學習
- OpenVINO 為 Intel 所開源之 AI Toolkit，不需有高門檻的硬體設備，只要一台筆電即可開始應用深度學習。
- OpenVINO 有廣大的學習社群及有超過 300 個預訓練 AI 模型(Intel Model Zoo)可快速開始，並且全球有超過 20 萬的開發者，在業界也有許多落地應用案例。
- OpenVINO 能夠初學者快速使用、優化、開發，並能學習最新的深度學習知識。
=======
到2021年為止，台灣原住民之中有六族、五種語言成功孵育了屬於自己的維基百科。台灣的開放知識運動朝著平權邁進了更大一步。然而在歡欣之餘，我們也意識到更多的問題。以空間為界線的「台灣維基」和以語言為區別的「各族語維基」將遇到哪些問題？我們將從內容建置、運動分工、資源分配與對外交流四個層面拋出議題，刺激對下一步的戰略思考。
=======
