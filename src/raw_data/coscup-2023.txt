醫學資訊標準是發展精準醫療、智慧醫療、全人醫護的基礎，但目前醫資標準化系統研發人才很缺乏。發展醫資標準化系統所需知能並不困難，但其牽涉到醫學、資訊、及標準等多領域知識，大家普遍不熟悉。目前健康醫療有許多應用需求，很值得主動、積極的同學投入參與發展。我們將透過醫資標準入門教育訓練、應用情境討論、標準確立、合作開發系統、聯測、系統模擬評估等系列活動。引導年輕的同學參與標準化醫資系統發展過程。
### [醫資人才扎根培育系列活動](https://hackmd.io/@VirtualHospitalaaa/BkcsSzlsc)
=======
Vortex is an open source Hardware and Software project to support GPGPU based on RISC-V ISA extensions. Currently Vortex supports OpenCL/CUDA and it runs on FPGA. The vortex platform is highly customizable and scalable with a complete open source compiler, driver and runtime software stack to enable research in GPU architectures/compiler/run-time systems.
=======
Rust is a great language for fast and secure code. Databases like MariaDB are great for fetching data. Lets go through a working example on how to use existing [crates](https://docs.rs/udf/latest/udf/all.html) to make some fast and secure SQL functions implemented in Rust.
=======
BanyanDB is an observability database optimized to handle metrics, tracing, and logging data generated by Apache SkyWalking. It improves performance and resource usage for SkyWalking's APM data model. Based on the RUM conjecture, BanyanDB extends SkyWalking's boundary and optimizes the data flow process. During this talk, the speaker will delve into the specifics of BanyanDB, based on their conjecture. He will elaborate on why this particular storage layer is superior in terms of reliability and effectiveness when compared to other options available.
=======
說到開源/開放 (Open Source)，耳熟能詳的是開源軟體。開源設計或稱開放設計 (Open Source Design 或 Open Design) 是近三年才開始嶄露頭角。開源設計是一種透過開放和共享的方式，讓人們可以自由地存取、使用、修改和分享設計資源的方法。這種方法不僅可以促進設計師與其他專業人士共同學習、交流合作，促進設計的發展，並且培養人們的創新思維和解決問題的能力。作為一個開源初學者，我踏出了開源專案的第一步，希望能讓更多人看到開源與設計領域的價值，讓我們能夠共同創造更多具有影響力的設計作品，推廣開源和設計的創新與發展。
=======
1. 介紹 Jetpack Compose 與 Declarative UI
2. 介紹 Jetpack Compose 渲染機制與效能考量
3. Immutable 與 Stable 講解以及源碼分析
必備前置技能：
1. 需要對 Kotlin, Swift 或是任何現代物件導向程式語言有一些基礎知識。
其他前置技能，如果有的話會更好：
1. Compiler 的一些基本知識，像是 Abstract syntax tree。
2. 知道 Kotlin Compiler Plugin 或是寫過 KSP。
3. 實際上有在開發 Jetpack Compose 或是其他類似框架，像是 Flutter 或是 Swift UI。
內容還包含了：
- 帶你了解 Jetpack Compose compile 跟 runtime
- skippable 跟 restartable 的用途以及源碼
=======
在產生密碼用於加密各種協議，但隨機產生的數怎麼產生的？這些數字真的夠「隨機」嗎？產生亂數又需要多少時間？
在這個議程，想跟大家分享討論這些議題
- 運用 LFSR 得到亂數的手法
- Linux 運用哪些資訊來產生亂數？
- Linux 產生亂數的整個架構 ，/dev/random 和 /dev/urandom 對應到內部哪些實作？
- Linux RNG 如何達到 CSPRNG 要求？
- 如何去評估亂數的好壞，如何確保他「夠亂」
=======
Django is one of the most popular python frameworks used to create web applications. While a lot of people focus on the Django ORM and the Django templating engine, the Django framework also comes with a neat set of middlewares and plugins that can be used to add security headers to your applications. Security headers are a very important layer of defense for your website to keep your users protected. In this talk, we are going to discuss what the different security headers do, and how can we add them to django.
Outline of the talk:
- What are security headers?
- Demo with securityheaders.com
- Go through all the security headers in Django Security Middleware and explain what they do
- How to use django-csp to add Content Security Policies?
=======
在微服務架構下，client side 的應用程式可能由數十個不同的服務組合起來，在處理外部請求時，每個服務都必須考慮驗證授權、Cache、Rate Limiting…等機制，每個服務使用的程式語言與實作的方式不盡相同，容易造成開發及管理成本的上升。
此時若導入 API Gateway 的模式，由 API Gateway 統一負責處理請求的各項細節，服務本身就可以專注在業務邏輯的開發，管理者也能透過 API Gateway，輕鬆管理和監控系統上 API 運行的情況。
本次分享以 Kong API Gateway 為例，將示範如何使用 Kong API Gateway 管理 API 並為 API 服務加上驗證授權、Cache、Rate Limiting等機制，並分享Kong不同架構方式及其適用的情境
=======
Go 1.18 brought Generics.
When we heard this official announcement initially, we thought we could finally write Go programs quickly and run them efficiently. But after one year, the characteristics of Generics suffer us in many ways. It doesn't become Swiss knife as we think.
So I will share some experiences of using Generics, point out what is going on in the design of Generics, show how to use Generics well, and when to apply Generics.
This talk will introduce these:
- The original purpose of Go Generics.
- We met what issues when using Generics in production usage.
- Reconsider the meaning of the existence of Interface/Reflection/Generics.
Slides: https://hackmd.io/@fieliapm/BkHvJjYq3#/
=======
賽德克人係為台灣原住民族之一。賽德克語維基媒體用戶組業已於 2021 年正式成立，旨在聚集賽德克語用戶，以提高整個維基媒體運動的意識、使用和內容創作。我們的目標是提高認識、參與和建立賽德克語數據庫。
為了掀起寫族語的運動，開展宣導活:
1.透過任何活動（與賽德克語言和文化有關）或設立展位來宣傳我們的工作。
2.建立聯繫並在社交媒體上推廣活動（業已在line上成立群組上進行討論多年，運用Instagram, Facebook粉絲專頁加強推廣）。
為了增加參與度，我們期待
1.邀請我們外展活動中感興趣的人參加例行聚會，並通過創建新文章來充實並改進賽德克維基百科的內容。
2.我們計劃在聚會和有針對性的培訓活動期間舉辦 Wikipedia edit-a-thons，旨在向新用戶介紹 Wikipedia、Wiktionary、Wikidata 等方面的一些技能。
為了建立賽德克語數據庫，我們將計劃在賽德克部落進行 4次，收集四語別語料庫的旅行，這些語料庫將用於賽德克維基媒體項目。
1.現在在賽德克語維基百科中，用戶只能引用其他語言的參考文獻來開發文章的內容，因為在網上能看到的賽德克語文檔顯少。第一手知識很重要，因此，我們計劃建立一些直接由賽德克人講述的在線文檔（當然是賽德克語）。將在賽德克部落進行多次採訪，隨後所有音頻或視頻文件將被轉錄成 pdf 文件並上傳到維基共享資源（帶有賽德克語描述）。基於這些新的賽德克的文檔，我們相信賽德克維基百科的文章質量可以得到提高。
2.基於“原住民族語言線上辭典”和“賽德克圖解詞典”，我們計劃在維基數據和賽德克維基詞典上進行編輯。對於當地的表達方式和其他有待發現和記錄的詞彙，我們計劃走訪一些不同的賽德克部落，從長輩們或有經驗的演講者那裡收集詞彙。我們收集的這些詞彙和表達將在維基詞典和維基數據（詞位）上更新。
=======
When FPGA became affordable, everyone can create his own chip easily nowadays. There are many open sourced FPGA projects on the Internet so even a non-experience software engineer can make their own chip easily. 
In this session, I will introduce the basic concepts and resources for the audiences who want to learn how to make their own chip. I will also introduce the basic concepts behinds my open sourced ray tracing GPU project.
=======
GCP 費用優化分享
在這個議程, 預計與大家分享在 GCP 平台上如何進行費用優化
* 介紹 GCP 費用管理工具與帳單
* 介紹 常用的 GCP 服務與費用優化想法
=======
Learn about JetBrains Exposed, a Kotlin-based ORM framework, including its key features and how to build database applications.
JetBrains Exposed is a Kotlin-based ORM framework that simplifies database operations. This presentation covers its key features, including support for various databases, an expressive query DSL, and the ability to handle complex queries. Attendees will gain an understanding of JetBrains Exposed and be able to begin building Kotlin-based database applications.
=======
前端開發常常會碰到一些麻煩或者重複的事情，例如：
1. 配置環境非常麻煩(像是 ESLint、Prettier、VSCode settings..等等)
2. 還有表單驗證
3. 型別檢查
4. 手動撰寫大量串接 API 的函數
5. 後端寫超慢，需要等待後端開發完成才能串接等等..
舉例來說:
1. 後端提供 API Spec，但：
* 好多 endpoint 要寫
* 寫 request body 一個一個欄位對，好累
2. 使用 TypeScript，但：
* 各種 schema 都要寫 type，寫不完
* response parse 成 json 後型別是 any，好不方便
所以我們將分享利用各種開源工具來解決或加速處理前端以往會遇到的麻煩事，來讓整個開發變得更彈性且高效。
更重要的是，這個解決方案是 framework agnostic 的。
在開發過程中，開源工具可以幫助開發者解決各種麻煩或重複的事情；我們開發了兩個開源工具，分別是 lai-cmd 與 mswx，其中lai-cmd可以自動下載所需的套件和產生開箱即用的設定，用於快速配置前端開發環境。它可以減少建置環境時的困難，進而可以更快地開始開發工作；而 mswx 則是為 msw(Mock Service Worker) 做一些擴充功能，更方便開發。
我們也分享如何使用 zod 去處理型別檢查、表單驗證等等事情，zod 是一個 TypeScript 的 schema 定義和驗證工具，另外 zod 也擁有非常豐富的生態系，例如 zodios 可以定義 endpoint 自動生成 axios 的 client，另外我們將分享如何快速利用 openAPI 的 spec 去生成 zodios 的 client。
最後將再分享如何利用 zodios 去結合 mswx，並使用 msw-auto-mock 快速定義各個 endpoint 的 handler，也可以利用zod-mock去根據 zod 定義的 schema 快速生成 mock data，不必再等待後端開發完成。
利用這些開源工具可以讓整個前端開發過程變得更加彈性和有效率，並且可以更專注於開發核心功能。同時使用這些工具還可以提高程式碼的可讀性和可維護性，減少犯錯的機率，使得開發過程更加穩定和可靠。
=======
In order to calculate the cost of each dbt build execution through dbt-bigquery, I started reading and modifying the source code of the dbt adapter. As long as you have a basic understanding of Python syntax and some simple trace code techniques, such as using "string" that do not change and the stack trace when exceptions occur, combined with a debugger, you can easily achieve the desired effect.
為了想要透過 dbt-bigquery 計算每一次執行 dbt build 的成本，而開始邊讀邊改 dbt adapter 的原始碼。只要你對 Python 有基本的語法概念，再加上簡易的 trace code 技巧：依賴不變的字串與發生例外時的 stack trace，再配合 debugger 就能簡單地改出想要的效果囉！
=======
考量到對於 sandbox 執行環境的需求，一個高效能且可嵌入式的 RISC-V 模擬器對滿足這樣的需求至關重要。受益於 RISC-V 的開源指令集和龐大的系統生態系，我們的模擬器得以用較低的記憶體開銷和可接受的執行速度來模擬 RISC-V 程式。 本次將介紹如何實作一個精簡且高效指令集模擬器，另外，也將討論如何透過加入周邊模擬，改造為可運行 Linux 的 RISC-V 系統模擬器。
將介紹如何實作一個精簡且高效指令集模擬器，也將討論如何透過加入週邊模擬，改造為可運行 Linux 的 RISC-V 系統模擬器。
=======
學生碰不到，但企業都在用的 Kubernetes 究竟該如何學習。本場議程中，講者將分享自己從僅會使用 Docker 建立容器，到後來了解並掌握 Kubernetes 的經驗，並提供學習方式，引導大家進入 Kubernetes 的世界。
Outline
1. 什麼是 Kubernetes (8mins)
2. 為何要學習 Kubernetes (12mins)
3. 如何學習 Kubernetes (5mins)
4. Q&A (5mins)
=======
介紹 Laravel Pennant 套件如何幫助工程師輕鬆地實現 Feature Flags，以控制網頁不同功能的發佈和切換。
Laravel Pennant 套件是 Laravel 10 推出的一個套件，可以簡單的實現 Feature Flags 功能。
我們會介紹如何使用 Laravel Pennant 套件，讓工程師可以靈活地控制應用程式中不同功能的發佈和切換，減少風險和提高效率。本次演講將探討 Feature Flags 的概念、並討論如何在 Laravel 中實現 Feature Flags 的方法和最佳方式。
=======
分享在coreboot 開發chromebook的經驗
coreboot 專案開發經驗分享:
從ODM廠的角度分享從close source到open source的經驗，為什麼要用open source，如何讓社群變得更好．
My experience from close source to open source, why should you join open source, how to make community better.
=======
The Design We Open Workshop - 網路中斷黑客松
【The Design We Open- Hackathon- Internet Shutdowns】workshop is a one day event inviting #programmers, #coders, #designers and problem solvers to create MVP in a 6 hour workshop that prepares us for an internet shutdowns scenario. Participants will collaborate in teams to develop innovative open design applications. They shall use the design thinking principles as a tool in fostering opportunities for cross-border, interdisciplinary, so that all talents from various fields can interact. Don't miss this chance to gain hands-on experience and connect with open design enthusiasts from Taiwan and beyond.
=======
數位發展與減碳淨零是國家發展的重點政策，更是全球共同的熱門話題。身為農業開放資料社群主揪的阿柴，當然也有跟到這波國際潮流。這次要和大家分享「減碳計算機」的開放專案，我們嘗試在聊天機器人的平台上，讓使用者輸入常見的「重大溫室氣體排放源」例如用電數據、汽柴油、瓦斯等，便能立刻取的二氧化碳排放量的計算結果。預計年底釋出較完整的「農場碳盤查」功能，期待更多人參與專案，未來可結合地圖功能，鼓勵農場主人公開揭露自己場域的溫室氣體排放量，逐步落實減碳的目標。
=======
RISC-V 平台開機過程的簡介，
簡介過程使用到的軟體專案 (U-Boot, OpenSBI, Linux) ，
以及這些軟體專案所扮演的角色。
主流 RISC-V 平台的開機過程，通常是由
U-Boot-SPL -> OpenSBI -> U-Boot(-Proper) -> Linux 
這些不同的 booting stage 所組成，
向大家簡介這些軟體，並介紹這些軟體開機流程的行為以及後續扮演的角色。
=======
2013年因Docker技術出現後，意識到容器將顛覆IT產業，開始積極投入開源社群，無心插柳成為譯者，技術專欄作家，到金融業技術架構師；透過Docker，學習和使用開源技術已成為資訊人員職涯發展的重要一環。
回顧十年來，如何透過開源技術及開放態度逐步培養個人能力及創造自身價值，如何從程式開發到企業架構規劃的職能轉變，深化硬技能的基礎到培養必備的軟技能，希望這十年的經驗可供開源同好借鏡及反思。
大綱：
1. 自我介紹，目前架構師的工作內容
2. 開源如何讓自己在四十歲還能兩年換一次工作
3. 開放精神如何影響態度、想像和思維
4. 開源資訊如何利用來加速成長及創作
5. 學習是需要方法及方向，培養T型能力到成為π型人才
6. 結語：隨著GPT/LLM這類的NLP模型出現，該思考如何轉型並以更高層次思維去提升能力
=======
你是否有過保護你鏈上資產隱私的需求？有的話來聽聽看
=======
As the cloud native movement gains momentum, it becomes increasingly important to understand complex technical terms, concepts, and technologies. The CNCF Cloud Native Glossary (glossary.cncf.io) aims to define cloud native concepts in clear and simple language, making them accessible to everyone. In this session, Seokho Son, one of the maintainers of the Cloud Native Glossary and a CNCF Ambassador, will introduce the project and demonstrate how it can be a valuable resource for understanding cloud native terminology. You can use the Glossary to grasp complex terms and make your first contribution to the CNCF and the Cloud Native community. The community eagerly awaits your contributions! Join this session to learn how to utilize and contribute to the Cloud Native Glossary.
=======
VLC Media Player 4.0 features round-up
VLC 4.0 and Beyond: Advancements in Open-Source Media Player Technology
The long awaited 4.0 version of VLC Media Player brings significant enhancements and changes which are still delaying its release. Lots of internal rework have been made and a new UX interface will offer an intuitive and modern design.
We will also review some new player API and platforms, offering a powerful, flexible, and open-source media player, empowering developers to create new and innovative products and services that can better serve the needs of users.
Additionally, future support for WebAssembly will allow easy embedding into web-based applications, providing a seamless media playback experience across different browsers and operating systems.
=======
1. The high level introduction of Open Source FW, 
     - Open System FW/OpenBIOS with different architectures (UEFI, coreboot, etc..)
     - OpenBMC for all in one of server board and modular design for different devices in Datacenter 
2. How the Open Source FW become major solution for server industry
3. Current status of Open System FW and OpenBMC for the commercial server
4. The challenge and things need to be done in future of Open Source FW
=======
Nowadays security incident is increasing more and more. Then lots of vendor/community/institute are making efforts to find vulnerability on software.  Not only commercial software, but also OSS is having vulnerability (remember Log4Shell, Dirty Pipe and so on). Then lots of security researchers are reporting vulnerability an d publish it with CVE-ids which is assigned by MITRE.   In this session, Kazuki Omo will report recently trends of OSS CVE in 2022-2023. Also show some typical vulnerability PoC and pich up several example for exploite d vulnerability in 2022-2023 incident. And tell how you can catch up those news immediatelly and protect those vulnerability by using OSS product/solution.
=======
分享參加 Autoware 自駕車社群的緣由，並且簡單介紹 Autoware，包含架構、功能等等，最後會帶出參與 Autoware 社群的經驗以及貢獻。
In the talk, I'll share why I joined Autoware community and give a brief introduction to Autoware architecture and functionality. Also, I'll share my experience and contributions to Autoware.
Autoware 是世界上少有的開源自駕車框架，隨著自駕車的概念越來越盛行，對企業或學術單位來說，可以基於一個開源的框架來發展自己的產品或研究是非常重要的。期望透過這次的介紹，讓更多人可以了解並參加 Autoware 社群。
此外，Autoware 在技術上基於 ROS 2 / DDS 並開發各種自駕車相關的演算法模組，例如定位、感知、路徑規劃等等，各個貢獻者會針對感興趣的部份進行討論和貢獻。這次介紹中也會特別分享自己是如何找到可以改進的地方，與社群討論，並且貢獻程式碼的經驗。
Autoware is an open-source autonomous driving framework. While autonomous driving is more and more popular, it's very important for companies and researchers to develop products or do research based on an open framework. I hope to invite more people to join the Autoware community after the talk.
Furthermore, Autoware is based on ROS 2 / DDS to develop several modules related to autonomous driving, e.g. localization, perception, planning, and so on. Contributors will discuss and contribute to the module they are interested in. In the talk, I'll also share my experience about how to discuss with the community and have some contributions.
=======
本次分享將介紹如何使用KeyCloak和PostgreSQL實現一次登入(SSO)來解決DevOps工具的登入障礙。我們將演示如何將KeyCloak順利整合到常見的DevOps工具中，並強調一次登入(SSO)的優勢，包括減少重複登入和提高安全性。同時，使用PostgreSQL作為後端資料庫，確保使用者資訊的完整性和安全性。
此次分享不僅將提供實際操作示範，還將分享最佳實踐和注意事項，幫助觀眾在實踐中更好地理解和應用一次登入(SSO)的概念。無論是在管理工具的登入過程中還是在確保資料的安全性方面，這個解決方案都將為DevOps環境帶來實際的成果和效益。我們期待與觀眾分享這個實用且具體的主題，使他們能夠在日常工作中更輕鬆地管理工具的登入，同時提高整體的安全性水平。
=======
數位與減碳的雙軸轉型是農業開放資料社群在2023年的重要方向，呼應社群成員們對減碳、淨零、ESG議題的需求，我們決定在今年的COSCUP新增一個Opening Talk，由社群主揪阿柴、同時也是財團法人農業科技研究院淨零辦公室的業務代表，和大家分享如何以數位工具協助農企業進行碳足跡、溫室氣體盤查與ESG報告規畫的經驗，並且說明開放資料要如何加速數位、減碳的雙軸轉型。歡迎大家入座來聽聽~
=======
The lecture focuses on par-stream, a demonstration of stream-oriented programming.  It can build a staged pipeline that scales up to CPU cores, and it leverages async/.await to mix I/O-bound and CPU-bound operations. All of them are written in iterator style, allowing users to build a scalable data processing pipeline without tears. The lecture introduces the building blocks to build the pipeline and explores the design in depth.
Rust features its fearless concurrency, founded on ownership and
interior mutability. It turns out to be a solid foundation of
asynchronous and parallel programming. The massive concurrent I/O is
tackled by async/.await. Parallel programming is achieved by threading
or `rayon`. The difficult part is to avoid data races among concurrent
operations. Thanks to Rust's unique ownership model. It erases
incorrect code in compile-time and enables efficient concurrent data
structure implementations, especially the `crossbeam` crate and
`tokio`'s channels.
The `par-stream` crate goes further. It tries to combine the
advantages of asynchronous and parallel programming, making it
possible to mix up massive I/O and computation tasks. The challenging
part is that both tasks have very different design principles. I/O
tasks focus on the proper scheduling of file and network events. It
can be solved by async/.await. Computation tasks utilize most CPU
resources and avoid scheduling overheads. It's less likely to write
computation-intensive code in async context. In terms of Rust, it
requires a wise design to mix up async context and non-async contexts.
`Par-stream` features the stream-oriented programming model, which is
similar to the iterator style of writing. It allows users to focus on
actual data processing algorithms. Without `par-stream`, users would
manually craft the data channels to wire up data processors. When the
data processor has be scalable, the wiring task becomes more
complicated. `Par-stream` promises to avoid wiring jobs for users and
provides automatic scaling feature. Programmers only care about
writing algorithms in async contexts and closures in Rust. The
scheduling and parallelization are automatically derived. Data
processors are connected by a chain of streams, just like
iterators. The underlying data-passing queues are automatically
configured. With this stream-oriented design, `par-stream` could
provide a pleasant experience for dataflow programming.
=======
- 個人/專案介紹
- 如何從日常生活中找出 side project
- 有效整理資訊，找尋適合自己使用的介面實作
- 做事不欲人後! 如何把 OpenAI 的內容也一起整進去呢?
- 佈署 side project 的一些建議&範例
- Python 開發小工具推薦
- 結論
在寶可夢朱紫上市後瘋狂的玩/打排位，在比雕都回來的同時，我離寶可夢大師之路越來越遠，除了每天看影片學很多奇怪打法以外，要怎麼資訊整理，能夠隨時隨地研究寶可夢組合呢？來聽聽這場或許你會棄坑改打其他遊戲？
=======
在本次演講中，我們將深入探討 Turbo，這是一種由 Rails 的創造者 DHH 所設計的強大工具。Turbo 可讓我們無需撰寫 JavaScript 便能打造出單頁式網站。本講將涵蓋 Turbo Drive、Turbo Frames 和 Turbo Streams 這三大核心部分的概念與實作，並探討 Turbo 如何與 Rails 無縫整合，以及 Turbo Streams 如何精確操作頁面元素。我們也會討論 Turbo 的使用限制，並分享 Turbo 如何取代 Rails 的 UJS 套件的範例，讓您更全面地理解這項工具的強大之處。
=======
Generative models on "modern" mobile phones have the potential to revolutionize the way we interact with our devices. They could be used to generate personalized content, create new forms of entertainment, and improve the accuracy of machine translation. However, there are still a number of challenges that need to be addressed before generative models can be used effectively on mobile phones.  In this talk, I will use Stable Diffusion and llama.cpp as main examples talk about how people try to address these challenges. Despite these challenges, there is a lot of potential for generative models on mobile phones. As the technology continues to develop, we can anticipate seeing a wide range of new and innovative applications for generative models on mobile devices.
Generative models on mobile phones have the potential to revolutionize the way we interact with our devices. For example, they could be used to:
* Generate personalized content, such as news articles or recommendations for products and services.
* Create new forms of entertainment, such as games and virtual reality experiences.
* Improve the accuracy of machine translation and other language processing tasks.
However, there are still a number of challenges that need to be addressed before generative models can be used effectively on mobile phones. These challenges include:
* The need for more powerful mobile neural network accelerators / processors. Generative models are computationally expensive, and they require more powerful processors than are currently available in most mobile phones.
* The need for more efficient algorithms. Even with more powerful processors, generative models can still be slow to run on mobile phones. Researchers are working on developing more efficient algorithms that can run on mobile devices without sacrificing accuracy.
* The need for better user interfaces. Generative models can generate a wide variety of creative content, but it can be difficult for users to control the output. Researchers are working on developing better user interfaces that make it easier for users to interact with generative models and control the output. However, we won't touch this issue in the talk.
Despite these challenges, there is a lot of potential for generative models on mobile phones. As the technology continues to develop, we can anticipate seeing a wide range of new and innovative applications for generative models on mobile devices.
Here are some specific examples of what we can anticipate in the near future:
* Personalized news and recommendations. Generative models can be used to generate personalized news articles and recommendations for products and services. This could help users to stay informed about the topics that are most important to them and to find the best deals on the products and services that they need.
* New forms of entertainment. Generative models can be used to create new forms of entertainment, such as games and virtual reality experiences. This could open up a whole new world of possibilities for gaming and entertainment on mobile devices.
* Improved machine translation. Generative models can be used to improve the accuracy of machine translation. This could make it easier for people to communicate with each other across language barriers.
These are just a few of the many possibilities that generative models offer for mobile phones. As the technology continues to develop, we can expect to see even more innovative and exciting applications for generative models on mobile devices in the years to come.
=======
作為 Message System 中，最廣泛被使用之一的 Kafka ，其中在 broker 端的設計，無論是 log, index, socket, controller system 等，都非常值得我們吸收理解其中的應用方式，本議程將探討這些原始碼的用途與思維模式，並分享從中檢視的心得交流。
TODO
=======
受到《Code 2.0》这本书，以及其他相关的“演化论”、“基因生物学”等书籍的启发，我的思考得到了一些收获，规制人类行为的四种代码：
* 基因密码（Genetic Code）
* 模因密码（Memetics Code）
* 法律作为代码（Law as Code）
* 源代码（Source Code）
我们之所以能够开始协作，是因为这些规制我们的代码，提供了可能性。而另一方面，只要是代码，都是可以被Hack的，所以，我们有了文化的演变与GPL的诞生。从这个角度，我们可以Hacker的心态来思考：如何更好的发展开源？
=======
Thread Local Storage, aka TLS, is a feature embedded in various programming language, such as C, C++ and Rust, that frees the programmer from the arduous management of shared variable. One of the TLS-powered feature that undergirds your daily Linux-based developement is "errno", a variable that helps you fathom the problem underneath the operating system.
We will talk about the mechanics of TLS and how does llvm support it. We will analyze the IR lowering strategy adopted by the M68k backends and examine how to further optimize the strategy.
=======
TPM2 is not about making the computer more trustworthy to you. It is about forcing you, the user, to earn the trust of big corps by tethering your identity to the unique ID of the computer whenever you use a cloud service. The "fairness" of DRM, game anti-cheating, and exam proctoring will be more easily enforced if the big corps have rootkit-like control over everyone's computer. Reverse engineering tools such as virtual machine will not help the user regain total control of his own computer.
There is an open source implementation of TPM2 software stack. Enabling GNU/linux to run TPM2 is some achievement, but it does not address the issue of the (effectively) real-name future of the Internet likely envisioned by TPM2 designers. Most likely it only allows GNU/linux users to be identified as such and very likely to be discriminated against because, unlike MS windows users, the GNU/linux users will enjoy "too much" freedom for the cloud service providers to enforce rootkit-like restrictions. The TPM2 hardware (which dominates the PC market) may or may not be open source friendly, depending on how you define it, but it certainly is not freedom friendly. It revolves around the fact that the hardware owner does not have the freedom to read his/her own private key. It may have been "inspired" by the failure of old-time DRM to restrict the freedom of open source users. The speaker hopes that the general public will be motivated to think about the "freedom" aspect of the open source software and hardware, not just the "open source" aspect.
=======
在本議程中，將會簡介 GKE (Google Kubernetes Engine) 容器平台，並且實際展示在 GCP 中如何建立 K8s 叢集和 VPC(Virtual Private Cloud) 虛擬網路環境，部署容器和上層應用程式，讓與會人員能夠快速理解，雲端原生應用程式的生命週期和部署流程。
- 簡介 GKE (Google Kubernetes Engine) 容器平台
- 建立 VPC(Virtual Private Cloud) 虛擬網路環境
- 部署 K8s 叢集
- 部署容器及應用程式
=======
在已經存在很久的專案中修改程式或加入新的 feature 的時候是否曾有這些疑問或抱怨
* 這樣改會不會造成其他地方壞掉?
* 這段 code 到底在寫什麼!?
* 這邊的設計模式怎麼好像有點怪怪的?
常常聽到要避免讓自己的 code 日後成為 legacy code，但究竟怎麼樣的程式會被視為 legacy code ? 怎樣的不會呢?
經歷過 legacy code 洗禮的我想要在這邊分享一些有關的知識與想法
希望可以幫助到跟我一樣剛接觸 legacy code 的人
=======
This presentation provides an overview of perf, a performance analysis tool for Linux kernel and user program. We will explore how RISC-V ISA and SBI extensions support hardware event profiling. 
The target audience includes Linux kernel developers and those interested in RISC-V architecture.
=======
本次演講將帶領大家探索 AI 語言模型的新領域：超越生成文字，與現實世界有更深度的互動。首先，我們將介紹 ChatGPT Plugin 的架構和功能，並探討如何實作這樣的系統。接著，我們將透過介紹應用語言模型的應用程式開發框架 LangChain，進一步理解此技術如何被運用於 LINE Bot 上。最後，我們將現場展示如何利用 LangChain 來控制 LINE Bot。無論你是開發者、研究人員，還是對 AI 語言模型感興趣的人，都歡迎一同來探索這個新的可能性。
=======
The MySQL NDB Operator for Kubernetes is a Kubernetes Operator to run and manage MySQL NDB Cluster on Kubernetes. This talk will share how to use NDB Operator to run in-memory high performance and availability MySQL database workload on Kubernetes using NDB Cluster.
Deploying MySQL Cluster in a Kubernetes cluster requires scheduling these nodes onto different pods using multiple workload resources, as well as time and effort to choose and create the right type of workload resources in a configuration that takes full advantage of the redundancy and fault tolerance features found in both NDB Cluster and Kubernetes Cluster.
NDB Operator is the Kubernetes Operator for MySQL NDB Cluster, and is intended to simplify the task of deploying and managing MySQL Cluster in a Kubernetes Cluster. A Kubernetes operator is an application having operational knowledge of another application. It can be deployed within the Kubernetes Cluster after which it can begin monitoring the endpoints in which they are interested, and making changes to the application being managed. NDB Operator makes it possible to deploy, manage, and makes changes to an NDB Cluster with a minimum of human intervention.
=======
這場議程試圖討論開發者在使用 Rails ORM 時可能會有的困擾點，並舉幾個案例做討論。從為什麼會「踩坑」、到如何更熟練的使用 Rails ORM 並清楚自己執行的 Query 做說明。也會針對幾個案例做討論。再來，會談談 Rails 中可能會預設使用的 query cache 和 prepared statement，以及可能導致的雷點等等。
https://slides.com/meng-yingtsai/coscup-2023
* 為什麼會踩坑？ -> 可能是 Dev 不熟悉 DB 的行為，也可能是 ActiveRecord 做了 Dev 不知道的事情，導致非預期的結果
* 如何改善？ -> 多看 log 了解 ORM 組出什麼 DB query
* 開發可能會遇到的困擾與工具的使用
  * query cache 的存在、reload、uncached
  * query 效能問題 -> N+1 問題、explain
    *  polymorphic 時怎麼 preload？ -> Preloader 的使用
  * Prepare Statement 及 ActiveRecord::PreparedStatementCacheExpired 問題
=======
HL7 FHIR是一個用於醫療數據交換和互操作性的標準。本次演講，將探討HL7 FHIR在跨組織交換數據之場景中的應用，於建置健康照護平台使用FHIR作為系統之間的醫療數據傳輸準則，解決不同系統之間的數據格式、流程和協議的一致性問題。並且結合軟體工程之持續需求工程、交付、整合的理念，導入FHIR Testing tool，建立健康數據領域自動化測試架構，提升開發效率、降低系統發生錯誤的機率。
=======
除了基本的 Array、Set 和 Dictionary 之外，Swift 仍持續推出其他複雜且知名的 data structures，其中 SortedSet 即等同於 C++ 的 std::set，不同的是，其底層是以 B-Tree 實現。本次主題將會介紹為何 Swift 選用 B-Tree，以及帶大家看 SortedSet 的實現。
=======
在Kubernetes裏，你可以監控和觀測很多數據! 但是, 最大的問題是哪一個是我們應該特別關注? 在這個演講，我們將分享對Kubernetes中十大指標的看法和觀察，以及如何立即開始.
=======
In software development, there are often situations where it's difficult to balance execution efficiency and development efficiency. When physicists analyze a large amount of detector data, they often develop prototypes in Python during the early stages and rewrite them in C++ for high-performance versions in the later stages.
I will take the research I conducted during my master's program in the Department of Physics at National Taiwan University as a case study, comparing the original implementation using Python with C++, and a version replicated in Julia, and comment on the Julia packages that correspond to each function in ROOT, the original framework.
=======
There is still a lot of confusion about API gateways, Kubernetes gateways, and service meshes. A lot of this is because:
* People often mention these technologies with the same keywords, like canary deployments, rate limiting, and service discovery.
* All these technologies use reverse proxies.
* Some API gateways have their own Kubernetes gateways and service meshes and vice versa.
* There are a lot of articles/videos that compare the three technologies and conclude why one is better than the other.
In this talk, I will try to explain these technologies and share how they fundamentally differ and cater to different use cases.
=======
CourseAPI 開放式課程資訊匯流學院的發起人兼資料工程師 Ted 呂顥天，將分享團隊開發跨平台課程彙整網站的進度，包含網站爬蟲、雲端部屬平台 CNTUG Infra Labs、前後端成果，以及透過開源社群方式組成，推動課程資料開放倡議工作經驗。
CourseAPI 開放式課程資訊匯流學院，專案團隊是由在學學生、教育工作者、開放知識及開源社群參與者組成，目標在研擬開放式課程的資料架構 (schema) 與資料交換方案、建立一站式開放課程查詢網頁雛形。國內高等教育單位與政府課程，目前共約有一萬筆課程資料分散在 50 個以上的課程平台網站。
在本議程當中，我們將會聚焦於專案目前版本進度，從團隊組成成立、課程平台使用者偏好問卷成果，網站爬蟲 scrapy 技術運用、雲端部屬平台 CNTUG Infra Labs、後端開發 NestJS，以及前端 React.js 成果。本次亦會分享團隊參加 2021 總統盃黑客松，促進政府課程資料釋出的倡議經驗，以及專案社群與教育科技公司交流經驗。
與本次議程，相關資訊，可參考以下 HackMD 頁面：
https://g0v.hackmd.io/BFcKpo7bTxmMc_4kBsgazA
=======
Golang is widely used in cloud-native and distributed systems. To keep the observability of the system, distributed tracing is a key technology. Previously, vendors and open-source communities always recommended using SDK to instrument codes, meaning, the developers have to change codes.
In this session, we are going to introduce, for the first time, a complete auto instrumentation go agent solution built out-of-box by Apache SkyWalking.
In this session, we are going to introduce the background of distributed tracing and existing tracing solutions (manual SDK and eBPF) in Golang about their pros and cons.
Then, we would do a live demo on-site to show how easy you could do the same things by using the new auto-instrumentation agents.
After the demonstration, we would provide a full explanation of how this works and internal black magic.
=======
分享資料遮蔽的實作心得
資料遮蔽不是單純只把資料變成星星或圈圈而已！
=======
自從 Docker Desktop 宣布開始採取收費模式後，眾多使用者開始積極尋找能夠替代 Docker 的工具。Podman 有 rootless 和 daemonless 的特性，改進了 Docker 在架構上的瑕疵，並且因為它是開源軟體，已經吸引了許多使用者轉向使用。本次的 Workshop，我將會帶你一步步完成 Podman 的安裝，啟用 rootless 特性，並透過實戰操作，帶你安裝 Prometheus 和 Grafana 進行系統監控，並結合 Alertmanager 建立即時警報系統，讓你掌握強大的開源容器化工具。
**注意**：本次 workshop 需要自備筆電，有報名的會眾會有線上的 Ubuntu VM 可以一起實作。報名訊息將會在 CNTUG 社群平台 ([Facebook](https://www.facebook.com/groups/298183320685010), [Telegram](https://t.me/cntug)) 公布。
先備知識：Linux 指令操作、Container 基礎知識、Docker / Podman 基礎操作。  
事前準備：Discord Webhook 或 Telegram Bot。（可以使用 Alertmanager webhook 的功能）
先備知識：Linux 指令操作、Container 基礎知識、Docker / Podman 基礎操作。  
事前準備：Discord Webhook 或 Telegram Bot。
Prior Knowledge: Linux Command, Container basic knowledge, Docker / Podman basic operation  
Prepare: Discord Webhook or Telegram Bot
=======
Blue Light is a browser-based medical image viewer is primarily maintained by the Imaging Informatics Labs. It is a pure single-page application (SPA), lightweight, and using only JavaScript and HTML5 technologies so as to deploy it on any HTTP server easily (just put it in HTTP server). It supports not only opening local data, but also connecting to medical image archives which support DICOMweb. It can display the various image markups and annotations such as Annotation and Image Markup (AIM), DICOM-RT structure set (RTSS), DICOM Overlay, and DICOM Presentation State. It provides tools for medical image interpretation and 3D image reconstruction, e.g., Multiplanar Rreformation or Reconstruction (MPR) and Volume Rendering (VR).
github: https://github.com/cylab-tw/bluelight
=======
Generated By ChatGPT
您好，「深入淺出 Go AST，動手做自己的 Linter」是一個很有趣也很有挑戰性的演講題目。在介紹此主題之前，讓我先簡單說明什麼是 Linter。
Linter 是一種程式碼分析工具，用於檢查程式碼中的錯誤、不良實踐和潛在的錯誤。這種工具在軟體開發中非常重要，因為它可以幫助開發人員更容易地發現和修正程式碼中的問題。在現代軟體開發中，Linter 已經成為一個不可或缺的工具。
然而，由於每個軟體項目都有其獨特的需求和細節，現有的 Linter 並不能解決所有的問題。這就是為什麼開發人員可能需要自己動手做 Linter 的原因之一。
而此演講主題「深入淺出 Go AST，動手做自己的 Linter」，是在介紹如何使用 Go 語言的 AST（抽象語法樹）來構建自己的 Linter。透過這個演講，您可以學習如何從頭開始建立一個 Linter，並了解如何使用 Go 語言中 AST 的各種特性。
總的來說，這個演講主題旨在教授開發人員如何利用現有的工具和資源，建立自己的 Linter，以解決他們在開發過程中所遇到的問題。相信透過這個演講，您將能夠更深入地了解 Linter 的重要性，以及如何運用 AST 建立自己的 Linter。
=======
本次分享將介紹如何透過 Python 使 data 與 ChatGPT 結合，透過 plugin 將台灣政府的開放數據導入到ChatGPT中，從而推動資料的民主化。邀請所有對此感興趣的朋友一同參與！
This session will introduce how I can integrate Taiwan's government open data into ChatGPT through Python and the chatGPT plugin. I invite all enthusiasts interested in this project to join me in helping **put wings on open data**!
台灣擁有很多開放資料，不過這些資料大多都必須要在懂得使用資料與業務領域才知道怎麼使用，所幸2022年底 chatGPT 誕生，打開一個人人都可以用自然語言來探索資訊的介面，而 plugin 更是讓探索資料的門檻大幅度下滑，不過真正讓每個人都可以用自己的話，取得這些開放資料解決身邊的問題，就還缺少把資料與 chatGPT 連結的工作。所以 OpenTaiwan 這個專案就開始了。
目前專案正在運作中，歡迎一起來討論如何實作，讓更多使用者可以串連更多資料。可以參考以下連結
- [ OpenTaiwan](https://github.com/ntuaha/OpenTaiwan)
- [ 台灣政府開放資料](https://data.gov.tw/)
=======
- 為何選擇 Rust 作為後端語言？
- 一個前端工程師從 JavaScript 的角度學習 Rust
- 深入 Tide 框架
- 如何使用 Tide 框架建立 CRUD 的 REST API
=======
建置私有雲的 Kubernetes，需要解決的就是監控問題，本議程將會講解怎麼組合 Prometheus + Grafana，除此之外，還有帶你理解常用的 CRDs，打造出屬於你的監控報表。
用 Kubernetes 建置你的 Pod、Deployment、Service、Ingress 之後，你還忘記一件很重要的事——監控。如果你是使用 AWS、GCP、Azure 公有雲系統，一定會給你監控的儀表板。但是私有雲呢？本議程將會講解怎麼組合 Prometheus + Grafana，除此之外，還有帶你理解常用的 CRDs，打造出屬於你的監控報表。
=======
你有滿滿的作物、豬豬、牛牛、雞雞或農業照片想和大家分享嗎? 你有滿腔的植物、動物、小貓小狗病理診斷經驗卻無處揮灑熱血嗎? 歡迎加入ADADI(A-dady)農業病害影像資料庫聯盟。
ADADI是專門為農業病害專家開發的雲端影像儲存資料庫，提供成員無壓所上傳高畫質圖片，同時可以透過下拉選單、填空或勾選的功能模組，將影像帶有的疾病病癥標註在檔案中。搭配「同儕審核」的機制，只要影像被聯盟成員認定有保存的必要性，影像連同標註資料便會以csv格式儲存在國網中心的雲端空間。
=======
使用者往往在使用自己的硬體時並不知道firmware 與hardware是在不安全的設定下執行，例如secure boot disabled 與 firmware 沒有更新到已安全性修復版本。或在一些需要更高security level 的場合，但卻無法立即檢查security level，因此需要一種自動化的方法來評估系統的安全性。fwupd 是用來自動更新系統上的firmware，包括了BIOS, ME, 以及各式周邊的firmware。fwupd 並有能力搜集所有firmware 的版本與系統的設定，在執行期間並可以使用這些資訊來評估系統firmware與hardware 的安全性。fwupd Host Security ID (HSI) 定義了Host security level，並使用一個簡單的數字告訴使用者platform 的安全程度。這個ID是由fwupd 社群所定義的條件來決定。同時在GNOME control panel 的 “Device Security” panel 中也可以輕鬆的取得。讓使用者可以更容易的了解系統的暴險程度。
Topics 包括
- fwupd, fwupd HSI and LVFS ecosystem
- GNOME control panel- Device security
- Integration with openSCAP
=======
Tensor Operator Set Architecture (TOSA) 提供了一套常用於深度神經網路的全張量操作。其目的是使得在不同處理器 (CPU, GPU, NPU) 上運行的各種實現規範，能夠在 TOSA 層面上保持一致的結果。
針對 TOSA 的應用或框架可以在多種不同的處理器上部署，包括 SIMD CPU、GPU，以及自定義的硬體如 NPUs/TPUs，並且有明確的精確度和相容性限制。大多數常見的機器學習框架（例如 TensorFlow、PyTorch 等）的大部分運算符應該都可以在 TOSA 中表達。預計將會有工具可以將機器學習框架轉換成 TOSA 的表示方式。
=======
* Docker 是什麼？
* 基本 Docker 指令介紹
* 架設 Private Docker Registry
Docker 為團隊開發提供了解決良藥，消除了裝置之間的軟體相容性問題，不過在資安意識抬頭及商業機密外洩問題日益嚴重的今日，把專案推到 Docker 上真的是一個好的辦法嗎？別擔心，自架 Private Docker Registry 就可以為自家的專案創造一個秘密空間，這次將帶大家實作如何架設 Private Docker Registry
=======
電子報是現在經營活動或自媒體不可或缺的工具，但如果不想使用外部的電子報發送系統，也不用擔心自己做會很困難。用 Laravel 就可以輕鬆地做出屬於自己的電子報發送系統！這場議程會說明，如何透過 Laravel 來實作電子報系統，還有在發信時該注意的眉眉角角！
=======
In this session, learn how to install Windows and WSL on LXD/VM using LXD 5.0's enhanced features on Ubuntu 22.04 LTS. The presentation covers setting up LXD, installing Windows 11, using RDP for control, and setting up WSLg and systemd on WSL. Participants will gain the skills to utilize LXD's VM capabilities and understand WSLg/systemd basics.
"LXD is a system container manager, and LXD 5.0 on Ubuntu 22.04 LTS offers enhanced support for virtual machine functions such as vTPM and many devices hotplug. For users who need to use Windows on Ubuntu, this session provides a method to install Windows without purchasing a new PC. First, I will explain the prerequisites for this process. Next, I will discuss how to set up LXD on Ubuntu Desktop and prepare a vTPM on an LXD instance. I will also demonstrate how to install Windows 11 on an LXD instance in Ubuntu Desktop and use RDP to control the Windows instance. Finally, I will explain how to set up WSLg on Windows 11 and systemd on WSL.
Through this presentation, participants will learn how to use LXD's VM feature and be able to install any OS on LXD/VM. They will also grasp the basic capabilities of WSLg/systemd."
=======
Development of open source silicon platforms applicable to difficult real world use cases, much as Linux has become in the operating system space, quickly run into difficulty.  A CPU ISA or small system on chip is only one part of a platform.  The diverse and complex interfaces, signal processing, and compute tasks such a platform is called upon to provide mean a system approach is necessary.
We outline our experience building the J-Core platform, and how scratching our own itches lead to counter intuitive design decisions.  Designed from the ground up to cover mixed signal processing in systems with complex and secure edge computing tasks, we also needed portability to multiple FPGA families, low cost silicon processes, and scalability for performance on advanced process nodes.
J-core is a completely open source platform, from the transistors through the OS and end user applications.  Designed in the context of real world product development and deployments, the resulting platform is unique in the open hardware space.
=======
人工智慧模型常常在引入醫療場所時，會遇到系統整合的問題。本議題利用開源的 DICOM Viewer (BlueLight) 以及 DICOMweb PACS (Raccoon) 以展示人工智慧模型整合至臨床的解決方案
=======
讲者为开源社理事、社区合作组组长，负责社区合作事宜，在过去的三年里，讲者与超过200家开源技术社区建立了合作关系。在开源世界里，我们一直提倡Community的价值，我也始终相信，是因为社区的存在，才让开源变得如此吸引人。那么不同社区如何从陌生人变成可信赖的伙伴呢？我想在这个议题里分享一些经验。
内容包括但不限于：
1、为什么在开源世界里Community往往被放在首位？
2、不同Community之间如何通过第一次合作建立信赖关系？又如何保持持续的合作关系？我是如何与200家开源社区伙伴进行沟通的
3、在业余时间里，如何平衡好社区事务与工作、生活
4、相信社区的力量可以带来什么？
=======
本議程試圖回答以下問題：
1. Side Project 的價值是什麼？
2. 開源專案對職涯的價值是什麼？
3. 開源公益專案能賺錢嗎？
=======
本文將介紹如何利用本地端顯卡建立Meta新推出的大語言模型LLaMA後的c/c++輕量版本Llama.cpp，並利用Micromamba管理其運行環境。
首先，Llama.cpp是一種先進的文本預測模型，類似於GPT-2與GPT-3，但未經過微調，適合於大範疇的問答應用。使用本地端顯卡進行模型訓練能更有效地管理資源。
我們將利用Micromamba，這是一個簡潔、快速且隔離的Python環境管理工具，用於安裝和管理需要的Python庫。
接著，模型訓練的原理主要在於使模型學習如何根據上下文預測下一個文字。訓練完成後，模型將能生成與訓練數據相似的新文本。最後，關於Llama.cpp處理中文的能力，儘管其主要以英文為主，但透過適當的訓練與微調，仍有潛力達到理想的中文生成水平。
在本次分享中我將介紹meta推出的語言訓練的model,他的輕量化版本Llama.cpp。
首先Llama.cpp的訓練原理因LLaMA和GPT-J模型相似，所以可以先使用GPT-J模型ggml版本將LLaMA相關參數移植到GPT-J-ggml版本上(ggml版本使用c語言架構)，其優點為
	1.原本精度16bit的LLaMA量化為只需要4bit就可以跑，大大降低硬體的限制。
	2.支援CPU訓練，比起LlaMA硬體上的限制提供不少的解方
	3.沒有道德限制，故可以自由的調整參數成自己想要的應對場景
Micromamba是Mamba軟體包管理器的迷你版。它是一個靜態連接的C++可執行檔，並帶有獨立的命令行介面。它不需要基本環境，也不提供預設的Python版本，可隨意建立必要的測試環境。
最後利用本地端顯卡建立Llama.cpp模型後運行
這個分享將提供實用的知識和技巧，適合想要了解語言模型實作的開發者有興趣的人參加。讓我們一起探索使用Llama.cpp的實作！
=======
你知道Trigger嗎?你用過Trigger嗎?
資料庫中除了資料表，也還有許多元件可以協助開發者完成各種任務，而Trigger觸發器也是在每本教材中必定會談到，但往往也是篇幅最少的其中一個元件。
此份議程分享了PostgreSQL在Trigger上的概要、使用方式、注意事項，以及實務上開發會用到的情境與利弊，希望可以給開發者們多一個不同的角度來完成資料存取的任務。
=======
UniCourse 為一群師大資工的學生主導的大學課程搜尋系統。因被現有選課資料查詢工具困擾，嘗試搜集、整理並呈現臺灣各大學課程資料，藉此幫助修課學生、教授及教育工作者。
本次議程由 UniCourse 的 PM 和各位分享 UniCourse 一年半以來對於大學課程 metadata 的觀察這些資料的潛力並覺得可行的實作，並整理目前台灣高等教育對於課綱開放資料的情況。
=======
MySQL Operator for Kubernetes manages MySQL InnoDB Cluster setups inside a Kubernetes Cluster. MySQL Operator for Kubernetes manages the full lifecycle with setup and maintenance including automating upgrades and backups. This talk will discuss in detail how to install and use MySQL Operator to deploy and manage InnoDB Cluster on Kubernetes. The talk will also discuss how to do backup/recovery, upgrade, cloning, managing secret, reuse existing database stored on PV/PVC to recreate a new InnoDB Cluster, tips and trick using advance setting and PodSpec in the YAML.
=======
自 2020 年起，我開始撰寫 "Zero to Production in Rust”，一本關於使用 Rust 程式語言開發後端應用的書。
初次嘗試寫作，我對於這本書的未來走向毫無頭緒：有人會感興趣嗎？我該從何下筆撰寫內容？要試著和出版社合作還是自費出版？內容該開放給大眾嗎？
這場演講正是三年前的我所希望擁有的指南。我將介紹技術書籍從頭到尾產製的過程，包括主題定義、行銷策略、發行方式（包含開放近用）以及價格設定。
[摘要翻譯自英文]
*本場次由 Rust Taiwan Community 與 COSCUP 大會聯合邀請
=======
江湖開放工作室與流域行動藝術祭負責人，原本希望回鄉，在自家的農地上用自然農法耕作出自然安心的食材，沒想到因為捷運與開發，遇上了區段徵收，不止自家的農田不保，附近所有的土地與老屋，都將全部消失，於是開始組織居民，也開始舉辦流域行動藝術祭，從生活、在地紋理、生態環境和社會脈動取材，以藝術的手法獻祭，共同思考我們生活的此在，如何流向永續的未來。
=======
Zero Trust is the standard for security these days. They're the ideals we strive for. But what about the mature systems & potentially legacy protocols still in play today.
Legacy environments are characterised by older hardware, software, and security protocols, making it difficult to enforce strict access controls and continuous monitoring.
Overcoming this challenge is maybe the highest hurdle companies have to overcome. 
Ruby OmniAuth can be your superpower applying some of these protocols when operating with legacy systems. We share some lessons & architectural practices we've learnt working Zero Trust Principles into legacy environments to maximise authentication resilience.
As we progress, security threats are more sophisticated, and traditional measures alone are no longer sufficient to protect sensitive data & processes.
We have exposure to with mature systems that are have legacy environments that are many years old.
The primary feature of security environments are characterised by mature hardware, software, and security protocols with firewalls and packet filtering the key perimeter defenses relied on.
To meet today's threats, the Zero Trust approach calls for active security, minimum access rights possible, continuous evaluations etc. Ascenda Loyalty works with some of the biggest and mature banking systems out there. How do we bridge the gap between mature systems and incorporate such practices to ensure businesses continue to offer increased resilience for their customers?
We explore some of the lessons & practices in bringing Zero Trust Principles into working with legacy environments
=======
我們打造了 RSA256 這個專案，展示一套開發硬體時的標準流程，依序開發 C model 、SystemC model、再到 verilog module，並開發 Verilator 驗證框架，使每個階段間都能夠交互驗證，加速硬體開發的平行化與正確性。
硬體開發由於 Verilog/System Verilog 本身語言的缺陷，設計上很容易形成難以重複利用的一次性程式，因此我們使用 SystemC 先建立軟體模型確定單一模組的功能，再轉換為 Verilog 就能平行化以及更踏實。
本專案基於 Verilator 這款開源硬體工具中可稱為頂尖的驗證工具，也是少數功能豐富度與效能可以和商用工具一較高下的開源EDA。Verilator 會將 verilog module 轉成一個 C++ Class 或是 SystemC Class，我們就能撰寫執行檔讀寫這個 Class，來模擬出 verilog 執行時的行為。
本專案的貢獻包括以下幾個元素： 
* 用 C++ 實作了 vint 資料型態，模擬 verilog 的任意寬度整數運算行為
* 基於 vint 寫了 $bits 以及 {a, b} 等 verilog slice 語法
* 實作連接 verilog 通用的 handshake 介面的輸入/輸出以便寫入、讀出資料，並且能套用不同的機率參數。
* 建立一整套測試的框架，讓使用者只需要關注測試用的資料，就能快速複製測試到不同的 verilog 模組上，驗證設計的正確性。
* verilog 資料結構 serialize 成檔案當成 unit test。
透過這套框架，我們實作了 256 bits 的 RSA 演算法核心，每個模組都有對應的模型以及 verilator 的驗證。
=======
空城現場成員，空城現場為長時間關注航空城開發的藝術團體，2023年發起〈介入空城現場：桃園航空城開發洪流下，地景驟變現場的緩衝、遲延與知覺行動〉的藝術行動，記錄全台最大徵收案與來勢兇兇的航空城興建所帶來的衝擊與即將消失的地景。
=======
Almost every system has BIOS firmware. Be it an individual box or enterprise-grade workload Servers. What is the need to change it? current BIOS is the result of so many innovative cycles. so just because it is proprietary firmware and we believe in OpenSource we should change it?
In this talk, I will discuss How Firmware changed from time to time? Every time the driver and rationale in the Firmware growth path with the history of the Firmware? The Pace of Firmware improvement is not the same as it was sometimes back! Is it only Cloud or cyber security which has increased multi-variant releases in firmware? Like normal software, can we go for tailored firmware that can really make a direct difference for any business use case? Firmware capabilities should be scoped closely limited to booting the device only or a tailored firmware can aggregate the innovation and can help to solve many problems normal software is struggling with? This talk will have content on Libreboot firmware in terms of a tough journey and great acknowledgment for BIOS replacement.
=======
一起來探討如何使用 Anime.js 和 Vue.js 這兩種強大的前端工具創建令人驚奇的互動效果。讓網頁變得不只有靜態的文字，還能更加的生動有趣。
最後探討在團隊合作中，開發者除了開發以外，還能做哪些事情來讓合作更順暢。
### Animejs
配合故事描述，分享一些讓畫面看起來更生動有趣的手法，讓要表達的內容不只是單調的文字和圖片
- Delay 做出豐富的視覺特效
- 線性 vs 非線性，使用各種 Easing Functions 產生不同的效果，模擬物理環境
- 數大便是美，介紹多個 elements 交錯和配合，迸出新穎火花
## Vuejs
- Transition Component 結合 Animejs
- 用 Vue 封裝 SVG  做出出動畫元件
=======
SmallDatasetMaker.jl是一個用於製作小規模資料集、並進行資料版本控制的Julia套件。使用SmallDatasetMaker.jl，資料集製作者可以透過簡單的指令從原始CSV檔案中創建新資料集或更新現有的資料集，並以與維護Julia套件相同的方式對這些資料集進行版本控制。對於資料集使用者而言，可以像使用著名的RDatasets.jl一樣輕鬆載入使用由SmallDatasetMaker創建的資料集。
講者將分享基於 Julia 語言、管理小資料集的小幫手。
SmallDatasetMaker.jl is still under develope and not registered in [JuliaRegistries/General](https://github.com/JuliaRegistries/General) yet.
=======
《美學程式設計》最初由 Winnie Soon 和 Geoff Cox 於 2020 年撰寫，並以一個 git 儲存庫、動態網站、可下載的 PDF 和紙本書等形式發布英文版，是一本開放取用且開源的書籍。在台北數位藝術中心的支持下，我們目前正在翻譯、製作這本書的繁體中文版。
除了教讀者使用 p5.js 函式庫之外，本書還從程式設計的文化和美學層面出發，理解程式設計作為一種文化實踐的重要性，同時探討在技術主題中相對不被重視的議題，如性別、種族和性取向等。
這本書不是一本固定的教學資源。使用 Git 使得作者能夠將其製作形式化為一個迭代過程，可以進行版本回溯，讓其他人複製並根據不同的參考資料、範例、批判性反思甚至新章節進行客製化。
我們將透過翻譯與編輯等方式一起分岔這本書，並加入台灣版的知識和範例，挑戰與書籍出版和翻譯實踐相關的規範性社會－生產關係，並探索其他可能性。
此繁體中文版計畫由台北數位藝術中心（https://dac.taipei）支持，預計於 2023 年由自牧文化執行出版。
=======
開源專案：FHIR Universal Converter 助力醫療資料無痛轉換
=======
DevOps 是「開發」(Dev) 與「維運」(Ops) 的混合詞，是一種加速軟體開發和部署的技術。Hackathon 是「黑客」(Hack) 與「馬拉松」(Marathon) 的組合詞，是一個以馬拉松形式開發軟硬體的活動。在本議程中，講者將分享過去參加 Hackathon 比賽的經驗，講述如何在短時間內透過 Kubernetes 將 DevOps 融入到馬拉松式的開發流程中。
Outline
1. 梅竹 Hackathon 經驗分享 (7mins)
2. Cloud Native 工具使用 (14mins)
3. Demo (4mins)
4. Q&A (5mins)
首先會介紹黑客松與 DevOps 的背景知識，帶入到講者參加梅竹 Hackathon 的經驗，接著會講解過程中使用到的開源工具(Ex: K3d、ArgoCD) 以及幫助為何？最後會探討在短時間的軟體開發活動中 DevOps 究竟有何奇效。
=======
網路上有很多新聞媒體會提供每日英語頭條新聞的 Podcast頻道，如果有小精靈能幫忙生出逐字稿，順便替我整理新聞裡的關鍵單字、幫我出文意理解選擇題，那該有多棒？
本議程會介紹與AI協作產生資料庫，以及第一次寫 Compose Navigation專案所遇到的坑。
在去年 ChatGPT爆紅之後，我開始思考要如何在有限的資源下應用大型語言模型 LLM服務。
於是我在 Github找到了開源的 Podcast播放器，
如果串上Whisper API+Chat API，
應該可以做出夢想中的小精靈吧？
沒想到專案作者是忠實的 MAD(Modern Android Development) 推崇者
整個專案用了 Coroutine, Compose, Hilt, Navigation.
從畫面的生命週期到取得元件的方式，
甚至傳遞資料的方法，
都和我習慣用的不太一樣 Orz
還好現在有 AI好夥伴幫我 Code review、教我寫資料庫，甚至還幫我寫文件！？
讓我們一起享受有 AI的開發流程吧～
=======
嘗試從數位的觀點切入採集社區故事，嘗試帶入數位生成工具，透過學員與社區居⺠溝通、關鍵字採集，以繪本和形式 紀錄社區環境的生命力，並再進階課程，以場域沈浸的方法，在社區中搜集老物件，透過感應和控制器， 以不一樣的互動形式展演田調故事成果，激發出截然不同的社區故事的面向。
=======
本次演講將深入探索 Rails 中的 ActiveRecord 和 ActiveModel，專注於它們在資料修改方面的關鍵功能 - Dirty。我們將探討 Dirty 的原理、用法和應用情境。演講提供案例和程式碼示範，讓參與者深入了解和應用 Dirty 功能。透過演講，您將學習到如何運用 Dirty 追蹤和管理資料變更，提高資料準確性。無論您是初學者還是有經驗的開發者，演講都將豐富您的知識和技能，讓您在 Rails 中更靈活自信地使用 ActiveRecord 和 ActiveModel。
=======
分享如何將基本法律規範納入 CoC ，並在此之上透過知情同意的方式彼此約束，建構內部互動的信任與對外的社群形象。
社群做為一種因為共同目標或興趣一致集結，場域和成員邊界卻模糊的組成，「社群守則 Code of Conduct （CoC） 」是訂定來確保社群參與者之間以尊重為基礎的互動，然而， CoC 修訂過程往往因為相關經驗與多元背景的缺乏，面臨各種包括不同觀點的衝突、意見分歧等等挑戰。
社群相對於企業或學校、政府等法人具有更多空間跟彈性來處理爭議，本議程將分享如何發起討論，建立基本法律規範的知能 ，並在此之上透過知情同意的方式修訂 CoC 彼此約束，凝聚社群互動的信任。
=======
The urgent need to address global warming and pollution has led to a growing recognition of the importance of fast and widespread implementation of green technologies. Open licensing, including the use of the Creative Commons Attribution (CC BY) license, has been proposed as a means to accelerate this process by making research findings and technological innovations more accessible and affordable to a wider range of users. Secondly, a trend of separating experiments or modeling/simulation/analysis results from the research as an entity for future open licensing has come. It encourage researchers to better collaborate and reduce repetitive investment in resource and efforts. Beside demonstrating the examples of open data from experiments, I will also explain the principles of code writing and how to utilize a combination of several simulation software in order to maximize open licensing opportunities. Moreover,linked research open data is another theme of discussion.In order to balance open licensing and motivational innovation, tiered pricing scheme might be a good direction . Eventually, I also recommend an SDG- mapping intellectual property solution as the top-tiered strategy toward a sustainable future.
解決全球變暖和污染問題的迫切需要導致人們越來越認識到加快和廣泛實施綠色技術的重要性。 開放授權，包括使用Creative Commons By (CC BY) License已被提議作為加速這一過程的一種方式，讓更廣泛的用戶更容易獲得和負擔得起研究成果和技術創新，因此CC BY License和BSD條款在促進綠色技術快速實施方面具有潛在作用。 此外透過將個別實驗或建模/模擬/分析的成果從研究中分離出去以開放授權，可以促進研究人員和創新者之間的知識共享和協作，減少重複投資資源，在加速綠色技術的實施方面發揮重要作用。因此除了實驗的開放授權案例，我還會解釋如何透過程式碼的撰寫原則以及數種模擬軟體的搭配，以利綠色化工與能源研究成果的開放授權。此外鏈結研究資料(Linked Research Data)會是另一個主題。為了平衡開放授權與鼓勵創新的難題，分級定價方案(Tiered Pricing Scheme)是可行的方向。 最後，我還建議將可持續發展目標映射之知識產權的解決方案作為實現可持續未來的頂級戰略。
=======
In this talk, we will be discussing the importance of securing your Kubernetes cluster and how you can do it using the powerful tool, "m9sweeper." As the adoption of Kubernetes continues to grow, it has become more critical to prioritize the security of your cluster.
"M9sweeper" is an open-source security tool that is designed to detect and identify vulnerabilities and misconfigurations in your Kubernetes deployment. It offers a comprehensive set of checks that cover a broad range of security aspects, including network policies, access control, encryption, and pod security.
It has the potential of centralized monitoring of popular Kubernetes security tools Trivy, Gatekeeper, KubeSec, Kube-Hunter, Kube-bench, and Falco.
=======
RPA (Robotic Process Automation) - 機器人流程自動化。
主要是使用軟體機器人模擬人類在電腦上不同系統間的操作行為，適合高重複性、標準化、規則明確、大批量的作業流程，並且可用於跨系統、商用軟體及外部網站作業串接。
在本次演講中，我們將介紹 OpenRPA所使用的軟體技術與系統架構，並透過人力銀行履歷篩選以及系統告警通知信件這2個應用案例向大眾推廣OpenRPA 的價值和優勢，並介紹OpenRPA的後續Roadmap規劃與Open Source RPA社團。
大綱 : 
1. RPA 簡介
2. OpenRPA 軟體技術
3. OpenRPA 系統架構
4. 實績案例Roadmap
5. Open Source RPA社團介紹
=======
本次 OpenStreetMap x Wikidata 議程特意開設開源 GIS 討論議程，探究成功的開源專案 QGIS，在台灣本地的面臨社群動能不足狀況，翻譯軟體或是教材進度遠遠落後開發進度，試圖在本次論壇識別問題並提出解決之道
GIS是一個相當綜合而且難專精的學科，在台灣除了商業軟體如ArcGIS之外，拜全球開源風潮，有可以免費取得與使用的QGIS。近期Facebook社團QGIS小學堂有大量新手發問，而且問題像是那邊找地理資料，設定資料集坐標系統這類基本問題，推測有大量傳統上沒有教GIS的科系或是社會大學體系、高中地理，有大量教學需要，負責授課老師的沒辦法教太多（因原自身非地理資訊能力或亦未經訓練者），需要學生自行探索。再加上今年ArcGIS開放個人商業授權方案（目前提供個人帳號申請，但可用功能非常侷限），工具的近用性大為提昇，導致沒有相關基礎的學生需要自行摸索，諸如QGIS小學堂。儘管QGIS是相當成功的開源專案，有活躍的開發者社群，以及健全的商業服務模式，但在台灣本地這邊，社群規模不足以支援軟體翻譯以及教材翻譯工作。
=======
-
閃電秀講者指南 / Lightning talk speaker guide
https://hackmd.io/lPjyoJPgSOCr9gP8X5TdCg
錄取名單:
- 從 0 開始做一個 Linux Kernel 讀書會
- UbuCon Asia x LibreOffice conf asia in Indonesia
- 從事程式教育的心得分享
- 啊是有很開放嗎?
- All stack trash talk
- 伺服器重啟攻擊手法分享
- GNOME Asia Summit 2023
- 開源軟體中文化幫幫忙
- 想要有 100Gbps 外網嗎？ 加入我們吧
- 給我三分鐘
=======
前後端分離必定有溝通的代價，這次想聊聊 React 和 Rails 作為夥伴時，要做好的合作協議。
環境變數、專案設定值、API 認證與規劃、App / Web Server 設定與溝通、正式環境部署、開發環境建置、雙方都能做到的事能否取代對方，這些事項會遇到什麼麻煩？進一步影響到雙方合作的方式和範圍，甚至會懷疑合作是否是好的選擇？我將提供我的看法。
Rails 有了新歡 View Component 和 Hotwire 後，是否該跟舊愛 React 分手？
前後端分離的麻煩事，新歡帶來的歡愉感，是否讓你卻步做前後端分離？
Rails 做前後端分離究竟帶來什麼好處？或許我能給一些想法。
=======
在改革服務性社團並加入開源性質的社團，第一年所面臨的辛酸和挑戰。在社團改革之初，面臨了許多問題，例如如何吸引新成員、如何管理社團，以及推動開源相關的資源等等。他還需要學習如何使用各種開源工具和軟件來協助社團的運作。儘管面臨著這些困難，仍然堅持不懈地努力著，並最終建立了一個具有活力和積極性的服務暨開源結合的社團。
我放在HackMD了，但會持續修改，趕稿中...
https://hackmd.io/@hts1/rkXMu_pG3
=======
While many open-source projects are initiated by engineers who aim to create accessible and free software, they often overlook usability and accessibility. In our opinion, every open-source project needs designers to ensure that the end product is user-friendly and accessible to everyone. In this session, we will draw on experiences from a design contributor who has worked with the g0v Taiwan community on open-source projects. Showing feasible ways for designers (or even not-designers) to contribute their design to open-source community.
=======
As a developer using Postgres, I'm occasionally meeting some interesting cases. Some unexpected crashes, some unexpected huge performance optimizations, etc. I would like to share some of the cases I met during my 2 years of Postgres experience.
I want to talk about some interesting cases and tips that I met when using Postgres in my daily job, which are topics general enough that most developer may also meet in their daily jobs (even for non-Postgres developers).
 - why LIMIT 1 is MUCH SLOWER than LIMIT 100?
 - what's wrong with JSONB? (hint: it's TOO robust)
 - efficient query using LATERAL subquery (from 8s to 0.08s)
=======
今年是justfont的開源字型粉圓體推出的第三年，從誕生以來這三年發生了什麼事，未來又將面臨什麼樣的命運呢？！
* 為什麼做粉圓？
* 粉圓的設計理念與技術細節
* 製作字體的問題
* 製作粉圓的問題
* 製作開源字體的問題
* 維護的問題
* 未來的命運
=======
這次分享將介紹Kubernetes和PostgreSQL的基礎概念，以及Kubernetes中實現PostgreSQL容錯和修復的挑戰。隨後探討容錯設計和優化，包括高可用性架構設計和建議實踐方式，以及相關Kubernetes使用經驗分享。同時討論異常排除和災害備份方案，包括常見異常原因、快速修復、資料復原，以及備份的相關經驗分享。
=======
地圖是生活中相當常用的軟體。Google 與 Apple 地圖無所不在，但它們顯然都是封閉原始碼的軟體，對開發者來說是黑箱。這些供應商對某些用途來說並不好用，例如公共衛生、政府服務與新聞地圖。
在本次演講中，我將帶您了解：
1) Leaflet 與 MapLibre 等函式庫與 GIS 有何相關之處，在哪裡使用它們，以及它們如何讓沒有地理背景的 JavaScript 程式設計師使用地圖
2) OpenStreetMap 資料集與全端互動地圖 API 之間的區別製作
3) 地圖的設計與資料注意事項，如何製作縮小的圖磚化地圖檢視、地圖偏差與國際化
最後，我將會討論開放原始碼的 Protomaps 專案，這是一個用於製作與提供圖磚化網路地圖的完整系統。我將把它與其他開放與專有的替代方案進行比較，展示它的使用者，並解釋我打算如何使其長期可持續發展。（中文翻譯，原文請見英文版）（由 OpenStreetMap x Wikidata 臺灣社群與 COSCUP 大會聯合邀請）
=======
Arrow KT 2.0 來了，一個 Open Source 的 Kotlin functional programming 補完計畫。從 0.x 的很 category theory 到用 Suspend 取代 IO Monad. 2.0 除了支援 KMM 又更往 Kotlin 的道地用法靠瓏。本分享將會討論
- Arrow KT 0.x 到 2.x 轉變
- Arrow KT Migration Tool
- Collections and Recursive
- Error Handling with FP
=======
Longhorn is a distributed block storage system that has been purpose-built for Kubernetes, making it an ideal cloud-native solution. As an incubating project of the Cloud Native Computing Foundation (CNCF), its main goal is to provide persistent and highly available storage for stateful workloads. In this presentation, we will be exploring Longhorn's architecture and specifically, the data path. Despite offering a wealth of features, such as snapshots, backups, and recurring jobs, there is still room for improvement in the data plane's performance. To address this, a data engine is integrated with Storage Performance Development Kit (SPDK) in the upcoming release, which improves the I/O data path, resulting in better latency and throughput. Additionally, we will introduce the Userspace Block Device Driver (ublk) as a frontend to enhance performance and reduce latency. This feature is particularly useful for edge devices that use legacy data engines.
=======
本議程將要來聊聊 Angular v16 裡開始才有的 「Signal」。首先，我會簡單帶大家認識一下 Angular 和 Signal 的基本概念。接著，我們要深入了解 Signal 在 Angular 中的運作原理，以及它能為我們的開發帶來哪些好處。最後，透過一個實戰範例，讓大家看看如何運用 Signal 來輕鬆搞定資料更新和元件之間的溝通。無論你是新手還是老手，這個議程都能讓你對 Angular 和 Signal 機制有更深刻的認識！
=======
你總是使用 GMail, Google Photos, Google Map, Google Drive 等等 Google 全家桶嗎？擁抱開源文化、卻又不得不將各種個資、隱私、行為剩餘送給大手會社們？懷念撥接 BBS 時代的美好、卻擔心自架沒有 interoperability?
本議程以實務角度出發，完全使用開源套件，提供各種自架服務的小技巧。自己動手、豐食足食。
本議程將探討以下新手小技巧:
1. 樹莓派、Digital Ocean、還是便宜二手 x86 
2. 固定 IP vs. 浮動 IP
3. 現代生活的必需品: Let's Encrypt
4. Email -- Postfix + CA + Dovecat 還有 GMail 的小鎖頭
5. 隱私的小幫手: wildcard email
6. Blog: 不用 blogger 也不用 CMS 的懶人法
7. 行事曆與聯絡人
8. 照片的雲端備份
9. 未竟之業: 貓臉辨識
=======
隨著微服務架構的不斷發展，Protocol Buffers v3 作為針對定義溝通介面的解決方案獲得了不少軟體產業的青睞，講者自己也在現職公司中充分享受到它帶來的生產力提升。
 
講者期望透過此次演講做個簡單的 Protocol Buffers v3 入門介紹，並從軟體產品開發的角度來討論他在開發中的合適使用情境。
=======
分享 0xparc 基金會所寫的 zkSNARK: plonk toy example - plonkathon (https://github.com/0xPARC/plonkathon) 的架構以及其背後的密碼學概念
=======
機器人作業系統Robot Operating System（ROS)，是為了讓開發者可以方便撰寫機器人軟體所設計的一種框架。為了方便大家對此有初步的了解，本議程並不會著墨於代碼該如何書寫，而是帶著各位去認識關於ROS的基本觀念，並跟大家分享我之前學習上所遇到的種種難關，以及當時的解決方案等等。在最後，則會帶給大家實際應用ROS系統的例子：在電腦中部屬，並模擬一台自駕車。
內容大綱：
- ROS是甚麼?
- 使用ROS能為我們帶來甚麼好處?
- 通信機制
- 文件系統
- 功能包與典型結構
- 工作空間
- 開源社區
- ROS中的各種工具
- URDF
- 學習的歷程分享
- 自駕車專題
=======
醫療影像人工智慧(AI)應用蓬勃發展，但極少應用整合至醫院內部的影像傳輸與管理系統(PACS)。醫學影像AI研究在實驗室階段雖有很好的成果，一旦整合至PACS，不僅系統整合處理成本很高，更無從產生實際應用與商業化。如何降低系統整合的門檻，改善醫師的工作效率，已成為發展醫療AI應用至實際醫院內資訊系統之重點競爭策略。
本次議程主題為介紹根據國際開放標準的架構，包含: IHE以及DICOM，說明如何透過標準化的方式有效整合醫學影像的AI模型落地至PACS系統。
=======
When thinking about open source contributions, most people think about contributing code. This was true in the early days when open source was a way for people to share the cool thing they built.
Now, as open source becomes the default way to build software, contributions required to create, manage, and sustain projects go beyond code.
From this talk, you will learn how to make impactful contributions to open source that does not involve contributing code.
=======
PostgreSQL Index的介紹及相關系統表,函數. 以及BRIN Index的特色及應用.
PostgreSQL Index的介紹.
相關系統表,函數.
BTree  Index 的應用.
Hash Index 的應用.
BRIN Index 的應用.
=======
正所謂「樹大必有枯枝」，參加社群聚會的參與者多了，多少還是可能會遇到一些行為出格的人造成不舒服的情況，因此各社群活動紛紛出台 CoC - 行為準則來維持交流環境。成立十餘年的 Hacking Thursday (以下簡稱 H4) 也不例外，經過多方參考及一段時間的醞釀後，於去年下旬推出了 H4 的 CoC。講者作為近期較為活躍的 H4 核心參與者之一，分享我們的 CoC 產生經歷，希望能為「科技領域的多元共融」帶來一些想法。
本議程主要講述 Hacking Thursday CoC 的誕生源由及過程，雖然會不可避免的談及到實際案例，但案例當事人的相關探討並非本議程的討論重點，還請各位議程參與者配合，盡量把焦點放在 Hacking Thursday 的 CoC 上面。
=======
1. COSCUP 启发的跨界社群 —— 开源市集
2. 开源运动背后的普世价值 —— 开放协作
3. 内源模式驱动的远程开发 —— 开源实训
4. 开放协作底层的精神内核 —— 主动参与
=======
只要有心人人都是產品人，所以雖然標題寫了「產品經理、專案經理、企劃、產品設計」，但也許 title 並不重要？總之，也許可以來聊聊，彼此認識認識。
歡迎有心來到 COSCUP 但整個上午還很勉強地有聽沒懂的人來緩解一下「我在那裡我是誰」的情緒，當然也歡迎老手分享在如何運用開源招數化解產品發展難題。
在一輪自我介紹後我們會用 Lean Coffee 的方式討論議題，所以帶著問題來最好了 :) 如果人數在 3 人以下就純吃飯閒聊；話說我們好像還可以乾脆直接一起訂便當那類？ 有興趣的先登記一下 Telegram 方便聯系吧 t.me/cosupproductfolks
※歡迎會眾在 COSCUP 舉辦期間參加 BoF 同好會！請至[此文件](https://docs.google.com/document/d/1s5u-4bw_hwKmhtpPA6pAalNF5Km91mLmdwMkxAUA1AE/edit?usp=sharing)找到您感興趣的活動，留下您的大名，準時出席！
* Welcome to participate in the BoF sessions during COSCUP. Please check out [this document](https://docs.google.com/document/d/1s5u-4bw_hwKmhtpPA6pAalNF5Km91mLmdwMkxAUA1AE/edit?usp=sharing) to find the activities that interest you. Feel free to leave your name and join us on time!
Opt-in / 參加者：
Po-chiang "Bob" Chao, Product Manager & FLOSS contributor, @bobchao everywhere
Ching-Yen, Kuo. 小ㄐ Executive Secretary @rosa32222
Peter Chen, President & Cofounder @TravelSkope, and (Non-)FLOSS Software localizer, @petercpg
Calvin Tsang, Open Source Hong Kong. 
Daisy Fung, Open Source Hong Kong. 
Kou-hsing Tsou "阿柴", Project Manager & Contact person of COODFA community, @chaikuohsing
Frank Wu, Product Manager, @FrankWu
(add your name here! 在這裡簽上你的大名)
=======
A graph database is the optimal DB for storing relationships between people and objects. Let's create a family tree and explore various searches. How does it differ from traditional RDB or spreadsheets?
Graph databases are used in many systems, but what are their use cases?
This time, I will focus on creating an easy-to-understand family tree for SPY×FAMILY.
I will present three points.
1. How to gather data
2. How to convert the data into a graph
3. What kind of searches can be performed on the graph
If you are interested in creating a database for complex relationships, please join us.
=======
Reading well-structured source code is an effective way to learn programming skills. The free, libre, and open source software (FLOSS) is considered an excellent tutor or learning guide for programming learning courses. However, in actual programming classes, it is not apparent that the teachers consult the source code of real applications as good examples. This talk provides several teachers' thoughts from the university who teach informatics, including programming skills.
=======
在這次的議程中，將分享如何利用 GCP 上的各種資源，快速地部署和運行 side project。接著會從後端工程師的角度，帶大家了解 Public Cloud 的好處，找出適合自己的方案。最後會給出一些花錢的建議，讓你可以在 side project 上投入合理的成本。如果你也想要做出自己的 side project，或者想要學習 GCP 的使用方法，歡迎前來！
- 個人介紹
- 為什麼要做 side project?
- Side Project 部署各種地方的簡易比較
- 運用 GCP 上的各種資源 (Cloud run, Firebase, Cloud Storage, Eventarc) 做出你的 porject
- Public Cloud 的好處：搬家 (e.g. Cloud Run -> 自架 KNative, Dockerfile 不用靠自己！)
- 花錢要花在刀口上！花錢的建議
- 結論
=======
Don't you think that printing from Linux is still difficult? It's actually become easy when using printers that support Apple AirPrint. In this talk, I will explain what happens behind the scenes of "driverless printing".
Do you have a printer in the 2020s? And do you print documents from a Linux system on your desktop? Printing from Linux used to be challenging a decade ago, but now it's easy with driverless printing, especially with printers that support Apple AirPrint. Let's take a closer look at the technology behind it, including CUPS, OpenPrinting, and the Internet Printing Protocol (IPP).
=======
In recent years, many open-source-based startups are coming from China, such as M5Stack(Hardware) and PingCap/TiDB(software).
I`m an official member of KaiYuanShe(China Open Source Alliance), Leading some document translation. And my company Switch Science is an Open-Hardware distributer; I also have success with some marketing projects in Japan with Shenzhen Hardware company.
I will introduce some cases of Business development about hardware and software.
Official Menber/正式成员, KaiYuanShe/开源社
He has three roles in Society. The first is Business Development in Shenzhen, Japan, and the Asian area. He works with open hardware startups based in Shenzhen, such as Seeed, M5Stack, iMakerbase, Heroad VC, Etc. And his company, Switch Science, is the most famous maker tool e-shop in Japan and the DIY Indie product marketplace.
The Second is the Researcher. Researcher and Lecturer of WASEDA University Business school, Garage Sumida Lab, Mentor of iMakerBase Shenzhen, MTOM Shenzhen. His book ECOSYSTEM BY MAKERS is famous in Japan. He also translated THE HARDWARE HACKER book into Japanese. That book by Bunnie Huang, who is a world-famous Hardware hacker.
The third is Community development. He is a Co-Founder of Nico-Tech Shenzhen (Shenzhen-based Open Hardware community), with Over 3000 members in a Facebook group. The KaiYuanShe(China Open Source Alliance) Support Maker Faire Shenzhen and Singapore, Maker carnival Shanghai and some events take us on a journey to Japan’s homeland and their exciting ways of using technology, design, and science. He is the most experienced person in Maker Faire in Asia.
He joined KaiYuanShe(China Open Source Alliance) in 2021, currently only one global member. In addition, he was honored Community star in 2021 and 2022.
https://www.linkedin.com/in/takasumasakazu
=======
The toybox package contains a ~300 line bash script that cross-compiles a Linux system from source code and boots it to a shell prompt on a dozen QEMU targets, with a second script that automatically smoketests each image (it boots and runs, and the clock, network, and block device all work) to regression test new versions of Linux, qemu, and itself.
The toybox project (providing Android's command line since 2015) includes a system builder script (https://github.com/landley/toybox/blob/master/mkroot/mkroot.sh) which compiles a toybox root filesystem, adds a small init script, packages it into Linux via initmpfs, and boots the result under qemu on 14 different architectures. (And on hexagon if you have a comet board. And j-core if you have a turtle board.)
The build script itself is a single standalone bash script but it can include additional scripts (on the command line) to build and install more packages into the initramfs. See mkroot/root/dropbear in the toybox source for an example.
The architecture-specific part for each target is only a few lines, including Linux kernel configuration. For example: QEMU=s390x KARCH=s390 VMLINUX=arch/s390/boot/bzImage KCONF=MARCH_Z900,PACK_STACK,VIRTIO_NET,VIRTIO_BLK,SCLP_TTY,SCLP_CONSOLE,SCLP_VT220_TTY,SCLP_VT220_CONSOLE,S390_GUEST
This is the successor to the earlier project (https://landley.net/aboriginal/about.html) which built a 7 package Linux system, rebuilt itself from source code under the result, and then built Linux From Scratch (and an older version of Gentoo) under that. Work is ongoing, but I'd eventually like to get the mkroot version of this minimal self-hosting development environment down to 4 packages (probably toybox, musl-libc, linux, and tinycc).
=======
演讲者：郭悦 AWS资深开发者运营专家
分享者将从对百度Apollo开源社区运营经验及aws中文开发者社区打造及运营经验中总结，为大家分享如何用开源文化打造全球性社区（20min）：
1.如何打造全球性社区（AWS中文开发者社区分享）
2.如何让自己的技术与项目链接全球开发者
3.开源文化与思维助力社区生态发展
=======
作為一個系統軟體開發者常常需要在茫茫大海中找臭蟲(BUG)，需要快速閱讀大量讀程式碼，所以我們需要一個可以幫助我們的IDE，往往正確的配置IDE也是非常重要，因此這邊我會分享如何配置VScode讓他能很好的幫助我們。對於找臭蟲(BUG)與GDB的關係，這主題總是有講不完的經驗 ，使用GDB就像有上限很高的武器可是不會用的話，還是只能把它放旁邊。還有這神兵利器竟然是開源免費軟體比起商業軟體txxxx32更顯高CP工程師的價值。這次會分享如何撰寫GDB python script跟如何讓它幫助我們找到kernel 的臭蟲。這個議程會實例分享如何運用VScode及GDB幫我們找到riscv kernel BUG跟追蹤kernel 行為，聽完後會覺得GDB比printk方便節省加班時間。
=======
SVG (可縮放向量圖) 格式有很多應用，包含各種資料視覺化繪圖、 軟體套件相依關係、 副程式呼叫圖、 資料庫ER model 繪圖、 簡報、 地理資訊、 建築資訊及醫療資訊等等系統。 這裡從使用者的角度介紹一些工具及有趣的應用。
=======
數位發展部積極發展並導入零信任、雲原生、容器化、DevOps等技術，會說明到數位部暨掛牌以來如何將服務轉移到雲端並導入Kubernetes。由於政府單位較少採用容器技術，數位部拋磚引玉，希望給各機關提供容器使用的參考，並探討如何解決相關稽核問題等。
=======
pg_anonymize: simple and transparent data anonymization for PostgreSQL.
This talk will introduce pg_anonymize extension, explain how it works and how it can be used to transparently anonymize data, whether dynamically querying a database or exporting data with some client tools like pg_dump or pg_sample.
=======
講者目前為 Apache 軟體基金會 (ASF) 正式成員、ASF 孵化器項目導師、ASF 社區發展委員會成員，開源社聯合創始人，並曾任職于微軟、甲骨文等國際科技企業的資深主管，屢敗屢戰創業者，以及騰訊、華為和 BAIN & Company 的開源顧問。
講者將深入淺出地分享：開源項目社區如何從 “零“ 開始，邁向開源商業化企業的 “壹“ 的路徑與案例。
=======
《英雄聯盟》的大型賽事吸引了眾多觀眾，但小型比賽的曝光度較低。為了提高小型比賽的知名度，提出了「LAIC- League AI Commentator」系統，使用人工智慧技術濃縮比賽內容成摘要，讓觀眾在短時間內了解比賽的重點和轉折。系統包含用戶介面、資訊擷取、生成式人工智慧和語音合成四大部分，各自負責互動、資訊收集、分析和回答生成。團隊計劃將系統與比賽畫面結合，提升觀眾觀看體驗，增加小型比賽的曝光和關注。
The large-scale tournaments of League of Legends have attracted a lot of viewers, but smaller competitions have lower exposure. To increase the visibility of these smaller events, the "LAIC - League AI Commentator" system has been proposed. It utilizes artificial intelligence technology to condense the content of the matches into summaries, allowing viewers to quickly understand the key moments and turning points. The system consists of four main components: user interface, information retrieval, generative AI, and voice synthesis. Each component is responsible for interaction, data gathering, analysis, and generating responses respectively. The team plans to integrate the system with the game footage to enhance the viewing experience for the audience and increase exposure and attention for the smaller competitions.
對於許多英雄聯盟觀眾而言，他們經常觀看的是大型全球賽事，這些比賽因其規模之大而受到關注，也有不少遊戲粉絲會將比賽影片濃縮成精華，讓比賽內容更加方便觀看，進而使得更多人觸及該場比賽。
然而，小規模的英雄聯盟比賽，即使到達了決賽階段，也因其曝光度較低而鮮為人知。即使某場選手有著高水準的操作以及優秀的觀念理解，即使還有滿腔熱血的賽評替這場比賽帶來更多的觀看性，這些精彩的瞬間也無法被大眾所看見。
然而有比賽就得有觀眾，為了提高小型比賽的曝光度，我們想藉由人工智慧技術來幫助觀眾更方便地觀看小規模比賽。
為此，我們計畫開發LAIC- League AI Commentator系統。使用此系統，觀眾可以在短短5分鐘內了解一場平均40分鐘的比賽精華。系統使用先進的人工智慧技術，將比賽內容濃縮成摘要，使觀眾可以在短時間內了解比賽的主要情節。
以更短的時間觀看比賽摘要，增加比賽被觀看的機會。未來，我們也將嘗試與比賽內部分的精彩畫面結合，以進一步提高觀看體驗，讓小型比賽能夠獲得更多曝光率
=======
As the use of containers and Kubernetes for application deployment becomes more widespread, managing the continuous integration/delivery/deployment process can still be a challenge. Tekton and ArgoCD are two CNCF projects that aim to simplify and automate the CI/CD process for containerized applications. In this talk, I will provide an overview of Tekton and ArgoCD and show how they can be used together to streamline the CI/CD process.  I will demo how to deploy new features to a Quarkus (game) application in a streamlined and controlled way (and perhaps the audience will get to even play along? ). 
This talk is aimed at developers, DevOps engineers, and other Cloud Native / Kubernetes practitioners who are interested in learning more about truly Cloud Native, Serverless CI/CD and how it can be used to improve the automation of building and deploying applications to Kubernetes.
Takeaways:
* Introduction to Tekton and ArgoCD
* How to leverage pipelines and GitOps to deploy applications
* How to release new features continuously using feature flags
=======
面對 COVID-19 疫情的衝擊，台灣 Python 年會 (PyConTW) 2021、2022連續兩年從實體會議成功轉型為線上會議，這中間涉及了數位轉型的過程。本研究將提供一個深入的視角，了解數位轉型如何影響非營利組織的行銷策略與運作模式，主要探討 PyConTW 如何利用 Gather Town 雲端服務舉辦線上會議，並透過 Facebook、Instagram、YouTube、Podcast、Twitter、Linkedin 等社群媒體進行行銷。除了採用新型態的線上會議平台，PyConTW 的志工們也根據社群媒體的經營數據進行資料驅動的決策，以持續規劃更優質的活動。
透過這樣的數位轉型，PyConTW 不僅成功地舉辦了線上年會，還能夠有效地進行行銷活動，擴大其影響力外也提高了參與者的參與度與滿意度。透過分享PyConTW數位轉型的經驗，您也可以看到在疫情期間我們如何有效地利用上述社群網站平台進行廣泛的傳播與虛擬體驗，並與潛在目標會眾建立深度的連結。
關鍵字：數位轉型、雲端服務、社群媒體行銷、體驗行銷、PyConTW
=======
Cryptography is an essential part of the modern world, and secret sharing is an essential tool for secure communication. In this talk, we will cover threshold signature schemes and multi-party computing, which allow for secure communication without the need for a centralized system. We will cover the basics of elliptic curve cryptography and how it is used to create secure signatures, as well as the principles behind Shamir secret sharing and additive secret sharing. We will also discuss the conversion between the two methods and how they can be used to create a secure threshold signature scheme. Overall, this talk aims to provide attendees with a comprehensive overview of the key concepts behind threshold signature schemes and multi-party computing.
The world of cryptography is constantly evolving, with new tools and techniques emerging all the time. In this talk, we will explore the cutting-edge world of threshold signature schemes and multi-party computing. These techniques allow for secure communication without the need for a centralized system, making them ideal for modern decentralized applications. We will cover the basics of elliptic curve cryptography and how it is used to create secure signatures, as well as the principles behind Shamir secret sharing and additive secret sharing. We will also discuss the conversion between the two methods and how they can be used to create a secure threshold signature scheme. This talk is perfect for anyone interested in the intersection of cryptography and decentralized systems.
=======
Container image pulling is a critical component of modern application development and deployment workflows, but it can be slow and resource-intensive, particularly when pulling large images. Research shows the time to pull container image take 76% of the container startup time. This proposal explores the use of InterPlanetary File System (IPFS) cache and eStargz lazy pulling to improve the speed and efficiency of container image pulling.
IPFS is a distributed file system that allows for content-addressed storage and retrieval, providing a decentralized and fault-tolerant alternative to traditional centralized storage solutions. By caching frequently used images on IPFS, container images can be pulled more quickly and efficiently, reducing the time and resources required for image pulling.
In addition, eStargz is a new container image format that enables lazy pulling, meaning that only the parts of the image that are needed are pulled, rather than the entire image. This reduces the amount of data that needs to be transferred, speeding up image pulling and reducing bandwidth requirements.
This proposal aims to provide a more efficient and scalable solution for container image pulling, enabling faster and more reliable deployment of containerized applications.
=======
# 三個主題
* (1) 分享的初衷
* (2) 跨域實務經驗
* (3) 持續與人互動
從分享的初衷開始，並逐漸擴展到國際舞台上，在美國的 Mozilla Summit 擔任講者、在歐洲藍牙論壇成為與談人。透過他人分享的經驗，能夠讓自己成長，同時透過自己的分享，除了能讓他人獲益，也能整理自己思路。這種正向循環在講者的生涯發展中，是個關鍵飛輪。
在跨域實務經驗方面，講者將分享了他在開源社群不同領域的學習經驗，從擔任 COSCUP-GNOME Asia 外交官、COSCUP 銷售組、到 Mozilla Support 在地化的專案負責人，這些經驗使他有機會挑戰產品和技術整合部門主管。他從這些實踐中學會了溝通、銷售、拆解和梳理流程等技能，並將它們應用於職場工作和產品規劃中，促進了他的職業發展。
最後，講者強調了持續與人互動的重要性。他從 Mozilla 開源社群，到 AWS 技術社群，持續在不同領域中探索，例如接觸 Mozilla FirefoxOS 而開始動手玩 AOSP，再因此而在 AWS 上建立健身物聯網。這種持續的互動使他有機會能夠瞭解市場動向，並接觸到各種技術，進而職涯上逐步前進，往理想與夢想邁進。
---
# 在摸索職涯的你，是否想要知道
* 從分享的初衷如何擴展到國際舞台？
* 一名阿宅工程師，如何在美國 Mozilla Summit 和歐洲藍牙論壇上，擔任講者以及與談人？
* 透過持續分享，如何實現自我成長？
* 在開源社群中的跨域實務經驗是什麼？
* 如何應用社群經驗，促進自己的職涯發展？
* 持續與人互動有何重要性？
* 講者如何從 Mozilla 到 AWS 技術社群中探索不同領域？
* 講者如何了解市場動向並結合到自己的工作當中？
---
參與這場演講，一起聊聊，一起連結，一起探索職涯的各種可能性 :)
=======
深入介紹開源專案Atmosphere
一套我們(Vexxhost)部屬在跨國公有雲與數十個私有雲的部屬方案
並分享為什麼我們需要開發這套部屬工具以及對我們目前使用狀況進行分析
也會展示demo務求讓各位看個仔細仔細再仔細
=======
Tenok (在阿美族語中意指 Kernel) 是一個支援 ARM Cortex-M 架構、6000行左右、目標應用為機器人控制 (Robotics) 以及物聯網 (Internet of Things) 的實驗型微型即時作業系統。本專案是由講者所開發之專案，希望與聽眾分享關於作業系統開發的細節以及經驗。
Tenok 一詞在阿美族語中表示核心 (Kernel)，其啟發自成大資工系師生於2013年所創作的 rtenv / rtenv+，後者被用於成大資工嵌入式系統系列課程中作為教材。原先 Tenok 只是用於學習及重現 rtenv，但目前已強化了部分 rtenv 設計，可視為另一個作業系統開發的參考案例。
Tenok 亦參考了 mini-arm-os 以及 FreeRTOS，相較 rtenv 有較完整的資源管理功能，且檔案系統基於 inode 邏輯，更加貼近於真實作業系統的設計。另外也包含了一個支援自動補齊、歷史檢索以及數個快捷鍵功能的 Shell 文字互動界面。
以下為 Tenok 的主要特徵以及功能:
* POSIX 風格的 API
* 同步機制: Spinlock, Mutex, Semaphore
* 行程間通訊 (IPC): FIFO (Named pipe), Message Queue
* 支援浮點數運算單元 (Floating-point Unit, FPU)
* 內建 Shell 的使用者文字互動介面
* 簡單的 rootfs 及 romfs 的檔案系統實做
* 可用 Metalanguage 定義除錯封包 (Debug messaging) 並進行即時資料繪圖 (Real-time plotting)
* 整合 MAVLink 通訊協議連接既有的 Open-source 軟體生態
GitHub 連結: https://github.com/shengwen-tw/tenok
=======
BMC
=======
In recent times, there have been numerous cases of gender equality issues occurring in both campus and workplace environments. In the age of information explosion, people's concepts and perceptions of gender equality have undergone changes, accompanied by conflicts and dilemmas. As employers, managers, educators, and learners, how should we respond to these forms of discrimination and hatred? This submission will present various cases of gender equality issues from different industries, companies, campuses, and within open-source communities, serving as references and sources of inspiration for participants.
近來無論校園與公司場域皆發生多起性別平等案件，面對資訊爆炸的時代，人人對於性別平等的概念與想像已然發生改變，其中也不乏衝突與困境。作為雇主、主管，乃至教育者與學習者，面對這些歧視與仇恨，該如何因應。這次投稿會舉不同產業、公司、校園案例以及開源社群內部的實際性平案件，作為與會者的參考與借鏡。
=======
Organizations have been struggling to discover valuable insights in their massive data lake with machine learning because of the lack of data scientists and knowledge. Machine Learning is one of the most wanted capabilities on organizations’ transformation roadmap to be able to use machine learning to predict outcomes for critical decision-making for the business.  MySQL HeatWave Automated Machine Learning (AutoML) is designed to enable you to explore and discover hidden insights with Automated Machine Learning technology.
In this session, you will learn about
•	What you can do with HeatWave AutoML?
•	How to use HeatWave AutoML?
•	Rationalize prediction results with HeatWave's explaner function
=======
Julia 是個可以從快速開發到佈署服務的語言。今天的演講將會用一個簡單的範例來示範如何用 Julia 快速開發一個微服務，並且上線。
=======
在日常生活中，我们对每件事都要做决定，我们需要对每件事都有一定的了解,才能够有信心的做出正确的决定。
作为一种研究方法，理解的过程被称为研究过程。
我们的目标是建立并提供一个友好、开放、容易訪問的空间 / 平台，让人们利用、分享、学习、交流研究方法，以更好地处理日常生活。
我們為日常生活中大小事做決定，這些決定的背後，需要循序的脈絡及深刻的瞭解，隨著信息爆炸的時代，我們需要一套研究方法論，幫助我們快速梳理龐大且複雜的信息，以便我們能做出正確的判斷，有信心的下達決策，並使其更有說服力。
=======
聊天機器人已經流行了好幾年，但是在應用上始終以「任務型」機器人為大宗，直到ChatGPT的出現，它對於意圖（intent）的理解遠勝許多現有的NLU（自然語言理解）技術，透過導入ChatGPT，真正可以與使用者聊天並且把意圖順利轉換成任務的機器人，將變得不再遙不可及。
=======
從國家文化記憶庫開放以來，用一隻專門蒐集各種記憶庫應用案例的機器人，他透過自動爬各種相關 RSS / Facbook 蒐集了 2000 多筆有用到記憶庫資料的文章、影片、文章，其中不乏各種很棒的成果，但不解的是，他「明明好好做到什麼」，再前進一點點，就會是ㄧ個好的引用案例；又或者不少過往執行過的團隊，他們要進一步使用本來的資料做各種應用時，卻又怕怕的或者忘記了 CC 授權會是他很重要的利器。這個議程希望簡單聊聊這些個人作為ㄧ個，前補助社群的窗口立場，聊聊這些很好有趣的案例，如果好好怎樣做，可再多開放一點點，就會更好！那無法前進的感覺像極了戀人未滿的感覺，再靠近一點點，我就會牽手！
=======
隨著Java即將來到21，更多的特性以及項目實驗特性也即將能投入JVM環境的日常開發。但您是否有深入研究過JVM Bytecode裡那些常量及指令碼的應用？
在本次議程中，將帶領各位探討動態常量(Constant Dynamic/InvokeDynamic)以及指令碼invokedynamic(INDY)所解決的情境，以及他們是如何實際影響編譯器位元組碼的生成，進一步在JVM生態系投下震撼彈。
本議程將介紹Constant Dynamic/InvokeDynamic以及INDY的解決情境以及實際應用場景。
=======
想找找對 Linux Kernel 本身有興趣、或是有在從事相關工作的人一起聊聊，沒有經驗單純好奇也可以來～
Hacking Room (Day 2)
Hacking Room 是一個能容納 30 人左右的交誼廳，供會眾自由交流！在這裡，我們不會限制你的活動長度；你可以在議程與議程間的空檔三五好友打十五分鐘的桌遊，也可以和志同道合的開源夥伴進行兩小時的衝刺開發，可能會有多個活動在這個空間同時發生，要怎麼運用這個自由空間由你決定！
The hacking room is a free space for casual gatherings, which can hold up to 30 people. There is no time limit in the hacking room. You can play card games with friends for 15 minutes between talks or run a two-hour open-source sprint here. Also, multiple events are available at the same time. It is all up to you!
–
如果你想要揪人參與在 hacking room 舉行的活動，歡迎在[此文件](https://docs.google.com/document/d/1s5u-4bw_hwKmhtpPA6pAalNF5Km91mLmdwMkxAUA1AE/edit?usp=sharing)登記宣傳！
想參加活動的會眾也可以在這份文件找到有哪些有趣的活動正在發生！
Share your event [here](https://docs.google.com/document/d/1s5u-4bw_hwKmhtpPA6pAalNF5Km91mLmdwMkxAUA1AE/edit?usp=sharing) to invite other attendees to join in!
=======
阿美族語和漢語的語法結構和語序完全相反，例如漢語的 我(主詞)要去(動詞)學校(受詞)，翻成阿美族語是 Tayra(動詞) kako(主詞) i(介語在) pitilidan.學校。
各別單字也有不同的意義，漢語的小犬一詞，這是漢人謙虛的稱自己的兒子，阿美族没有這種文化習慣，就不能翻成小狗了。
需要了解漢語和阿美語這兩種不同文化之間的差異，包括語言、風俗、信仰和價值觀等。現在翻譯大部分參考漢語維基百科的資料，翻譯過程中我們再三推敲目標語言的詞彙和用法，並根據原文和目標讀者的需求，選擇最合適的詞彙和表達方式。透過這樣的翻譯我們相信目標讀者就會很容易理解不同文化的精彩，多元文化的同等價值，有利阿美族語的開放性，期能達到不同群的相互尊重，同步共同成長
我們希望透過維基百科的翻譯傳達阿美族的語言文化是精彩的、豐富的深奧的，可以為這個世界增添許多欣賞的選擇。阿美族語和漢語的語法結構和語序完全相反，一般的語序中漢語或英語大多是主詞動詞受詞，而阿美族語是動詞-主詞-目的詞。例如漢語的 我(主詞)要去(動詞)學校(受詞)，翻成阿美族語是 Tayra(動詞) kako(主詞) i(介語在) pitilidan.學校。阿美族語的Kafuti’an 睡床，它的本意是指 睡覺的工具。再如漢語的小犬，這是漢人謙虛的指稱自己的兒子，但是阿美族人就没有這種文化習慣，就不能譯成小狗了。
因此，翻譯時需要了解漢語和阿美語這兩種不同文化之間的差異，包括語言、風俗、信仰和價值觀等。現在翻譯時大部分參考漢語維基，翻譯過程中我們再三推敲目標語言的詞彙和用法，並根據原文和目標讀者的需求，選擇最合適的詞彙和表達方式。
透過這樣的翻譯我們相信目標讀者就會很容易理解不同文化的精彩，多元文化的同等價值，有利阿美族語的開放性和傳播知識，期能達到不同群的相互尊重，同步共同成長
=======
均一教育平台在 2012 年開始製作與台灣課綱相符的教育影片、開發在地化的題目，其中內容包含數學、科學、生物、英文等學科，讓學生在高科技的輔助進行遊戲化的闖關學習，進而推動個人化學習。期望讓每一位孩子，不論出身，都有機會成為終身學習者。從個人延伸到群體成就更好的自己，也一起成就我們更好的未來。
本議程邀請到均一教育平台基金會的副執行長蔡子揚與資料工程師蔡鎮宇，為我們分享如何培養數據驅動的工作文化做出決策及解決問題，以及數據基礎設施的建設，達成資料的有效收集與分析。期望透過本議程，推廣 data centric 的方法，透過科技與合作，提供所有孩子免費且優質的個人化學習內容與環境。同時，均一也會介紹在新的 AI 技術趨勢下，新產品與不同平台間的發展，希望能夠集思廣益，以找到對這個主題有興趣的參與者，一起共創教育的創新發展。
=======
Get-to-gather Hands On with Open Source Firmware!
=======
笔者自 2022 年作为前端工程师加入某区块链基金会下的 Portal 平台项目，主要参与负责 Discord、Vote、Task 等 DAC 日常运营和治理功能的实现以及 Gnosis Safe 等功能的维护。 
项目主要功能围绕 DAC 组织，数据接口来源多样，包括去中心化的链上数据、SubGraph 备份数据、Discord 服务中心化数据等，在此项目上，如何运用 Mobx 组织和管理 store 状态颇具挑战，笔者有一些自己的实践想要给大家分享
=======
邀請台灣各語言維基社群共同討論台灣維基媒體運動整體發展戰略。
討論內容：
第一階段、發展目標交流與統合
每個語言發展的主客觀環境與進程都不同，但是以「台灣」為範圍的維基媒體運動，則會希望在尊重各社群主體性之餘，也能共創共好。因此第一階段我們將先各言爾志講出各社群的發展藍圖，並且從中統合出台灣整體發展的目標。
第二階段、資源需求盤點與分配
社群發展需要資源，但資源容易成為「大者恆大」的情況：資源多者發展成績優異，於是更容易取得更多的資源。在確認目標後，我們需要盤點資源的需求以及可能取得的總量，並討論在取得、分配上的合理機制，讓資源能獎勵積極社群的同時，也能顧及腳步較緩慢的社群。
第三階段、協調平臺建立與運作
本階段將確認未來如何建立協調平臺，以確保前二階段提及的問題，在現況改變的時候，能夠及時反應並使整體運動對應調整，確保各社群之間彼此的認知保持一致。
=======
Topic:
開源設計是一種透過開放和共享的方式，讓人們可以自由地存取、使用、修改和分享設計資源的方法。這種方法不僅可以促進設計師、工程師、教育者以及整個社群之間的交流與合作，還能提升整個設計、專案與意想不到的創意。因此，這個時間就我們來現場交流、交朋友認識彼此，也歡迎儶帶您目前正在進行有趣的專案或是您需要的幫助來現場分享，讓我們一同聽故事或解決難題!
Organization:
WTM (Women Techmakers) 是 Google 為處於科技產業的朋友們提供能見度以及資源的一項計畫。且舉辦一系列的技術和軟性議題等活動，讓我們一同學習成長、經驗分享與創造屬於我們的未來。
※歡迎會眾在 COSCUP 舉辦期間參加 BoF 同好會！請至[此文件](https://docs.google.com/document/d/1s5u-4bw_hwKmhtpPA6pAalNF5Km91mLmdwMkxAUA1AE/edit?usp=sharing)找到您感興趣的活動，留下您的大名，準時出席！
* Welcome to participate in the BoF sessions during COSCUP. Please check out [this document](https://docs.google.com/document/d/1s5u-4bw_hwKmhtpPA6pAalNF5Km91mLmdwMkxAUA1AE/edit?usp=sharing) to find the activities that interest you. Feel free to leave your name and join us on time!
Opt-in / 參加者：
Eva (小華) / Discord, OpenSourceDesign
catcatcatcat (四貓)
@bobchao
Eddie Cho
(add your name here! 在這裡簽上你的大名)
=======
Open Source Firmware Hands-on and discussion
=======
這場分享將帶領會眾進入 Grafana K6 工具的世界，並展示如何超越傳統監控的界限。議程中將介紹 Grafana K6 的基本概念和功能，深入探討其在應用程式壓力測試和監控方面的應用。透過實用的示例和最佳實踐，會眾將學到如何使用 K6 進行全面的壓力測試、模擬真實使用者行為、發現應用程式的性能瓶頸以及生成有價值的監控報告。
這場分享的目標是向會眾展示如何使用 Grafana K6 探索應用程式的深淵，並超越傳統監控的限制。我們將從介紹 Grafana K6 的基本概念和功能開始，使參與者對這個工具有一個清晰的理解。接下來，我們將深入探討 Grafana K6 在應用程式壓力測試和監控方面的應用。讓會眾能夠進行更精確和有價值的壓力測試，並探索應用程式的性能瓶頸和弱點。
這個研討會適合所有對於開源工具和應用程式監控感興趣的開發者和工程師。並與您一同探索 Grafana K6 的應用程式之旅！
=======
PGO（Profile-Guided Optimization）是 Golang 中的一項優化技術，可根據程式在真實執行中的性能資料來指導編譯器優化決策。通過收集執行時的性能資料，PGO 可以生成更高效的程式碼，提升 Golang 應用程式的性能。
=======
Lingua Libre by Wikimedia France is an open source webapp to create large and clean audio corpora, best suited for e-dictionaries and text2speech machine learning.
Outline
    Demo of the tool (10mins)
    Stated objectives
    Current progresses
    Limits & biases
The diversity of world languages, their words, expressions, voices, are poorly documented and accessible. Lingualibre.org allows us to record languages vocabulary and audio dictionaries at large scale, in an easy and quick fashion (800 audio/hour) .
After 5 year of action and 800,000+ recordings, we would like to share past progresses and discuss future actions.
=======
Closing Day 2
=======
1. 了解开源年会 COSCon 的成功实践经验；
2. 了解如何打造社区志愿者驱动的技术活动，包括策划和准备、实施和执行、总结和反思等各个阶段的步骤和注意事项；
3. 探索更多基于志愿者的举办会议和活动的可能性，为个人和组织发展提供新的思路和途径。
=======
來聊聊今年的議程參加心得吧！
適合參加者：會眾、講者、社群夥伴、有興趣擔任志工的人
無論好奇超過三百場議程是怎麼煉成的，或是第一次參加 COSCUP 被同時十幾軌議程嚇到選擇障礙，亦或是今年的講者或合作社群夥伴，都可以在這個時段來和議程組工作人員聊聊～
注意本活動雖然是由議程工作人員主揪，但不代表大會官方立場，有需要正式反應意見請洽大會官方管道
（我們可能會邀請更多組別的志工一起來和大家聊天分享，待定）
※歡迎會眾在 COSCUP 舉辦期間參加 BoF 同好會！請至[此文件](https://docs.google.com/document/d/1s5u-4bw_hwKmhtpPA6pAalNF5Km91mLmdwMkxAUA1AE/edit?usp=sharing)找到您感興趣的活動，留下您的大名，準時出席！
* Welcome to participate in the BoF sessions during COSCUP. Please check out [this document](https://docs.google.com/document/d/1s5u-4bw_hwKmhtpPA6pAalNF5Km91mLmdwMkxAUA1AE/edit?usp=sharing) to find the activities that interest you. Feel free to leave your name and join us on time!
Opt-in / 參加者：
petertc petertc.chu@gmail.com / telegram: https://t.me/petertcdotchu
(add your name here! 在這裡簽上你的大名)
=======
LINE Beacon 是 LINE 所提供的追蹤工具，可以讓你透過藍牙追蹤使用者有沒有在 LINE Beacon 附近，並且還能讓你透過 LINE 免費回傳訊息給使用者。這個議程將會帶你認識 LINE Beacon 的相關技術細節，以及大量建置 LINE Beacon 的經驗分享。
=======
Raspberry Pi is now recovering from its semiconductor shortage issue by COVID-19. However, it is still tough to get it, and we are still wondering if Raspberry Pi benefits our business.
Masafumi will discuss Raspberry Pi's current status and how to do business with Raspberry Pi, reviewing the 'Cutie Pi,' a Taiwanese Raspberry Pi project.
=======
想必有想過要如何進行開源貢獻的人，多少都有煩惱過要如何踏出第一步吧？<br>
在議程中，我會分享我在社群中觀察到困難點<br>
並講述我從開始玩 Side Project 到 實際開始貢獻開源的過程與心態上的轉變
議程會講述我從一開始不太寫 Code 到逐漸跨出舒適圈的過程
並希望我能把自己變得 "開放" 的思維傳遞給各位
(註: 議程本身不會討論到太哈扣的議題，歡迎各位來聽我的分享)
=======
The need for efficient and scalable data management and messaging protocols in distributed systems and IoT applications has become increasingly important in recent years. [Zenoh](https://zenoh.io/) is a new open-source protocol that addresses these issues by providing a lightweight, efficient, and scalable solution.
It takes a data-centric approach to communication, which focuses on the data itself rather than the location or identity of the devices producing or consuming the data.
Moreover, Zenoh is built on **Rust**, a systems programming language known for its high performance, security, and reliability. Rust's unique features make Zenoh a fast and robust solution for managing and processing data in distributed systems and IoT applications.
In this talk, we will explore the architecture and features of Zenoh and discuss real-world use cases.
=======
聊天機器人可以幫助農民什麼事? 直接讓農業銷售人員來講，簡單又暴力的內容，歡迎大家來聽聽。
此議程以對談交流方式進行，由主持人提問、講者回答，現場亦開放提問與討論。
=======
單元測試能夠讓你的程式碼變得更強健，但是在非同步任務的範疇內，測試變得不太容易，因為任務會在不同的 Thread/Coroutine 上運行，而任務完成的時間可能會不一，根據不同的完成時間，可能會產生不同的測試結果。
那麼要如何測試 Kotlin Coroutine 呢？
Kotlin Coroutine 函式庫內包含了 kotlinx-coroutine-test 類，在這裡面包含了許多針對 Kotlin Coroutine 所提供的方法。利用這些方法，我們就可以寫出簡單、易懂的 Coroutine 單元測試。
=======
可升級功能在智能合約開發是相當重要的功能，許多項目都有添加此功能，以此避免已部署合約出現漏洞時，無法進行修正的狀況。
此活動主要目的在於講解可升級智能合約，了解不同的實作方法的優缺點、背後原理、安全問題等等，適合有基礎智能合約開發經驗的人，會牽涉到 Transparent、UUPS、Beacon 等不同的升級模式，還有 proxy 背後原理，以及 openzeppelin upgrade 套件使用。
=======
你有踩進 apache 設定檔的坑浪費了好幾個小時，卻還是沒辦法有效設定反向代理伺服器的經驗嗎？或是你有被 zerotier 的裝置上限阻礙你發展你的 IoT 網絡嗎？作為一個以興趣驅動的網頁開發者，我便把在工作時遇到的各種常見的技術問題和需求整合成一套簡單易懂的開源系統 - Zoraxy。讓只有基本網絡知識的使用者都能夠輕易設定自己的 homelab 集群~
因為興趣驅使，幾年前我開發了一套屬於自己的分散式網頁桌面作業平台。隨著我的伺服器節點的增加，我決定為集群添加一個用 Go 語言開發的反向代理伺服器程式，以便更輕鬆地透過個人 domain 連接所有伺服器，而此程式就是 Zoraxy 系統的原型。
經過 2 年的開發，此系統目前擁有許多適合新手的網絡工具，包括 subdomain 及 virtual directory 的 反向代理、重定向工具、Geo-IP IP 和黑名單、基於 Zerotier 的（GAN）控制器、Uptime Monitor、Web SSH 和訪客流量分析等工具。而最近我終於把這系統界面重新設計並開源，希望可以幫助到更多對部署 homelab 有興趣的人。
這次演講中，我將簡單講述此工具的演進過程以及在使用 Go 開發的經驗如何影響了此項目的發展。
另外我還將分享一些 Zoraxy 有用到的開源 Go 項目，以及簡單講解 Zoraxy 如何使用 ZeroTier 實現跨網域反向代理透過 Virtual Global Area Network，等其他功能。
=======
We often use mock behaviors to optimize our unit test, so what is the operating logic behind these mock objects and related functions? Let's find out together!
1. Basic usage of Mockery
2. Create mock objects
3. Stub
4. Method Call Expectations and Spy
=======
你曾在疫情間用社群志工們做的「口罩地圖」買到口罩嗎？數發部唐鳳部長常常說，「仰賴『開源社群』的建議，優化了我們領三倍、五倍券及普發 6000 元的系統」，到底這個「社群」是什麼、這些「志工」又是誰、又有哪些魔力可以辦到這些呢？而還有哪些社群還做了那些有趣的事情呢？透過【開源星手村：桌遊體驗工作坊】讓你在遊戲中體驗到「社群」的魔力，認識其背後協作的機制，歡迎組隊、單獨報名桌遊工作坊，報名由此去：[https://i.coscup.org/OCFStarGame/CSO](https://i.coscup.org/OCFStarGame/CSO)
=======
CUDA is the dominant language for parallel programming on GPU architecture, though other GPU programming languages, such as OpenCL and OpenMP exist. However, its use has been largely limited to NVIDIA devices, leading to recent efforts to enable its use on other platforms, such as CPUs and AMD/Intel GPUs. We aim to extend the reach of CUDA to RISC-V systems.
=======
工程師們都知道寫測試很重要，但寫測試的過程也許會有點無趣（或不知道怎麼寫？）。跟其它的測試套件或框架相比，Pest 是個相對年輕的測試框架，但在國外的 PHP 社群的討論度越來越高。Pest 提供了簡單且語法豐富的測試框架，可以寫出可讀性更好或更容易維護的測試程式碼。
讓我們一起開開心心寫著寫測試，看著你的程式碼一邊微笑 :)
=======
In this talk, we delve into the realm of large language model-powered autonomous agents, the newest AI wave revolutionizing digital and physical interactions. Through examples of open-source projects like AutoGPT and BabyAGI, we will unravel the innovative aspects that make these agents stand out, including their prompt engineering techniques, memory system design, and the external toolset they use to augment their capabilities. 
We will discuss their implementation, potential benefits, risks, and the ways in which open-source community can tap into their potential. This session aims to provide a comprehensive introduction to LLM-powered agents. Come join this exciting discussion about the anatomy of autonomy, which may define or destroy our future!
Outline of this talk:
1. AutoGPT
2. BabyAGI
3. Generative Agents: Interactive Simulacra of Human Behavior
4. How can we help improve autonomous agents
5. Risks and opportunities in autonomous agents
The world of AI is transforming with the emergence of autonomous agents, and this talk aims to provide a comprehensive understanding of this exciting development. Autonomous agents, such as AutoGPT and BabyAGI, have captured the imagination of the AI community, bringing a new level of interactivity and learning to AI systems.
We will delve into what sets these agents apart from traditional large language models (LLMs). By running in a self-directed loop, augmented by a light prompting layer and some kind of memory persistence, they offer a new dimension of interaction. Their architecture varies, with some focusing on task prioritization and others taking a conversational roleplaying approach, demonstrating their potential use in a variety of applications, from personal assistants to automated marketing teams.
The talk will also delve into how these autonomous agents are implemented. We will walk through the simple yet powerful architecture of AutoGPT, which runs on a recursive loop, and can write executable code on the fly. We will also explore the concept of action spaces and how the open-source community can expand these to allow the agents to perform a wider array of tasks.
However, these autonomous agents are not without their challenges. Currently, they excel in proposing solutions but often falter in execution, especially in unconstrained environments. We will discuss the ongoing research and potential solutions to overcome these limitations, such as implementing a better architecture for memory and task selection/action prioritization.
Despite these challenges, the potential benefits of these agents are immense. Their ability to handle complex tasks, reason, and learn from their actions can revolutionize the way we interact with AI. However, it also poses certain risks, such as potential misuse, and the talk will also discuss on these aspects.
The session will conclude with a discussion on leveraging the capabilities of these autonomous agents. We will explore how they can be integrated into different sectors, and how the open-source community can contribute to their development.
Join us in this talk as we explore the world of autonomous agents, a step towards a future where AI is not just a tool, but a capable assistant that can learn, plan, and execute tasks with minimal human intervention.
=======
隨著 108 年課綱的修訂，「科技資訊與媒體素養」列入核心課程，但偏鄉的師資缺乏，如何真的導入資訊教育？教學現場有少數的成功，也有不少挫敗，我們究竟要如何促進資訊教育的平等呢？
隨著資訊成為兒童和青少年的必須知道的素養之一，但各國小導入的資源隨著區域的發展卻有著嚴重不平均的現象！青少年對於工程師的爆肝形象又或是數理資優的刻板印象無法真正消弭，那我們到底要怎麼幫助偏鄉學子扎起資訊教育的根呢？五倍學院是如何攜手博幼基金會，成為照亮孩子未來職涯的光？
講綱：
- 讓偏鄉學子知道什麼是工程師和工程師的分類
- 如何幫助偏鄉學子認識資訊產業
 -  安排達人分享活動
- 如何讓資訊教育在偏鄉扎根並開花
 -  安排師訓和教學活動
- 五倍和博幼基金會的期許
=======
1. Brief introduction to Sui Network (2 mins)
2. DAG and Object-centric architecture (10 mins)
3. Move language and its main features (10 mins)
4. Sui-Move: the advanced Move language (10 mins)
5. Sui-Move code and Sui CLI example (13 mins)
1. Sui is a smart contract platform that offers ease of development, fast transaction speeds, a sane object model, and better security. It has a native asset called SUI, which serves four purposes on the Sui platform: staking, paying gas fees, versatile and liquid assets for various applications, and governance. Sui also includes an efficient and sustainable economic mechanism for pricing data storage.
2. Sui is a distributed ledger that stores a collection of programmable objects, each with a globally unique ID. Every object is owned by a single address, and each address can own an arbitrary number of objects. The ledger is updated via a transaction sent by a particular address. A transaction can create, destroy, and write objects, as well as transfer them to other addresses. Sui calls the consensus protocol only for transactions affecting objects owned by multiple addresses. This means simple transactions complete almost immediately.
3. Move is a programming language for writing safe smart contracts originally developed at Facebook to power the Libra blockchain. Move is designed to be a platform-agnostic language to enable common libraries, tooling, and developer communities across diverse blockchains with vastly different data and execution models. Move's ambition is to become the "JavaScript of web3" in terms of ubiquity--when developers want to quickly write safe code involving assets, it should be written in Move.
4. Sui Move differs from Diem Move in several ways, including the fact that Sui uses its own object-centric global storage, addresses represent Object IDs, Sui objects have globally unique IDs, Sui has module initializers, and Sui entry points take object references as input.
5. Sui CLI is a tool to interact with Sui Network and we’ll use CLI to split and merge SUI coins after navigating Coin Module of Sui Framework.
=======
使用爬蟲截取網頁上的資訊已是常見的資料處理技術。由於數據分析的盛行，市面上的教學大多以 Python 示例。但其實剖析爬蟲技術的核心，坐擁 JVM 生態系的 Kotlin 也能輕鬆辦到。在這場分享裡，將會以 Kotlin 爐邊漫談 Podcast 節目製作組需要統整各平台聆聽數的需求為例，說明如何使用 JVM 生態系的解析套件及爬蟲框架抓取目標資料並整理儲存至資料庫。另外，也會針對不同的資料格式來源、定時排程等延伸主題進行討論。聽完這場分享後，Kotlin 初學者也能快速上手，快速成為爬蟲擷取能手。
預計分享大綱如下：
* Kotlin 爐邊漫談 Podcast 的故事
* 需求分析
* 探討爬蟲技術核心
* 以 Kotlin 實作爬蟲原型
  - 探索可用套件
  - 抓取 Raw 資料
  - 轉成資料模型
  - 存進資料庫
* 更進一步
  - 關於資料格式
  - 定時運行
* 總結與回顧
=======
身處資訊社群中，我們往往會不經意的試圖自動化許多流程——從工作分配的方式、會議時間的敲定、工作人員的招募與財務報支，有太多行政手續是可以用電子化表單甚至系統取代的了。然而在追求便利、統一、效率的同時，我們又交換掉了什麼呢？這場議程將會用類似讀書心得分享的方式，跟大家談談對數位系統自動化的反思與過程中應當納入考量的各式正當程序 (due process) 保障。
身處資訊社群中，我們往往會不經意的試圖自動化許多流程——從工作分配的方式、會議時間的敲定、工作人員的招募與財務報支，有太多行政手續是可以用電子化表單甚至系統取代的了。然而在追求便利、統一、效率的同時，我們又交換掉了什麼呢？這場議程將會用類似讀書心得分享的方式，跟大家談談對數位系統自動化的反思與應當考量的正當程序保障。
=======
We are Boledu Foundation. Our missions are (1) Target and Extend the Google Open Source Silicon program and (2) to Design hands-on lab materials for training, (3) Promote IC education.
For the Caravel Harness, We have developed a Caravel FPGA validation platform. In addition, we also develop a software debugging framework which includes GDBWave, and a Riscv-Tracer to facilitate the verification process. The GDBWave parses the waveform after RTL simulation to manipulate GDB debugging with VexRiscv CPU. The Riscv-Tracer helps to translate waveform display to Riscv instructions representation.
The Caravel FPGA validation system enables users quickly prototype their user project design on the Xilinx PYNQ board. In addition, the FPGA design and hardware bitstream can be developed using the Vitis tool free from Xilinx, Then be validated on Boledu online PYNQ board with Jupyter Python3 testbench.
=======
Firebase提供了一個全面而強大的後臺解決方案，可以幫助GDG Taiwan社群組織者有效地管理和運營社群，促進成員之間的互動和合作，同時提供詳盡的數據分析，以優化社群的發展和成果。
在建構GDG Taiwan社群後臺方面，Firebase提供了強大的解決方案。首先，Firebase的身份驗證功能可以輕鬆管理社群成員的註冊和登錄流程，確保只有授權的用戶可以訪問社群的後臺系統。
其次，Firebase的實時數據庫和雲端存儲功能使得社群能夠有效地存儲和共享資料。這對於社群成員之間的合作和資訊交流非常重要，同時也有助於組織者在後臺系統中追蹤和分析社群的活動和成果。
=======
一般播放PowerPoint簡報時都需要一組無線遙控器來控制播放下一頁動作，這裡使用運動手勢就能代替簡報遙控器。主要使用Seeed Xiao nRF52840 Sense(Arduino Nano33 BLE Sense同級產品）作成類似運動手環裝置，並利用開發板上的運動感測器及Edge Impulse TinyML雲端開發平台來訓練運動手勢模型，最後產生Arduino源碼，手動整合BLE HID功能，就能以手勢變成電腦上的按鍵按下，藉此來控制簡報播放。
Seeed Xiao nRF52840 Sense和Arduino Nano33 BLE Sense開發板上的主晶片都是Nordic nRF52840(Arm Cortex-M4)，具有BLE功能，很適合TinyML應用。前者體積較小，只保留數位麥克風和6 DOF運動感測器，並增加了鋰電池充放電管理IC，所以更適合用來製作成運動手環或穿戴式智能裝置。本次開源分享項目就是以Xiao nRF52840 Sense這片開發板來製作一組運動手勢簡報遙控器，使用Edge Impulse TinyML開發平台收集運動感測器資料並訓練模型，最後整合其BLE HID功能模擬成為一個遠端鍵盤，代替簡報播放工作。
=======
Share my views on verilog coding paradigm
There are many different kinds of programming paradigm such as high-level coding and low-level coding. Verilog is another kind of paradigm, this talk will bring an introduction how coding in Verilog looks like and help audiences to jump start on it.
=======
读 MobX 源码，手写实现最基础最核心的 observable 与 observer
=======
理解 MEV 的五個階段：
1. 否認
2. 憤怒
3. 討價還價
4. 沮喪
5. 接受
你在哪一個階段？
從 Flashboy 2.0 論文出來，到 Gas War 越來越少，再到現在，MEV 生態發生了什麼變化？MEV 問題變得更好還是更壞？有什麼機制能帶領我們遠離區塊鏈的反烏托邦平行宇宙 - 由大型 MEV 企業把持 PoS Validator，任意榨取使用者 MEV、審查使用者交易？
=======
當我們有提供複數個相似專案的需求，    
又不想要同時維護數個專案，    
於是我們使用 Monorepo 來減少程式碼的變更。    
希望此次分享，讓聽眾透過實務認識 Monorepo:
1. Why do we use Monorepo as a management approach?
2. How to build a Monorepo project with Lerna?
3. Monorepo application in DevOps platform
=======
我從去年開始做了一個 RFID 資產管理 Android/iOS app，用來解決個人物品以及工作室工具、材料的清點以及尋找等困擾。尤其在搬家前後、儲藏室內物品皆是裝箱狀態時，可以透過 RIFD 訊號較快的找到指定的物品。此外，在日常找鑰匙、旅遊時快速檢查行李是否帶齊等狀況下也可以使用，可能的使用情境有：
居家尋物：找鑰匙、找錢包、找遙控器、找行動電源、找充電線⋯⋯
旅遊：快速檢查行李是否帶齊、是否有遺失。
公司資產管理：快速檢查公司資產是否歸位、有沒有東西遺落在案場。
盤點：使用 RFID 讀取機掃過櫥櫃、收納箱、倉庫儲位，即可快速記錄物品所在位置，方便日後查詢。
  詳情見 (兩個內容幾乎一樣，挑慣用的平台閱讀即可)：
https://www.facebook.com/pokaichang72/posts/pfbid02WRi49mfsSmJBHdkrVAhPvCLrxb5gYpqcER2rbXxJztnkGzxdakkA5HVGDeExBtp1l
https://twitter.com/zetavg/status/1667540233246879744
此 app 目前還未公開上架，使用上會有硬體成本的門檻 (RFID Reader 一台台幣一萬左右、RFID Tag 一張台幣兩塊或以上)。
有朋友有興趣的話，可以來體驗看看，或聊聊技術限制、想解決的問題、可能的 open source 開發方向等等～
Hacking Room (Day 1)
Hacking Room 是一個能容納 30 人左右的交誼廳，供會眾自由交流！在這裡，我們不會限制你的活動長度；你可以在議程與議程間的空檔三五好友打十五分鐘的桌遊，也可以和志同道合的開源夥伴進行兩小時的衝刺開發，可能會有多個活動在這個空間同時發生，要怎麼運用這個自由空間由你決定！
The hacking room is a free space for casual gatherings, which can hold up to 30 people. There is no time limit in the hacking room. You can play card games with friends for 15 minutes between talks or run a two-hour open-source sprint here. Also, multiple events are available at the same time. It is all up to you!
–
如果你想要揪人參與在 hacking room 舉行的活動，歡迎在[此文件](https://docs.google.com/document/d/1s5u-4bw_hwKmhtpPA6pAalNF5Km91mLmdwMkxAUA1AE/edit?usp=sharing)登記宣傳！
想參加活動的會眾也可以在這份文件找到有哪些有趣的活動正在發生！
Share your event [here](https://docs.google.com/document/d/1s5u-4bw_hwKmhtpPA6pAalNF5Km91mLmdwMkxAUA1AE/edit?usp=sharing) to invite other attendees to join in!
=======
COSCUP 2023 年，我們到了各地與其他的開源社群活動交流，包含 FOSDEM, FOSSAISA, OSC Nagoya, HKOSCon。
在這些活動中，我們吸收到了各國的文化，也希望可以將這些心得分享給大家！
=======
注意：演講sī用臺灣台語來講
Tī 早期 ê 時陣，Wikidata 主要處理 WIkipedia 迒語言連結，較無人關心 Wikidata 本底 ê 項目之間 ê 連結。毋過這馬因為社群拍拚勞力，Wikidata 變 khah 大包括 ê 範圍較闊，加添 koh-khah 濟 ê 聲稱 kah 第三方資料庫 ê 連結，m̄-sī kan-na Wikipedia 文章抑是 Wiki Commons 濟媒體 niā-niā。我 ē 分享 Wikidata tī-teh 臺灣處理臺灣政府 ê 開放資料平台 ê 資料集 kah 群眾共編 ê 資料集 ê 經驗，尤其 sī Wikidata kah OpenStreetMap 臺灣社群合作的事項。
Important: the talk will be presented in Taiwanese Hokkien
In the early days, Wikidata's main purpose is dealing with crosslink Wikipedia articles to different language versions of Wikipedia. Now due to the community effect,  Wikidata has expanded its capacity to add more statements and links to more third-party databases, and not only just links to Wikipedia articles. I will talk about the Wikidata experience in Taiwan of procession datasets from the Taiwan government's open data platform, and crowd-sourcing platform, especially emphasis on working with the OpenStreetMap Taiwan community.
注意：演講sī用臺灣台語來講
這場演講希望 tuì Wikidata kah OpenStreetMap 攏 ū 小可仔了解 ê 人來聽，以早社群 kan-na 用 Wikidata 處理 Wikipedia 迒語言連結，毋過 Wikidata 擴大影響，變成收錄真濟第三方資料庫編號kah連結。我 ē tuì 臺灣社群處理溪流、村里、學校、NSI-index，甚至 sī 墓仔埔資料，一个一个講清楚，說分明。
Important: the talk will be presented in Taiwanese Hokkien
I hope the attendees will have some basic knowledge of both Wikidata and OpenStreetMap. In the early days of Wikidata, it is only used for crosslinking between language versions of Wikipedia. Nowadays Wikidata is expanding, including more and more third-party database IDs and links. I will talk about Taiwan's experience of dealing with rivers, villages, schools, NSI-index, and even cemetery dataset
=======
Wikidatacon 自 2017 年在德國發起，是目前全球最大型以 Wikidata、Wikibase 為主軸的國際雙年會，在 2022 年臺灣維基數據社群偕同台灣維基媒體協會爭取到主辦權，今年度的會議將會在臺灣舉辦！
Wikidatacon 自 2017 年在德國發起，是目前全球最大型以 Wikidata、Wikibase 為主軸的國際雙年會，在 2017 、 2019 都在德國舉辦後，2021 年首次移師到巴西舉辦。
在 2022 年臺灣維基數據社群偕同台灣維基媒體協會爭取到 Wikidatacon 主辦權，今年度的會議將會 10/28 - 10/29 在臺灣主辦，並同時也會有線上參加的場地供全球的夥伴共同參與。
本議程將會向各位夥伴簡介什麼是 Wikidatacon 以及如何投稿 Wikidatacon，還有更重要的是 Wikidatacon 將會有什麼樣的活動，可以如何報名及參與都在本次的內容中！
=======
Main focus of this talk is the SG13G2 Open Source PDK for IHP 130nm BiCMOS technology. One year ago, it was announced that IHP will publish an open source PDK for its SG13G2 technology. Since this is a long-term project, the current state will be presented. This includes the experiences and a road map for future work. The already known challenges and open issues will be addressed. Finally, an overview about multi-project wafer offer of IHP will be given.
=======
1. 開放原始碼軟體中文化與公民科技發展，探討軟體中文化如何促進公民科技的發展，並進一步探討公民科技如何改善社區發展，進而推動開放原始碼的應用。目前數位發展部民主網絡司公民科技科以透過專案合作中文化：GOV.UK Notify、GOV.UK Forms、IRMA、Element Series、Standard for Public code。
2. 技術挑戰：如何克服技術上的挑戰，讓開放原始碼軟體能夠，更容易地進行中文化，例如翻譯校閱流程、語意品質維持、語言檔的管理等。
3. 應用與推廣：如何將開放原始碼軟體中文化的成果應用於更多領域，例如教育、政府機關等，並透過推廣，提高公眾對開放原始碼軟體中文化的認知和理解。或是資訊系統契約內規範廠商使用開放原始碼建置系統，由公部門做起讓更多人能主動去使用開放原始碼。
備註：本議題由數位發展部民主網絡司公民科技科主講。
=======
金融業的資料庫中，累積了巨大的資料量，就單單以信用卡為例，本行截至 2023 第 1 季，流通卡數達到了470.1 萬張，加上我們其他產品線業務，可以想像是一項巨大的數據處理工程。作為 AI 部門的 PostgreSQL 資料庫管理人員，我們致力於以系統面向的角度來提升服務效能。
In the database of the financial sector, a vast amount of data has been accumulated. Take the number of credit cards as an example, our bank has reached a circulation of 4.71 million cards as of the first quarter of 2023. When combined with our other product lines, it can be imagine as a massive data processing . As the PostgreSQL database administrator in the AI department, our goal is to enhance service performance from a system-oriented perspective.
為了更深入探討這個議題，我將進一步探討 PostgreSQL 底層資料處理的概念以及需要注意的事項。同時，分享如何解決和優化資料科學家們在 SQL 中遇到的效能瓶頸，這裡整理了幾個 SQL 執行中常見的情況和可解決的方案，並提供一些實用的 PostgreSQL 資料庫技巧，這些技巧能夠幫助你在面對大量資料時，保持 SQL 程式碼的執行效率，期待與您相見，交流彼此的經驗心得。
To delve deeper into this topic, I will discuss the concepts and considerations of data processing in PostgreSQL. Additionally, I will share how to solve and optimize the performance bottlenecks encounter by data scientists in SQL. Here, I have compiled several common scenarios in SQL, and provided some practical PostgreSQL database tips. These tips will assist you in maintaining the execution efficiency of your SQL code when dealing with large volumes of data. I look forward to meeting you and exchanging our experiences and insights.
1. 系統 wal log file IO 調教：認識你的資料庫架構，找出問題
2. 如何運用 Explain 找出 PostgreSQL 執行瓶頸
3. PostgreSQL 進階功能提升效率：index、partition、analyze
4. 其實不是你 SQL 的問題，是不是資料表太多垃圾? 運用 vacuum
=======
利用 AI 驅動的解決方案和社群協作來填補維基百科的語言差距。介紹基於 GPT-4 的多語言工具以簡化翻譯和文章改善流程。討論跨語言協作策略以及 AI 對於無障礙、公平的全球知識分享的影響。
（AI 的人類奴工詢問 ChatGPT 有什麼想要在 Wikimania 分享的內容，而這就是它的提案。而在前往新加坡之前，我們先到 COSCUP 分享）
這場 10 分鐘的演講，將聚焦於利用人工智能與社區協作，來跨越維基百科的語言隔閡，提升在其多語言版本間的可取用性與公平性的觀念。
我們將先簡短地討論在維基百科各種語言版本間存在的文章質量和數量的差異，強調需要有效的工具和協作方式來解決這些問題。
接下來，我們將介紹一款基於 GPT-4 的多語言翻譯和擴展工具，該工具能夠幫助編輯者更有效地翻譯和改進文章。這種創新工具利用先進的自然語言處理和機器學習演算法，來生成高品質的翻譯和內容建議，簡化了跨語言的編輯流程。
我們將探討如何培養跨語言的維基百科社區協作策略，強調將編輯者跨語言連結起來以促進意見、資源和最佳實踐的交流的重要性。透過培育這樣的協作努力，我們可以朝向一個更具包容性、多元性和可取用性的維基百科知識庫邁進。
我們將以簡短的概述來介紹 GPT-4 多語言工具的功能和能力，並提出一些有效且負責任地將其融入編輯流程的建議，而不進行現場示範。
最後，我們將著重於 AI 驅動工具對維基百科未來可能產生的影響，強調持續創新和協作在創造一個更具可取用性和公平性的全球知識分享平台上的重要性。
=======
COSCUP 作為臺灣開源的盛會，但我們在做設計時，常常被那些商用軟體給綑綁。又我們常常不經易的狀態下使用了商業的圖庫，在這樣的 Open 的社群文化之中我們實在格格不入。在 2018 擔任行銷組組長時受前總召 Bob 提醒之下開始了ㄧ個整理各種 COSCUP 用過的素材、作品的工作，當時即期待如著作權無疑慮的圖、原始檔案可以都公開，中間一度整理到一半棄坑。
到了 2023  年又突然重拾這計畫，但契機在於怎樣讓大家更快速不要被 Adobe 綁住一定要在電腦前才能出圖，因而試著用 Canva 整理了一下本年度素材做成框，既然做成框了就做成樣版吧！既然做成樣版了，就再順便公開ㄧ下吧！這議程會分享這個過程，還有ㄧ些之前在整理時公開前曾經討論過，及有些年很可惜的不能以 CC 授權公開釋出這些素材我們卡住的地方，期待未來 COSCUP 的素材都公開出來後，能長出更加多元的宇宙。
=======
Django 是一個開源的 Python 後端框架，用於構建強大的 Web 應用程式。在進行前後端分離的開發中，我們通常會使用 Django REST Framework（DRF）來擴展我們的 Django 應用程式。DRF 是一個功能豐富的框架，它在視圖層提供了多種封裝完善的類別，讓開發者可以輕鬆地構建出高效且具有彈性的 API。透過 DRF ，我們可以實現身份驗證、序列化、分頁、過濾等常用功能，大大簡化了 API 開發的複雜度。這次的議程將帶領大家深入了解不同種類的視圖寫法，讓我們能夠更好地利用 DRF 來開發強大的 Web API。無論是初學者還是有經驗的開發者，都可以從這次的議程中獲得寶貴的知識和技巧，進一步提升在 Django REST Framework 上的開發能力。
Django 是一個開源的 Python 後端框架，在進行前後端分離時，會額外安裝 Django REST Framework 在我們的原始 Django 應用程式上，讓開發者進行 Web API 的開發，但各位知道嗎 Django REST Framework 在視圖上提供了多種封裝完善的類別供開發者進行使用，在 Django REST Framework 提供的視圖工具中我們搭配使用在 Django 中方便應用程式對 JSON 資料進行的打包與封裝的 Serializer 進行序列化與反序列化，短短 10 行視圖的 Python 程式碼也許能夠幫助你完成 C R U D 的資料操作，在這個議程中會使用開發 Todolist API 的方式讓你認識各種 CBV(Class Based View) 有 APIView，ViewSets，Mixin 及 GenericAPIView 的基本關係與實作方法。
本次演講的主要內容將包括以下幾個部分：
1. 介紹本次議程專案與環境建置
2. 介紹 Class Based View 族譜
3. 逐一介紹 APIView、ViewSets、Mixin、GenericAPIView
=======
探討 ChatGPT 在開放資料領域的案例研究以及與 Wikidata 的整合應用。首先，介紹目前使用 ChatGPT 應用於公開資料集、開放街圖 、維基百科的查詢。進一步嘗試在 ChatGPT 與 Wikidata 的整合可能姓。
=======
VSCode is one of the popular development tools.   Do you know there is a MySQL Shell plugin with VSCode.   It provides a easy to use Notebook interface to work with MySQL Database, to work with Oracle Cloud Infrastructure (OCI) and MDS/HW.   Charting is also possible with typescript in Notebook.   We can also build RESTful Service for MySQL Database with VS Code.   We will share the MySQL Shell plugin with VS Code.
=======
封閉而中心化的社交媒體是當代社會的嚴重問題，我們的個人資料、我們的關係網絡都被壟斷在一些不可信任的大型商業公司手中。但這一趨勢有打破的可能，在馬斯克掌控Twitter後許多人選擇的新社交站點——長毛象Mastodon——就是一個優秀的去中心化開源方案。而長毛象如何實現去中心，背靠的是ActivityPub協議。甚至，依賴該協議，長毛象Mastodon還可以和其它實作了該協議的個人部落格、音樂分享工具、論壇、影片分享網站產生社交連結，具有形成一個聯邦宇宙Fediverse的潛力。
這次演講內容就將帶你走進ActivityPub的世界。內容涵蓋兩個主要部分：（1）ActivityPub協議的基本概念、核心元素。（2）用Python或任何你熟悉的程式語言實作基礎方法，讓你可以擁有基本的社交帳號，可以進行發文、關注，讓你連結到聯邦宇宙！
近十年，社交媒體依靠着互聯網的開放、連結優勢迅速擴張，成為現代生活中不可或缺的一部分。雖然大部分社交平台提供了便捷的互動方式，但它們幾乎全部都是封閉且中心化的。你無法完整下載自己的個人資料，你無法將自己的社交網絡從站點打包帶走，甚至，你連自己書寫的內容都有可能被平台無理由刪除。社交媒體平台成了壟斷者，開放互聯網理想的敵人，當然也是開源理念的敵人。於是，一些開放標準與協議應運而生，讓人們可以自由使用不同開源平台，並且讓這些開源平台間可以順利互動。其中，由 W3C 在 2018 年起草的 ActivityPub 協議是目前最成熟的一支。實作了此協議的長毛象 Mastodon 社交網絡截止 2023 年 5 月 2 日已經有 9500 個站點，120 萬活躍用戶。
本次演講首先將簡要介紹 ActivityPub 協議的定義、歷史及發展。 ActivityPub 是一個分散式社交網路協議，目的是實現不同平台/站點/實例之間的互動與連結。接著，我將探討 ActivityPub 協議的核心概念，包括 Actors（角色）、Objects（對象）和 Activities（活動）。Actors 是協議中代表使用者或服務的實體；Objects 是用戶間互動的主要內容，如文章、圖片等；而 Activities 則描述了 Actors 對 Objects 所採取的動作，例如發布、回覆等；此外，我還會介紹 Inbox 和 Outbox 的概念，它們分別表示用戶接收和發送訊息的容器（但通常開源應用不一定完整實作 Outbox)。
在基礎實作範例部分，我將介紹如何實作一個簡單實例，展示如何用 Python 建立基本的 Actor、創建及發送 Activity 和 Object 。當然，也會實作 Inbox 的處理流程。這樣可以完整實現社交媒體賬戶的基本功能，包括追蹤、按贊、留言、接收新動態等。這樣可以讓參與者不僅知道 ActivityPub 協議的原理，也可以在自己的開源應用中加入 ActivityPub ，讓更多開源應用可以向社交媒體一樣互動起來，真正朝向實踐聯邦宇宙的目標前進！
ActivityPub 協議簡介 (5分鐘)
1. ActivityPub 協議的定義
2. ActivityPub 的歷史及發展
3. 如何應用於社交網路及開源應用
ActivityPub 協議核心概念 (10分鐘)
1. Actors（角色）
2. Objects（對象）
3. Activities（活動）
4. Inbox 與 Outbox（收件箱與寄件箱）
基礎實作範例 (15分鐘)
1. 建立基本的 Actor
2. 創建及發送 Activity 與 Object
3. 實作 Inbox 與 Outbox 的處理流程
4. 示範如何建立互動，如：追蹤、取消追蹤、發布動態等
=======
开源社区是最左脑的“技术”，也是最右脑的“社区”，开源成功离不开社区合作和跨文化合作，那么对于文化的理解，对于别人的表示的理解，就是我们很值得关注的领域了。本论坛会针对开源社区的跨文化交流，做一些道法术的探讨。
=======
OpenAI泛指利用生成式人工智慧，來產出程式碼、影像、文字等各類應用，並採開放式近用的方式提供服務。然而，從上游的訓練素材，有取用他人素材的侵權爭議，例如GitHub Copilot；而從素材生成的中游，有相關產出得否主張創意保護的著作權適格爭議；而從產出應用的下游，有模組授權拘束規範的排除要求，本講座將綜合探討這些爭議問題，並從智財權的基礎框架，及AI監管法令，開放AI模組授權的分析，來引導聽眾學習並進一步掌握相關基礎知識。
=======
農業屬於多領域的結合，又或者說，農業帶有著不同領域的基礎展開，屬於人類文明最早的一環，從一般正式書面資訊、開放資料及資料於社群應用，至今也產生了許多不同的工具和成果，本次的主題透過某個數年規劃的資訊平台獲得的結果和心得，嘗試描述農業資料開放的應用以及碰觸到的各種情景，看見的是優點?是缺點?是好處?是壞處?究竟講的平台提供什麼服務?建置平台的過程又是從哪邊想到的構思?和遊戲有關?和過去傳說的PDIS有關?再次出現的超農域，再次說著農業資訊平台構思過程中，許多有的沒的天馬行空和鼴鼠鑽地。
講者嘗試再次打開自己的腦洞，但不確定腦洞是否足夠裝下農業知無領域的資料，再次出現的臭臭的克洛格果實又能種出什麼?其實講者都不知道。💪🤪🌻🌷🌱🌦🍏🍎🍐🍊🤤🤮🧩🧩🧩
=======
In this event, I plan to share various topics related to the AI/ML platform we developed and its application in 5G ORAN architecture. Our goal is to automate, data-driven processes and intelligent systems. To achieve these goals, our discussions will span platform design and data collection, training, inference and deployment of end-to-end AI models.
=======
你曾在疫情間用社群志工們做的「口罩地圖」買到口罩嗎？數發部唐鳳部長常常說，「仰賴『開源社群』的建議，優化了我們領三倍、五倍券及普發 6000 元的系統」，到底這個「社群」是什麼、這些「志工」又是誰、又有哪些魔力可以辦到這些呢？而還有哪些社群還做了那些有趣的事情呢？透過【開源星手村：桌遊體驗工作坊】讓你在遊戲中體驗到「社群」的魔力，認識其背後協作的機制，歡迎組隊、單獨報名桌遊工作坊，報名由此去：[https://i.coscup.org/OCFStarGame/CSO](https://i.coscup.org/OCFStarGame/CSO)
「開源星手村」桌遊工作坊
=======
2022 年 9 月下旬，知名算法做市商 Wintermute 遭到攻擊，損失超過 160 百萬美元。在這次事件中，涉及到的是他們的一個熱錢包，由於 Profanity vanity 地址相關的安全漏洞而被攻擊。這次事件造成巨大經濟損失，目前損失排名在 rekt 是第十名，也在 Openzeppelin 發布的「Top 10 Blockchain Hacking Techniques of 2022」位列第二。
在這次的演講中，我們將對 Wintermute 事件進行全面的復盤，包括 Profanity 的漏洞以及如何利用這個漏洞來破解私鑰以及實作的一些優化。最後，我們將討論這次安全事件對整個生態系的影響。
=======
《大教堂与集市》一书对于“大教堂式“和”集市式“开发模式有了比较充分阐述和比较。此后，大家习惯将开源社区称呼为”集市“。
在这次分享中，将以小城镇的集市演变为切入点，探讨开源社区的一些问题。
The book "The Cathedral & the Bazaar" fully expounds and compares the development mode of "cathedral" and "bazaar". Since then, the open source community has been habitually regarded as a "bazaar".
In this sharing, we will take the evolution of the bazaar in small towns as a starting point to explore some problems in the open source community.
=======
中華民國《著作權法》第58條仿照日本著作權法，給予想像中「只限制一點點」的全景自由。然而正是那一點點，使得台灣的公共場所的影像難以進去開放授權的領域，也深深限制台灣影像在全世界被看見的機會。依2023年起台灣照片在維基共享資源大量受到挑戰移除經驗，說明不夠開放的一粒沙如何弄瞎了讓全球看見台灣的眼，以及尋求修法倡議上可能的挑戰。
=======
這場分享將帶大家了解實踐開源理念也可以是一個專業的正職工作。先在開頭帶大家看過國際大企業設立的開源辦公室有什麼職位？分別從事什麼工作內容？接著從這些開源辦公室的敘述中去探討企業在開源管理中應該做到什麼，才能實踐開源理念、做到合規授權條款、降低開源資安風險、提升企業與開源社群互動。後半段會透過開放文化基金會的經驗分享，指出台灣企業在開源管理上面臨的挑戰。這股趨勢昭示著台灣市場上有尚未滿足的開源管理的需求，正是開源人才發展職涯的一條道路！
開放文化基金會跟追開源合規（OpenChain）議題多年，發現台灣企業尚未跟上這個國際趨勢，且國外許多企業設有開源辦公室，專門處理企業內部的開源合規、資安、使用政策等開源管理機制。我們希望透過這場分享，與大家一起反思台灣企業可以怎樣實踐開源。同時也分享 OpenChain 這個需求逐漸興起，我們又是怎麼看待這個新興職涯的。
=======
AIoT 時代，如何讓微控制器等級的邊緣裝置做做數據分析？
我們將在本場次說明
* 從 IoT 到 AIoT 
* tinyML 介紹
* MicroPython 介紹
* 使用 MicroPython 收資料後以 tinyML 在 Raspberry Pi Pico 推論 [DEMO]
* 學習資源
使用 Raspberry Pi 或是 NVIDIA Jetson 系列產品開發機器學習應用不稀奇，因為這些開發板具有基本的運算力和記憶體，並且能安裝完整的 Python 環境和套件。
但如果想使用 MHz 的運算速度和 KB 的記憶體要做機器學習，該怎麼做呢？ 能不能快快樂樂的使用 Python 開發呢？
一般的機器學習流程會先收集好資料進行訓練，再將訓練完成的模型佈署到終端機台上，可以全程使用 Python 完成。
但在微控制器上還想用 Python 只能使用 MicroPython 進行開發。MicroPython 是在微控制器上運作的 Python3 直譯器，目前已支援超過 30 種 MCU，包括 Raspberry Pi Pico 使用的 RP2040。
我們將分享如何在低功耗的微控制器(MCU)以 MicroPython 收資料後，使用微型機器學習(tinyML)推論。我們採用 Raspberry Pi Pico 做範例。
以手勢識別範例來說，我們可以使用 Edge Impulse 雲端服務幫助我們從收集資料、訓練資料到建立模型，最後再根據範本佈署模型測試，本次會介紹整個流水線操作。
雖然一切看起來很美好，但因為目前 MicroPython 的 TensorFlow Lite Micro 只支援 OpenMV 和 Sipeed 兩類型硬體，因此使用 Raspberry Pi Pico 做機器學習的推論部份還是需要使用 C 來撰寫，因此題目稱為．半套。
=======
PyCon，亦即 Python 年會，是全球 Python 社群的年度盛會。PyCon Taiwan 今年已經來到第十二個年頭，從小型聚會發展成每年吸引 500 - 800 人的大型年會，籌備團隊也從 10 人成長至近百人。隨著舉辦規模增大，籌備過程中也遇到越來越多的挑戰。在這議程中，我們將介紹 PyCon Taiwan 2023 的活動內容，並探討籌備過程中可能遇到的挑戰和解決方案。此外，我們還將分享多人團隊的非同步溝通技巧和任務管理方式，協助社群有效協作。無論您是新加入籌備團隊還是有經驗的組織者，相信都能在這場演講中有所收穫。
籌備一場 Python 研討會，建立志工團隊、財務管理、場地選擇、提名與邀請 Keynote、徵稿審稿與選稿、贊助級別規劃與邀請、不同時期售票計畫、社群行銷方案、議程安排和參與者體驗，都是重要的一環。 而 PyCon Taiwan 經過多年的籌備，已有不少經驗累積 。 
在這場議程中，我們將介紹 PyCon Taiwan 2023 的活動內容以及社群團隊的籌備作法，從去年九月開始，帶大家一步步認識活動的成型過程，途中遭遇的各種難題以及我們的因應方式。 
想順利籌備年會？ 適當的時程規劃，非同步溝通技巧，文件與任務追蹤管理，團隊士氣與動力維繫是其中的關鍵。  我們也將分享這方面的經驗，讓聽眾了解如何有效地與幾十人的團隊進行協作，使籌備過程更加順利和高效。
最後，我們會聊聊籌備過程的收獲與教訓，面對溝通的摩擦、理念的差異，以及各種意外情況該如何應對。
無論你是剛剛加入籌備團隊，還是有經驗的活動組織者，相信都能從中獲得不同的思考和啟發。
=======
What's new in PostgreSQL 16
=======
歡迎開源社群在 COSCUP 期間舉辦 BoF 同好會！如果你想要預約 BoF 時段（每場次一小時），請至[此文件](https://docs.google.com/document/d/1s5u-4bw_hwKmhtpPA6pAalNF5Km91mLmdwMkxAUA1AE/edit?usp=sharing)閱讀注意事項並登記；同時，也歡迎在此宣傳場外自行舉辦的開源聚會！
想參加活動的會眾也可以在這份文件找到有哪些有趣的活動正在發生！
We encourage communities to hold their BoF meet-up during COSCUP. Book for your BoF (1 hr per session) and check up the notice [here](https://docs.google.com/document/d/1s5u-4bw_hwKmhtpPA6pAalNF5Km91mLmdwMkxAUA1AE/edit?usp=sharing), or promote your own BoFs during the weekend!
=======
本次分享機會探討如何以 Grafana 以及其生態系下的各開源專案如 mimir, loki, tempo, promtail, agent 等打造一個兼容 metrics/logging/tracing 三面向的監控平台。
此外也會分享其架構並且與常見的解決方案，如 Prometheus, Jaeger, Opentelemetry, ELK 等進行比較來理解使用 Grafana 全家餐的好處
=======
歡迎開源社群在 COSCUP 期間舉辦 BoF 同好會！如果你想要預約 BoF 時段（每場次一小時），請至[此文件](https://docs.google.com/document/d/1s5u-4bw_hwKmhtpPA6pAalNF5Km91mLmdwMkxAUA1AE/edit?usp=sharing)閱讀注意事項並登記；同時，也歡迎在此宣傳場外自行舉辦的開源聚會！
想參加活動的會眾也可以在這份文件找到有哪些有趣的活動正在發生！
We encourage communities to hold their BoF meet-up during COSCUP. Book for your BoF (1 hr per session) and check up the notice [here](https://docs.google.com/document/d/1s5u-4bw_hwKmhtpPA6pAalNF5Km91mLmdwMkxAUA1AE/edit?usp=sharing), or promote your own BoFs during the weekend!
=======
In today's world, where disability affects a significant percentage of the population, it is crucial for open source communities to address the challenges faced by persons with disabilities (PWDs) and work towards their inclusion. This talk will delve into practical measures such as referral programs, internal disability disclosures, and integrating disability into existing agendas rather than treating it as a separate issue. We will dive into disability mainstreaming with a focus on its role in promoting universal design and inclusivity. Attendees will gain insights into establishing disability mainstreaming committees, formulating action plans, implementing best practices, and monitoring and evaluating progress
This talk explores the challenges faced by persons with disabilities (PWDs) and presents effective strategies to foster disability inclusion within open-source communities. Globally, disability affects a significant portion of the population, resulting in high levels of unemployment and low community participation of PWDs. PWDs often find themselves limited to low-paying entry-level jobs, perpetuating inequality and poverty. Women with disabilities and individuals with intellectual disabilities, or multiple disabilities face even greater employment disparities. By giving them a chance as Open Source Communities we will be opening them up to several opportunities. 
The talk will present a range of effective strategies, initiatives, and action plans to foster disability inclusion within open source communities. It will discuss the importance of transformational leadership that questions existing systems, paradigms, and assumptions to drive change. Additionally, creating a compelling vision for social change will be explored, emphasizing the need to address social inequalities in Open Source Communities.
We will delve into practical measures such as referral programs, internal disability disclosures, and integrating disability into existing agendas rather than treating it as a separate issue. I will also emphasize the significance of education and awareness training programs aimed at challenging stereotypes and empowering individuals with disabilities to contribute meaningfully to Open Source programs.
Moreover, disability mainstreaming will be a central theme of the talk, with a focus on its role in promoting universal design and inclusivity. Attendees will gain insights into establishing disability mainstreaming committees, formulating action plans, implementing best practices, and monitoring and evaluating progress. The importance of crafting unique work plans and establishing quarterly reporting workflows specific to each open source community will also be discussed.
By the end of the talk, attendees will leave with actionable strategies to foster disability inclusion within their open source communities. The aim is to create an environment that is more inclusive, welcoming, and empowering for persons with disabilities, ultimately enriching the open source movement as a whole.
=======
Linux 核心的社群常給人一種遙不可及的感覺，想要參與卻又不得其門而入。究竟在 2023 想參與該社群是可能的嗎？到底需要會什麼？要怎麼交流？很容易被罵嗎？ —— 這些問題都會被一一解答。
本次將介紹 Linux 核心的社群，他們的文化、工作模式、使用的工具、交流方式、習慣、以及所需的技能。並且提供一些與社群交流時可以用上的小技巧。觀眾不需要會程式語言，但需要知道 GitHub 上開源協作的大概流程。
=======
https://ckxpress.com/en/kin/
傳統紙本書已經持續式微多年，買書的讀者越來越少之餘，近年還多了審查的要求。另一邊廂，發展多年的電子書雖然解決了如存倉、物流、印刷等部分問題，但亦衍生了通路和平台壟斷等問題。
本專題將分享分散式出版如何以 NFT 書的全新方式演繹、發行與銷售電子書，以面對資訊審查、封閉花園以及通路壟斷三道圍牆，提供現實案例，介紹分散式出版的的特色如：
- 文本以共享創意授權，保障知識流通
- 畫師設計每本獨一無二的封面
- 文本和封面均存放於分散式存儲如 ipfs，抗衡竄改及流失
- 透過 NFT 認證每本書的擁有權，創造收藏的條件
等等
=======
KVM (Kernel-based Virtual Machine) 是 Linux 核心中的系統虛擬機器基礎建設，它是 Linux 核心模組，能讓 Linux 系統成為一個 Type-2 Hypervisor 。KVM 透過硬體虛擬化支援 (Intel VT, AMD-V) 來提供 CPU 和記憶體虛擬化功能。藉由硬體虛擬化技術，客體作業系統 (Guest OS) 不必經由軟體模擬或轉換指令，可以高效率且安全地直接執行在硬體上。使用者空間 (User Space) 的程式只要負責模擬週邊裝置、呼叫 KVM API ，即可建立並高效率地執行虛擬機器。
在這次議程中，將介紹 KVM 運作原理，並展示一個以 KVM 為基礎的精簡虛擬機器管理程式實作，它能在 x86-64 及 arm64 平台上運作，提供了基本的 VirtIO 儲存裝置、 serial 裝置 (用來作為 console) ，並且能成功在上面執行 Linux 系統。
相關連結
GitHub 網址:  https://github.com/sysprog21/kvm-host \
開發紀錄:  https://hackmd.io/@sysprog/rkro_FeSh
投影片連結:  https://bit.ly/43JXUs4
=======
We will be discussing the latest audio and music related technology there. Linux and other platforms audio, DAWs and plugins, AI and music, vocal synthesis, MIDI 1.0 and 2.0, etc. anything related!
我們將討論最新的聲響和音樂相關的科技議題。 包含在Linux 和其他平台上的聲響技術、DAW 與插件、AI 音樂應用、虛擬人聲合成、MIDI 1.0 和 2.0 等任何相關內容！
※歡迎會眾在 COSCUP 舉辦期間參加 BoF 同好會！請至[此文件](https://docs.google.com/document/d/1s5u-4bw_hwKmhtpPA6pAalNF5Km91mLmdwMkxAUA1AE/edit?usp=sharing)找到您感興趣的活動，留下您的大名，準時出席！
* Welcome to participate in the BoF sessions during COSCUP. Please check out [this document](https://docs.google.com/document/d/1s5u-4bw_hwKmhtpPA6pAalNF5Km91mLmdwMkxAUA1AE/edit?usp=sharing) to find the activities that interest you. Feel free to leave your name and join us on time!
Opt-in / 參加者：
atsushieno https://g0v.social/@atsushieno
MGdesigner https://g0v.social/@mgdesigner
(add your name here! 在這裡簽上你的大名)
=======
「**FHIR-Pandas**」是一個React和AngularJS兩個前端框架的開源工具。該工具旨在支援[臺灣核心實作指引（TW Core IG）](https://twcore.mohw.gov.tw/ig/index.html)中的FHIR（Fast Healthcare Interoperability Resources）標準。FHIR-Pandas提供了一個客戶端（Client）的解決方案，使開發人員能夠輕鬆地與TW Core IG相容的FHIR服務進行互動。同時還提供了易於使用的界面，使開發人員能夠更輕鬆地開發和部署TW Core IG相關的應用程序。該開源工具的目標是促進臺灣核心實作指引的採用，並為開發人員提供便捷的開發環境和工具。
該工具已通過🎉 [2022 台灣醫學資訊互通聯測松](https://mitw.dicom.org.tw/) 測試👍
  
FHIR-Pandas的主要功能包括： 
1. **FHIR服務互動**：FHIR-Pandas允許開發人員與TW Core IG相容的FHIR服務進行互動，包括Create、Delete、Read和Update醫療保健數據。
2. **TW Core IG支援**：FHIR-Pandas遵循TW Core IG的規範和指引，確保生成的數據符合臺灣特定的標準和要求。
3. **優化開發流程**：開發人員可以利用React和AngularJS的豐富生態系統和工具，加速開發過程，提高生產力。
4. **易於使用的界面**：FHIR-Pandas提供了直觀的界面，使開發人員能夠輕鬆地查看和編輯FHIR資源，並進行相應的操作。
=======
介紹最新的MySQL SEST Service,它能使MySQL中的資料透過REST API和Web Application 及Mobile Application 互動
MySQL開發團隊在今年2月推出了MySQL REST Service (MRS) 第一個Beta版,再於五月推出了第二個Beta版.這使得MySQL資料庫能透過其REST Service的end point,將其資料以JSON文件的格式支援Web應用或Mobile應用,它也支援OAuth2認證服務,及其他先進的安控功能,應而能各種Framework(例如Django, .NET)合作,以大幅增加開發者的生產力.
這場演講將為會眾介紹這套全新的技術,並且演示如何使用MySQL for VS Code來設定及管理MSR.
本演講主要的重點包括:
	MSR的架構
	以MySQL for VS Code建立MSR服務
	下載及安裝具有MSR功能的MySQL Router
	Bootstrap (初始化) MySQL Router
	以browser連上MySQL REST Service的Endpoint
	建立基於MRS之REST應用
=======
- compare chatGPT API and Bard API
我們都知道 ChatGPT playground 是官方建議在使用 ChatGPT API 串接之前，可以先試做的工具，但除了做為試錯工具之外，還沒有其他可能呢？
What is API
What API can do
How to call ChatGPT API
Compare Bard API
ChatGPT console 使用時 可能會有的問題
ChatGPT API Playground 的使用方式
用 ChatGPT API Playground 複製一個你 寫作風格 產出 應用在 Google Maps 評價
=======
如果您認識 GitHub Copilot 的話，應該就會秒懂 Amazon CodeWhisperer 是什麼了。最近 Amazon 也跟風發表自家的 Generative Ai，將 CodeWhisperer 納入其中。而在這次 CodeWhisperer 的更新中，Kotlin 被新增為 CodeWhisperer 所支援的語言。在這次的分享中，講者將會選擇 Kotlin 語言，介紹這主題，有興趣的朋友，可以先自行安裝 IntelliJ IDEA ，並在 Plugins 新增 AWS Toolkit 功能（這部分的操作可以參考我的 Youtube 教學影片 https://youtu.be/tBlKk22XOWM ），先試用一下。
=======
歡迎開源社群在 COSCUP 期間舉辦 BoF 同好會！如果你想要預約 BoF 時段（每場次一小時），請至[此文件](https://docs.google.com/document/d/1s5u-4bw_hwKmhtpPA6pAalNF5Km91mLmdwMkxAUA1AE/edit?usp=sharing)閱讀注意事項並登記；同時，也歡迎在此宣傳場外自行舉辦的開源聚會！
想參加活動的會眾也可以在這份文件找到有哪些有趣的活動正在發生！
We encourage communities to hold their BoF meet-up during COSCUP. Book for your BoF (1 hr per session) and check up the notice [here](https://docs.google.com/document/d/1s5u-4bw_hwKmhtpPA6pAalNF5Km91mLmdwMkxAUA1AE/edit?usp=sharing), or promote your own BoFs during the weekend!
=======
你曾在疫情間用社群志工們做的「口罩地圖」買到口罩嗎？數發部唐鳳部長常常說，「仰賴『開源社群』的建議，優化了我們領三倍、五倍券及普發 6000 元的系統」，到底這個「社群」是什麼、這些「志工」又是誰、又有哪些魔力可以辦到這些呢？而還有哪些社群還做了那些有趣的事情呢？透過【開源星手村：桌遊體驗工作坊】讓你在遊戲中體驗到「社群」的魔力，認識其背後協作的機制，歡迎組隊、單獨報名桌遊工作坊，報名由此去：[https://i.coscup.org/OCFStarGame/CSO](https://i.coscup.org/OCFStarGame/CSO)
=======
透過在資訊教育的工作場域中，實驗組織跨界溝通的方式。主要透過以下方式:
1. 組織程式開發場域團隊
2. 主持讀書會分享
3. 舉辦Tainan.py技術社群
4. 拍攝學生學習歷程
投影片參考:  https://bit.ly/3BH5acr 
影片簡介:  https://www.youtube.com/watch?v=7CsuE29VKc4
PAIA帕亞科技公司與PTWA(Program the World)本身就是一個跨域的場域，我們一直致力於將科技與藝術結合與生活之中，協助各年齡層的學生能持續成長與找到自我的價值。希望藉由這次COSCUP能夠與大眾分享我們的成果。
=======
過去幾年，曾因為疫情引起的晶片短缺，導致業者無法生產產品，進而影響到全球工業、車業，甚至是資訊業…等。近期，也因為許多國家的政策考量，需要特別檢視產品的來源。因此，能夠快速變更合適的料件來做開發應用，以提高產品、服務供給端的韌性，是一個重要技能。本次，將分想曾經使用過的晶片(架構)，列出相對應的 toolchain、debug tool 與相關開發經驗。
將說明如何使用 open source toolchain 和 debug tool 進行開發、除錯，並把程式燒錄到 ARM Cortex-M 開發板上。同樣的過程，也可套用到其他晶片的開發板，將實際舉例 ARM Cortex-A 與 RISC-V 32 & 64 Bits 的產品。此外，也會分享送 patch 到 debug tool upstream 的相關互動經驗。
=======
經過 Mozilla 裁員後的 Servo 到了 2023 年變得如何了呢？
Servo 是一個用 Rust 寫得全新的網頁引擎。不過在 Mozilla 裁員後，該專案被 Linux 基金會接收? 到了 2023 年後現在 Servo 變得如何了呢? 對於想開發網頁引擎的朋友們不妨來聽聽看如何投入參與。
=======
我嘗試探索「數位視角」是什麼，並從數位技術帶來社會改變的角度出發，去盤點遇到的問題，進而思考可能的數位政策解方，寫出了這份2023台灣民間版數位政策白皮書的草案。期待這份白皮書草案可以發揮拋磚引玉的效果，對台灣未來的數位政策帶來改變。
在過去一段時間，台灣的數位法制立法相當緩慢，但數位技術卻推陳出新。許多舊的問題仍未處理完畢，新的技術又不斷冒出來。
而總統大選即將到來，可以想像各個陣營將會推出相應的數位法制。但是，若是沒有從數位視角出發，恐怕難以應對未來數位技術所帶來的挑戰。但目前，各界提出的數位政策，往往是從既有的專業領域出發去應對數位帶來的改變，而非從數位的視角，重新審視各個領域的願景與挑戰。
因此，我嘗試探索「數位視角」是什麼，並從數位技術帶來社會改變的角度出發，去盤點遇到的問題，進而思考可能的數位政策解方，寫出了這份2023台灣民間版數位政策白皮書的草案。期待這份白皮書草案可以發揮拋磚引玉的效果，對台灣未來的數位政策帶來改變。
=======
CC授權等公眾授權機制是不告可取的便利流通機制，能促進國際間多元共融的跨界應用，從而解放相關素材的文化應用潛質。然而許多公務單位，在採用CC等公眾授權條款時，仍自困於本位主義，而對這些公眾授權條款，產生應用上的曲解、偏離，以及錯導。本講座將以國家撥付巨資建立與維運的國家文化記憶庫為例，例示其平行設立的霸王條款、對CC-NC、CC-ND的偏離認知，以及CC-BY發布資訊欠缺統一與尊重，提出針砭之見，以協助聽眾能更正確理解CC等開放式公眾授權條款及其應用，並同步歡迎有相關批判經歷的朋友與談分享，以增裨此議程內容的深度與廣度。
=======
作為學生，很多時候我們並不像大多社群成員一樣可能擁有高深的技術或豐富的知識，
<br>但並不代表我們不能對開源社群做出貢獻！
<br>「**每個人都有自己能做的事情**」，這就是開源社群最棒的地方！
<br>讓我透過幾個實際參與的例子，告訴各位作為學生我們能怎麼進行貢獻。
議程會簡述各種參與貢獻的方式（包含但不限於參與社群、翻譯、發 PR、寫簡單的 side projiect 等），
<br>並鼓勵大家從學生時期就多多進行開源貢獻，累積經驗的同時也能更加深刻的理解開源精神。
=======
This talk covers integration patterns of WebAssembly through backend software, like CLIs and side cars. It shows how to embed WebAssembly into Go applications, and what to watch out for when programming. When we’re done, you’ll have a good sense of how WebAssembly fits into what you’re working on.
WebAssembly is a buzz word appearing everywhere, not just in the browser. We see it applied in edge functions handling our HTTP traffic and a way to run Python in Go. How it all works is less discussed, especially outside demo projects. This session is about WebAssembly in practice, given by an open source maintainer of a popular WebAssembly runtime written in Golang, detailed with real projects in use today.
This session covers concrete open source practice of WebAssembly, from the backend perspective. What it is and how it works is introduced through practical integrations starting at service, container, and finally programming abstractions. No example used is demoware, and all are integrated into programs written Go. These include popular tools such as Dapr, SQLite, Trivy and several others. You’ll learn the difference between your Go runtime and the third party wasm you allow it to run. You’ll understand which areas are routinely problematic and why. We’ll conclude with developments in the Golang ecosystem, both the wazero runtime and the programming language, both now and the near future
The goal of this talk is to inform, not to promote. Whether you begin your practice now, next year or not at all, you’ll have sound reasons for your decision.
=======
-
=======
歡迎開源社群在 COSCUP 期間舉辦 BoF 同好會！如果你想要預約 BoF 時段（每場次一小時），請至[此文件](https://docs.google.com/document/d/1s5u-4bw_hwKmhtpPA6pAalNF5Km91mLmdwMkxAUA1AE/edit?usp=sharing)閱讀注意事項並登記；同時，也歡迎在此宣傳場外自行舉辦的開源聚會！
想參加活動的會眾也可以在這份文件找到有哪些有趣的活動正在發生！
We encourage communities to hold their BoF meet-up during COSCUP. Book for your BoF (1 hr per session) and check up the notice [here](https://docs.google.com/document/d/1s5u-4bw_hwKmhtpPA6pAalNF5Km91mLmdwMkxAUA1AE/edit?usp=sharing), or promote your own BoFs during the weekend!
=======
歡迎開源社群在 COSCUP 期間舉辦 BoF 同好會！如果你想要預約 BoF 時段（每場次一小時），請至[此文件](https://docs.google.com/document/d/1s5u-4bw_hwKmhtpPA6pAalNF5Km91mLmdwMkxAUA1AE/edit?usp=sharing)閱讀注意事項並登記；同時，也歡迎在此宣傳場外自行舉辦的開源聚會！
想參加活動的會眾也可以在這份文件找到有哪些有趣的活動正在發生！
We encourage communities to hold their BoF meet-up during COSCUP. Book for your BoF (1 hr per session) and check up the notice [here](https://docs.google.com/document/d/1s5u-4bw_hwKmhtpPA6pAalNF5Km91mLmdwMkxAUA1AE/edit?usp=sharing), or promote your own BoFs during the weekend!
=======
In this talk, we will look into how CalyxOS Team rewrote Android's sample OS updater app from Java to Kotlin while addressing deprecation and other issues along the process resulting in a modern app that any AOSP-based OS can use to update their A/B partition scheme devices.
Android is used all over the world by millions of people every day. Multiple companies deploy updates for these devices every once in a while to update the underlying system with the latest updates containing various security-bug fixes and new features.
This talk aims to showcase how updates are deployed on these Android devices using the OS updater application and how the team at CalyxOS rewrote Android's sample OS updater app from Java to Kotlin and Material3 following the latest recommended guidelines and libraries.
This talk aims to be targeted at beginners and skilled developers, including normal users who use Android devices and are interested in learning how the OS on their system is updated in the background.
* CalyxOS is an Android mobile operating system that puts privacy and security into the hands of users. Plus, proactive security recommendations and automatic updates take the guesswork out of keeping your personal data personal.
=======
台灣台語 sī 台灣 ê 國家語言, mā-sī 台灣通四界 ê 通用語言，東南亞 ê 馬來西亞、新加坡、印尼 ê 福建話，菲律賓 ê 咱人話，中國 ê 泉州話、漳州話 kah 海南話，mā ū kah 台語 ē-tàng 彼此之間無仝程度 ê 交流。這場 bueh 解說 Wikipedia nan 抑是維基辭典 等等 ê 維基媒體計畫 ê 狀況，猶閣有未來 ê 可能計畫。
Taiwan Taiwanese is one of the Taiwan national languages and a common language in Taiwan, and also an active Sinitic language in South East Asia countries like Singapore, Malaysia, and the Philippines, China, known as Hokkien, Lan-lang-oe, or Banlam-gi, interchangeable with Taiwan Taigi. In this section, I will summarize the past of nan Wikipedia projects and other related nan Wikimedia projects like Wikidata, and Wiktionary.
台灣台語 sī 台灣 ê 國家語言, mā-sī 台灣通四界 ê 通用語言，東南亞 ê 馬來西亞、新加坡、印尼 ê 福建話，菲律賓 ê 咱人話，中國 ê 泉州話、漳州話 kah 海南話，mā ū kah 台語 ē-tàng 彼此之間無仝程度 ê 交流，共通分享以早祖先流傳落來 ê 話語。。Sui-bóng 台灣台語 sī 日常生活 kah 影視作品ê常用語，毋過 tī 書面 kah 網路頂，欠缺文獻 kah 文本。Tī這場講演，我 bueh 講台灣維基社群 tī-teh 做 ê 代誌，
Wikidata ê 標籤、敘述，收字ê詞條，猶閣ū nan Wikipedia，應該按怎用Wikidataê永久重複項，連結用白話字kah漢字書寫ê條目內容。mā ū人bueh編輯nan維基辭典。mā會講kah姊妹仔計畫，親像講OpenStreetMap ê 地號名ê nan標籤bueh按怎配合。
Taiwan Taiwanese is one of the Taiwan national languages and a common language in Taiwan, and also an active Sinitic language in South East Asia countries like Singapore, Malaysia, and the Philippines, China, known as Hokkien or Lan-lang-oe, interchangeable with Taiwan Taigi.  Even though it is also an active market language and entertainment industry language, Taiwanese Taigi lacks formal written documents and articles. In this section, I will share the activities that the Taiwanese community is doing, such as adding nan labels and descriptions on Wikidata and editing nan lexemes on Wikidata.
And I will mention the current situation of nan Wikipedia, and how to handle by Wikimedia's permanent duplicated items, linking different Wikipedia articles' written forms like POJ or hanji on Wikidata.
There are some editors expanding lexemes on nan Wikdictionary. Sisters project like OpenStreetMap, it is also possible to collaboratively edit on adding nan place names.
=======
Linguists in Taiwan have recorded the Puyuma language. However, there are a lot of differences across the many Puyuma dialects. In order to improve upon the current Puyuma Dictionary and common textbooks, I am working on a strategy that includes 1) A Lexigraphical Based Glossary Database, 2) Mapping, and 3) Potential Linguistic Analysis, based on the use of 4) Tools from Wikidata and Wikipedia.
=======
本次演講將分享如何將一個商業專案轉型為開源專案的實際經歷。從技術挑戰到團隊溝通，我們將講述我們在轉型過程中所面臨的問題，以及解決方案。雖然尚無法分享完整的成功經驗，但希望聽眾能從中了解到開源專案的發展之路。本議程適合對開源專案感興趣的開發者、團隊領導者及企業參加。
在此演講中，我們將帶領聽眾了解從商業專案轉向開源專案的過程。具體內容包括以下幾個部分：
1. 開場介紹：簡述專案背景，並說明我們選擇開源的原因（5分鐘）
2. 技術挑戰：講述轉型過程中遇到的技術問題，如 Refactoring、Authentication、CI/CD、既有商用軟體的開源解決方案等，並分享如何解決這些問題的方法與經驗（15分鐘）
3. 團隊溝通：介紹團隊在轉型過程中如何處理成員之間的溝通與協作，培養團隊對於開源專案的心態等（5分鐘）
4. 經驗分享與總結：分享我們在轉型過程中學到的經驗教訓，以及對其他希望開源的團隊的建議（5分鐘）
經過此分享，聽眾將了解：
* 商業專案轉向開源專案的挑戰與機遇
* 如何解決轉型過程中的技術問題
* 如何有效地管理團隊溝通和協作
此議程將帶給聽眾對商業專案轉型為開源專案的實戰經驗，讓聽眾了解如何在技術挑戰與團隊溝通等方面取得突破。聽眾可以透過本議程學到實用的解決方案和建議，並將這些經驗應用在自己的專案中，以達到更好的商業專案開源之路。
=======
在 7 * 24 API 巨量 query DB 的服務中，更新 table 或是 delete table 中 data 時會有鎖表的問題，導致 API 發查失敗，為了解決這個問題，我們團隊在這段問題上做了一先研究與實驗，在實務上解決這些問題，而且將 PostgreDB 的效能優化，table的存取時間從6小時大幅下降到6分鐘，減少了98.4%的存取時間，也是放了許多 DB 的使用空間。
背景知識: 有使用DB的經驗尤佳。
有使用DB且在處理 DB 更新與清除上有效能議題的使用者
希望他們在演講中能得到一些觀念，如下
1. 了解 DB 刪除指令的比較 (delete、truncate、drop) 的一些原理
2. 了解partition table 更新機制的概念
3. PostgreDB什麼情況下會發生鎖表
4. 如何解決實務上的狀況
=======
這是一場久違的兄弟戲牆與對談，以座談的形式進行，你可以聽到在不同領域，為這開源之路各自努力的兄弟，對於開放 / 開源的想像與實踐。
這次座談會想要幫助第一次聽到開源這個詞的人快速了解到底開源是什麼？
也適合心中有開源，但尚未實踐開源的人，或是那些想看兄弟戲牆的人！
開源新手村  重。磅。呈。獻
在這裡你可以聽到：
＊開源是什麼
＊除了開源，更多的開源
＊學界、業界對於開源的應用
＊為什麼我堅持開源之路
＊新手開如何參與
=======
《開源的陰陽》是對協作、多元化和開源文化之間錯綜複雜關係的引人入勝的探索。從其豐富的歷史、優點、挑戰和當前問題入手，特別關注其在文化轉型方面的影響，旨在激發對自由和開源哲學及其實際應用巨大力量的更深刻贊賞。它強調負責任的實踐和創建包容性社區的重要性，敦促我們擁抱這股變革力量，積極貢獻於一個更加包容和協作的未來。（中文翻譯）
備註：此場講座為 OSI (https://opensource.org) 與 COSCUP 共同慶祝開源週年全球系列活動而設立。
=======
No one wants to be responsible for breaking the build. But what can you do as a developer to avoid being the bad guy? How can project leads enable their teams to reduce the occurrence of broken builds?
In talking within our own teams, we discovered that many developers weren’t running sufficient integration and End to End tests in their local environments because it’s too difficult to set up and administer test environments in an efficient way.
That’s why we decided to rethink our entire local testing process in hopes of cutting down on the headaches and valuable time wasted. Enter Kuttl. Connecting Kuttl to CI builds has empowered our developers to easily configure a development environment locally that accurately matches the final test environment — without needing to become an expert CI admin themselves.
These days, we hear, “Who broke the build?” far less often — and you can too!
Session Outline:
In this session, We’ll cover:
● A quick history of our testing challenges and what led us to Kuttl
● The benefits of our new testing approach — easy to configure and minimal investment
● How we combine Kuttl and CI pipelines for more streamlined testing and fewer broken builds
Session Key Takeaways:
1. When and why we decided to rethink our e2e testing practices and our subsequent discovery of Kuttl.
2. Why Kuttl has been the perfect tool for our developers to perform better local integration/e2e testing without the burden of becoming their own CI administrators.
3. A detailed acc
=======
This presentation explores the Matter standard, a promising solution to the interpretability issues among various smart home ecosystems, and its integration with Home Assistant. It discusses the advantages and disadvantages of using Matter products within specific ecosystems (Google, Apple, Amazon) versus linking them to Home Assistant. The talk also provides guidance for planning smart home product investments in the upcoming year.
Home Assistant helps bridge the gaps between smart home products from different camps with local control in mind, while the emerging yet promising Matter standard that hoped to resolve a lot of the interpretability challenges of different smart home ecosystems finally released in late 2022. As products that comply with the Matter standard start to appear, Home Assistant has also evolved to provide better support for Matter products. In this session, we will discuss the Matter standard and how it works, the pros and cons of using Matter products on a particular ecosystem (Google / Apple / Amazon) versus connecting them all to Home Assistant, and how you shall plan for your investments of smart home products in the coming year.
=======
歡迎開源社群在 COSCUP 期間舉辦 BoF 同好會！如果你想要預約 BoF 時段（每場次一小時），請至[此文件](https://docs.google.com/document/d/1s5u-4bw_hwKmhtpPA6pAalNF5Km91mLmdwMkxAUA1AE/edit?usp=sharing)閱讀注意事項並登記；同時，也歡迎在此宣傳場外自行舉辦的開源聚會！
想參加活動的會眾也可以在這份文件找到有哪些有趣的活動正在發生！
We encourage communities to hold their BoF meet-up during COSCUP. Book for your BoF (1 hr per session) and check up the notice [here](https://docs.google.com/document/d/1s5u-4bw_hwKmhtpPA6pAalNF5Km91mLmdwMkxAUA1AE/edit?usp=sharing), or promote your own BoFs during the weekend!
=======
這幾年出現了許多充滿爭議的數位政策，包含中介服務法草案、數位身分證等，但是推動這些政策的機關（像 NCC 及數發部），明明就有在推廣網路治理的多方利害關係人模式（multi stakeholders model），為什麼不能每年固定辦理 Open Policy Meetings，直接開放數位政策的參與？還有哪些聲稱開放的數位政策，建構的過程實際上缺乏開放精神呢？缺乏多方利害關係人的開放參與，又會造就什麼不平等？
=======
The Internet of Things (IoT) is increasingly driven by sensor data, with devices taking measured actions based on everything from wind speed and direction, vital body functions, illumination intensity, and temperature.
In this session we will showcase how to build a fully functional sample IoT monitoring application built on the Flask framework and utilizing InfluxDB as its backend. With integrations to visualization libraries such as Plotly, and downsampling using pandas.
The Internet of Things (IoT) is a fascinating realm where devices gather and utilize sensor data to make informed decisions. From monitoring wind speed and direction to tracking vital body functions, measuring illumination intensity, and observing temperature variations, sensor data plays a vital role in driving IoT applications.
In this engaging session, we will take you on a journey into the world of IoT monitoring. Using the powerful Flask framework as our foundation, we will guide you through the process of building a fully functional sample IoT monitoring application. This application will harness the potential of InfluxDB, a robust and scalable backend database designed for time-series data storage and retrieval.
Throughout the session, you will learn how to integrate visualization libraries such as Plotly into your IoT monitoring application. With Plotly's rich set of features, you will be able to create interactive and visually appealing charts and graphs, providing valuable insights into the sensor data.
But that's not all! We will also delve into the concept of downsampling using pandas, a popular data manipulation library. Downsampling allows you to aggregate and summarize large volumes of sensor data, making it easier to manage and analyze.
By the end of this session, you will have gained the knowledge and practical skills to build your own IoT monitoring application. Whether you're a seasoned developer or just getting started in the IoT space, this session will equip you with the tools and techniques to make your mark in the exciting world of IoT monitoring.
=======
講到自由開源軟體的法律議題，大家最常提到GPL、BSD這些授權條款，但是從授權條款出發，其實還會衍生出其他的法律議題。這個演講將以自由開源授權條款為中心，介紹衍生出來的文件授權、專案智財管理等議題與問題，也會介紹為了解決這些問題的國際專案與活動。在這場演講中，你會認識到法律議題不是只有生硬的授權文字，為了讓自由開源的授權機制可以順暢運作，也有著多元的專案與活動正在進行著。
=======
1.透過介接高雄市農業局的農來訊系統，只要輸入地區與作物，我們就可以動態的產生一份完整的「作物防災報告書」。
2.「作物防災報告書」包含：作物防災告警、生產管理建議、作物生育期查詢。
3.因此，我們就可以針對作物進行相關的防範與找到應對的解決方案。
4.在農來訊的基礎上，我們透過介接ChatGPT，可生成更多的解決方案並預測未來的變化，透過處理，可在線上即時產生預測圖形。
5.農民可將ChatGPT生成的各種解決方案儲存在資料庫中，即具備有面對過去、現在、未來的各種強大解決方案來面對氣候變遷造成的災損。
6.農來訊 X ChatGPT，可影響的作物種類有60種以上、影響範圍20縣市、資料更新為動態，預測資料來源為全球。
=======
PHP and Laravel is a powerful way to program. But don't program too much! Databases do some fantastic things really well and its best to use the advantages they do have. I'll go through some common patterns of things implemented wrong in Laravel and look how to restructure the code do to the right things. Adding functionality and reliability in a simple way. I'll be predominately using MariaDB as an example but the concepts will apply generally.
=======
MariaDB forked from MySQL many years ago. MariaDB's mature development team continued development on MariaDB. Its important to compare where MariaDB and MySQL are now from a user point of view.
Some things are the same, some are different.
I'll finish by talking about MariaDB as a project that can be contributed to.
=======
隨著臺灣政府開放資料的日漸完善，適合匯入 OpenStreetMap (OSM) 的地理資訊資料也相繼出現，例如各縣市地址與建物。然而  在台灣 OSM 地圖資料的成長，與開放資料的資料集內容十分龐大下，如何匯入與維護變成如今社群關注的焦點。本議程將帶大家介紹近幾年來匯入進行的狀況與目前我們遭遇的各種議題。
=======
OCF  桌遊團
你曾在疫情間用社群志工們做的「口罩地圖」買到口罩嗎？數發部唐鳳部長常常說，「仰賴『開源社群』的建議，優化了我們領三倍、五倍券及普發 6000 元的系統」，到底這個「社群」是什麼、這些「志工」又是誰、又有哪些魔力可以辦到這些呢？而還有哪些社群還做了那些有趣的事情呢？透過【開源星手村：桌遊體驗工作坊】讓你在遊戲中體驗到「社群」的魔力，認識其背後協作的機制，歡迎組隊、單獨報名桌遊工作坊，報名由此去：[https://i.coscup.org/OCFStarGame/CSO](https://i.coscup.org/OCFStarGame/CSO)
=======
台灣交通問題一直是社會關注的焦點，而人工智慧（AI）和電腦視覺技術的應用可以為交通狀況帶來改善。
本計劃旨在利用AI和電腦視覺技術來實現交通違規行為舉發與採證技術，捍衛每個用路人該有的權益不被他人佔便宜，共創舒適的用路環境，讓鬼島成為天堂。
The issue of traffic in Taiwan has always been a hot topic for society, and with the power of Artificial Intelligence (AI) and Computer Vision technology, we could transform this situation for the better. This project aims to use these technologies to spot and report traffic rule violations, ensuring everyone's rights on the road are respected and not exploited. Together, we strive to create a more comfortable commuting environment and turn our lovely island from a maze of traffic into a paradise.
=======
本研究基於Julia 語言、使用分類與迴歸樹（CART）演算法，利用常見的氣象參數對土壤含水量（SWC）進行估計，並探討此方法在農用場域之應用可行性。初步的研究成果發展為 Julia 套件TWAISWCF.jl，目前在GitHub的okatsn/OkRegistry上暫時註冊。研究人員和從業人員能夠基於TWAISWCF.jl 對相關問題進行探索與實驗。演講將著重於如何利用 Julia 的設計模式高效率地進行開發與研究工作、將成果整合成可用的套件並持續整合。
Resources:
https://github.com/okatsn/TWAISWCF
https://okatsn.github.io/TWAISWCF/
=======
Short keynote (10min)
=======
你有滿滿的作物、豬豬、牛牛、雞雞或農業照片想和大家分享嗎? 你有滿腔的植物、動物、小貓小狗病理診斷經驗卻無處揮灑熱血嗎? 歡迎加入ADADI(A-dady)農業病害影像資料庫聯盟。
ADADI是專門為農業病害專家開發的雲端影像儲存資料庫，提供成員無壓所上傳高畫質圖片，同時可以透過下拉選單、填空或勾選的功能模組，將影像帶有的疾病病癥標註在檔案中。搭配「同儕審核」的機制，只要影像被聯盟成員認定有保存的必要性，影像連同標註資料便會以csv格式儲存在國網中心的雲端空間。
=======
Welcome to COSCUP 2023
=======
Unikernels are specialized operating system images that execute a single application. Through extreme specialization they can provide high performance, small memory footprints, fast boot times, and a reduced attack vector.
This talk will provide an overview of Unikraft (https://unikraft.org), a Linux Foundation project that provides a toolikit for creating highly specialized unikernels by combining a set of micro-libraries to tailor down the operating system strictly to the needs of the executing application.
Specifically we will look at what Unikraft is and what it can be used for; how Unikraft achieves millisecond boot times, memory footprints in the order of KiB, and guaranteed higher performance in commonly deployed applications that Linux; Unikraft's security properties, both in terms of a reduced trusted compute base (TCB), and also in terms of supported security mitigations; ways to migrate existing applications to Unikraft with minimal effort both at the source level (POSIX), the binary level (Linux ABI), or through Unikraft's support for interpreted languages like Go, Javascript, Python, Rust, and WebAssembly; and - last but not least - the amazing and evergrowing open source community of Unikraft.
=======
越來越多開發者採取非同步訊息處理來解耦各系統或進行事件驅動架構。而 Google Cloud Pub/Sub 和 Apache Kafka 都是被廣泛使用的訊息處理系統。本次將探討Google Cloud Pub/Sub 和 Apache Kafka 這兩個系統主要的相同、相異之處，在不同面向上(包含可擴展性、容錯性、管理維護等)探討兩者工具的差別與選用。
- 非同步任務處理簡介、常用場景 
- 常見工具: Kafka, pub/sub
    - Kafka 簡介
        - 架構
        - 使用 pattern 
    - pub/sub
        - 架構
        - 使用 pattern 
- 利用線上 API 競賽應用場景，進行選型比較 
    - 場景設定介紹
    - 相同/相異處
    - 效能、可擴展性、可靠性
    - 管理維護
=======
NGS定序為精準醫療帶來突破性的發展，然而定序數據的交換與整合也為研究人員帶來挑戰。本議題利用開源的ngs2fhir工具，將定序數據標準化為 FHIR Genomics，提供研究人員解決方案。
=======
Welcome COSCUP 2023 Day 2
=======
Open source communities are at the heart of an explosion of technical innovation, where industry leaders, engineers, and end users are collectively creating and improving the digital infrastructure on which the global economy depends. With an extensive community of members, connections with thousands of companies, and hundreds of thousands of open source contributors, the Linux Foundation is in a unique position to research open source collaboration and provide insights into emerging technology trends, best practices, and global impact of open source projects. In this session, Cailean Osborne, a Researcher at the Linux Foundation, will provide an overview of the Linux Foundation's latest research and discuss the "World of Open Source: 2023 Global Spotlight" survey, an ongoing research project that aims to better understand open source trends across world regions.
Open source communities are at the heart of an explosion of technical innovation, where industry leaders, engineers, and end users are collectively creating and improving the digital infrastructure on which the global economy depends.
With an extensive community of members, connections with thousands of companies, and hundreds of thousands of open source contributors, professionals, solution providers, and users, the Linux Foundation is in a unique position to investigate the growing scale of open source collaboration, and provide insights into emerging technology trends, best practices, and global impact of open source projects. By leveraging project databases and networks, and through a commitment to best practices in quantitative and qualitative methodologies, Linux Foundation Research is well-positioned to be the go-to repository for open source insights for the benefit of organizations and governments the world over.
In this session, Cailean Osborne, a Researcher at the Linux Foundation, will provide an overview of the latest research published by the Linux Foundation and zoom into a few studies, including "Measuring the Economic Value of Open Source" and "Enabling Global Collaboration: How Open Source Leaders Are Confronting the Challenges of Fragmentation," amongst others. Cailean will conclude by discussing the "World of Open Source: 2023 Global Spotlight" survey, ongoing research that aims to better understand open source dynamics and trends across world regions.
=======
介紹如何從 需求搜集 到 變成程式碼 的一系列方法論的應用
介紹如何利用 Clean Architecture 的架構，來讓我們的開發保留更多的選擇性，並且解決 golang 中令人頭痛的 Import Cycles 的問題
並介紹如何利用 EventStorming 來進行需求分析，利用 EventStorming 的結果對應到 Clean Architecture 中。
=======
分享如何在校內建置私有雲端並提供免費雲服務給同學使用
Cloud Infra Lab 是學生自主維運的小機房，目標是提供免費的雲端服務給學生朋友。我們的初衷是希望「『學生』的作品部屬在『學生』的機房由『學生』自治」，讓想要使用雲端平台的同學不必有信用卡與收費問題；同時裡面的機器有來自前輩們的善意、我們的荷包君犧牲奉獻出的酷酷的機器。在提供服務給他人使用的同時，也將 CILab 作為我們的遊樂場，練習我們想架設使用的服務。
=======
Chinese, Japanese, Korean (CJK) users need different features than other languages. Language and culture dependent features and usage are important for productivity software such as LibreOffice. This talk will introduce some recent problems encountered in the CJK user environment of LibreOffice and how to improve them. Patterns of CJK language specific problems can be common across different software. Therefore, it may be applicable to other smartphones and desktop apps as well.  The LibreOffice project is an aimed at multilingualism, as stated in The Document Foundation’s “Our Values” of “Our Next Decade Manifesto” that anyone can translate so that everyone can use it in their mother tongue.  https://www.documentfoundation.org/pdf/tdf_manifesto.pdf  However, LibreOffice developers are mostly in Europe, and in order to use them conveniently in other languages, those who understand those languages ​​need to solve the problem. LibreOffice 's CJK and problems unique to the Japanese environment are various such as vertical writing, external characters, phonetic, currency and date notation.  Of course, LibreOffice has various functions and problems for languages other than CJK. Typical examples are RTL languages that writes characters from right to left.  Sometimes CJK regression bugs occur in the LibreOffice project. It is important to strengthen user’s feedback loop approach. We have to be able to explain it to people from different cultures. It is also important that CJK people actually try to fix the CJK bugs.  From COSCUP 2019, I introduced typical CJK bugs every year.  In this talk, I will present some of the major recent issues and episodes in CJK environment. I will also introduce the efforts of the RTL language community and the TDF initiative.
Chinese, Japanese, Korean (CJK) users need different features than other languages. Language and culture dependent features and usage are important for productivity software such as LibreOffice. This talk will introduce some recent problems encountered in the CJK user environment of LibreOffice and how to improve them. Patterns of CJK language specific problems can be common across different software. Therefore, it may be applicable to other smartphones and desktop apps as well.
The LibreOffice project is an aimed at multilingualism, as stated in The Document Foundation’s “Our Values” of “Our Next Decade Manifesto” that anyone can translate so that everyone can use it in their mother tongue.
https://www.documentfoundation.org/pdf/tdf_manifesto.pdf
However, LibreOffice developers are mostly in Europe, and in order to use them conveniently in other languages, those who understand those languages ​​need to solve the problem. LibreOffice 's CJK and problems unique to the Japanese environment are various such as vertical writing, external characters, phonetic, currency and date notation.
Of course, LibreOffice has various functions and problems for languages other than CJK. Typical examples are RTL languages that writes characters from right to left.
Sometimes CJK regression bugs occur in the LibreOffice project. It is important to strengthen user’s feedback loop approach. We have to be able to explain it to people from different cultures. It is also important that CJK people actually try to fix the CJK bugs.
From COSCUP 2019, I introduced typical CJK bugs every year.
In this talk, I will present some of the major recent issues and episodes in CJK environment. I will also introduce the efforts of the RTL language community and the TDF initiative.
=======
如果您好奇這個已連續舉辦近20年、純志工籌辦、連票都不用買、集結眾多社群參展、數十軌同場較勁、超過三百場議程的活動是怎麼煉成的，請參加此議程聽聽  COSCUP staff 第一手分享。
適合參加者：會眾、社群活動組織者、有興趣參與 COSCUP 2024 籌辦的人
=======
開發一個開源專案只是整個過程的第一個開始，專案開始有使用者之後，後續的維護才是對大的難關。
從一個靈感，到第一個釋出的正式版本，再到開始有使用者使用，被整合到其他的專案中，在遇到相依的套件庫的大幅變動，這些都是維護一個開源專案的必經之路。
這個議程中，我們會來聊聊EZIO專案的發起、後續的維護等等中間所發生的故事。我們會分好幾個階段來討論，從最開始的發起，中間的艱困整合，一段安穩的平原期，然後最近的重大更新。
這個坑還會持續下去，直到下一個技術取代之後。
=======
由國內瑞昱大廠與資策會極力推廣，比ESP32 CAM具有AI功能的升級開發板HUB8735(AmebaPro2)，增加內置NPU AI 運算引擎，手把手簡易修改程式即可操作屬於自己的AI模型，其還帶有802.11 a/b/g/n 雙頻Wi-Fi與BLE低耗電藍牙。藉由該議程帶領您了解另外還有奇景光電、新唐所推的SMART-AI-CAM，亦可用於語音、手勢等應用之no-code AI訓練國產開發板，當您遇到資安國安或是標案中指定使用國產晶片，何不來試試可免費申請試用的資策會國產開發板，如效果不錯政府還會幫您免費產品化。
大綱:
壹、前言
貳、HUB8735(AmebaPro2)與Google Colab製作自己硬幣辨識AI模型
參、操作WE-I Plus與Edge Impulse 智慧儀錶辨識
肆、CoreMaker-01 環境AI 語音辨識&手勢判斷 開關自己的家電
伍、結論
參考資料:
https://www.ideas-hatch.com/evb_share_detail.jsp?id=70
https://www.youtube.com/watch?v=dMBl8v92u_4
https://www.youtube.com/watch?v=YZafxlf89aA
=======
現在網路上隨意搜尋即可獲得許多設計模板，但為什麼設計師這個角色仍舊存在呢？在本章將帶領你了解設計師在製作一個專案時，在每個環節中設計師考量了哪些問題。
figma 提供許多外掛，讓設計師們可以快速的繪製出網站畫面，然而許多的外掛之下，我們如何挑選適合的外掛成了另一個小課程，在這裡將介紹常用外掛，並且製作一個簡單的網站作為範例，告訴你設計師在製作網頁的思考過程中，做了哪些決策。
1. 設計思考：先知道題目的情況下，設計師會去哪個開源設計搜尋哪些資料，與需求者溝通時會做哪些應變措施
2. 定義網站架構：設計師需要先釐清網站目標、使用需求、頁數初估
3. wireframe：如何利用 figma 外掛快速決定 Wireframe 架構
4. 上色：設計師如何為網站選擇顏色，網站推薦色票網這麼多
5. 完稿：完稿的時候，設計師將如何與工程師討論
=======
說到開源，大家一般會認為開源是需要足夠的程式能力，並且會將開源貢獻的內容限縮於程式上的改進，這也讓大部分的人對於開源都望之卻步。可是開源貢獻不只僅限於這一部分，而應該還包含許多其他面向。在這一篇投稿想以我自己的經歷來分享除了程式之外還可以開源什麼？
先簡單的自我介紹一下，我是周造麟，蘭嶼人，高中剛畢業正準備往大學邁進，目前正在被 LaTeX 折磨。我一開始對程式語言並沒有接觸，而是因為某次地科作業意外接觸到 LATEX，所以才接觸到程式語言的世界。過了一段時間後，我發現我所使用的編輯器翻譯不佳，於是開始研究要如何改進翻譯，在研究的過程中才算是正式接觸到開源文化。
接觸到開源文化後，我慢慢發覺開源文化與生活的距離其實比我們想像的還要近。不是只能 在程式相關的主題上談開源，而是所有主題都可以談開源。所以我將開源軟體作為我高中自主 學習的主題，在最後也嘗試寫了一本關於 LATEX 的教學書籍，並將其開源在 Github 上。
過往演講經驗可以參考我於學校的專題呈現上的表現 https://www.youtube.com/watch?v=ZibdvRorjuY。
=======
Starting in 1990, Sorbonne Université-CNRS/LIP6 developped Alliance, a
complete VLSI  CAD toolchain released  under GPL.  In this  spirit, we
are assembling an  upgraded design flow for ASICs based  on FOSS tools
like  GHDL &  Yosys for  logical synthesis  and Coriolis  for physical
design. We will present the flow with a focus on the Cotiolis part and 
some of  the designs we made.   This should be an  important milestone
toward the creation of an open hardware community.
=======
本次分享會探討 KIND (Kubernetes In Docker) 這個常見的 Kubernetes 測試工具是如何搭建起來的，其中又是如何將 Kubernetes 這個容器協調工具以 Docker 的方式架起，並且基於 Container in Container 的方式提供一個方便且快速的 Kubernetes 測試環境
=======
淺談Kubernetes Controller與CRD的一些設計思考思路，並且使用一個簡單設計的Network Controller來做為範例
使用一些既有的Kubernetes Controller與CRD的時候，都會思考一下為什麼這兩個CRD是分開的，而這些卻沒有分離？甚至還會覺得分開設定很難用嗎？這個議程會簡單講述一些Controller設計上面的一些困難點，而拆分CRD如何幫助Controller設計。使用設計網路Controller做為一個範例來簡單比較幾種設計上的差異與使用。
=======
開放原始碼軟體 / 硬體在高等教育中發揮著重要作用，成為不可或缺的一部分。我們邀請到臺大資工洪士灝主任、師大資工紀博文老師、成大資訊系黃敬群老師，三位受邀教授都有非常豐富的業界與教學經驗，在教育場域實際現場引入開源文化相關專案與概念，並一致認同開源專案與教育密切關聯。我們將對開源教育主題進行更廣泛的討論，期望促進此議題之發展，歡迎加入我們，向教授們提出問題或分享自身經驗。
=======
介紹TornadoCashV1和TornadoCashV2: Privacy-Pools 的重要性和創新。V1隱藏交易發送者身份，但無法提供證據，可能冤枉合法用戶。V2引入Proof-of-Innocence機制，參與者提供匿名質押證據，解決V1問題，防止非法活動。保護加密貨幣隱私，提升用戶信譽。這些創新技術對加密貨幣的安全和隱私保護至關重要。
=======
眾多BBS站台曾經是70-90年代(6-8年級)學生時代的樂園，也因為原始碼開源共享的性質讓大大小小的站台邊地開花，然而當年大多數的站台已不復存在，既有的站也面臨維護量能不足以應付現代網路環境的挑戰。本短講將介紹 BBS 對近代台灣網路社群文化的影響，講者從 BBS 新手使用者轉變為開源貢獻新手的心路歷程，與近年來開源社群對 BBS 開發上做出哪些貢獻。最後與大家一起討論如何結合開放文化與 BBS 文化以期皆能永續經營。
本短講將會和大家聊聊以下的主題：
- BBS的興起與 MapleBBS 系列的誕生
- 從BBS新手到嘗試開源貢獻的心路歷程
- 近年來各家BBS面臨的困境
- 近年來BBS開發者的努力成果
- BBS的未來? 如何成為BBS開源貢獻者?
簡報連結：
- <https://slide.clam.moe>
=======
- 長大18歲，偏鄉高中畢業，也可以成為開源貢獻者；也許我們不是含著金湯匙出生，但是今日可以接受高等教育，也算含著金湯匙的了。擁有最多選擇和最多資源的我們，力所能及的話，就試著回饋些什麼給社會。
- 本場議程講者將結合自身經驗和背景來分享，洞見教育議題如何開始行動、行動過程中需要培養甚麼能力、如何開源以及如何提高影響力，讓更多人關注該教育議題。
=======
為什麼要在校園中跟大家分享開放設計的應用呢？我們如何在校園中創造社團的價值？參與社團的社員們與幹部們可以在社團活動中帶走什麼呢？
政大開放設計研究社，英文名open design club，簡稱ODC。
我們是一個新創社團，在一所沒有設計學院的校園裡面，希望扮演一個親切角色，讓無論是有設計基礎或是沒有相關背景的學生，都能從中提升對於美感的品味；培養自己動手去對這塊領域做嘗試的信心；然後也在有夥伴的狀態之下得到團體歸屬感，還有討論的空間，跟因此被激發出來的創造力。
社團近期仍然持續擴張，增加新的幹部組別，例如：負責網站架設與管理的網站組；積極與校內團體互動，例如：與Inkscape學分學程課程學生合作翻譯開源軟體中的外文；也力求串聯校外的資源和感興趣的夥伴，參與教育論壇、舉辦交流茶會等。
期許從參與到發起，累積並發揮社會影響力。
=======
隨著公司越來越多地採用 Kubernetes作為營運平台，為了減少部署工作量而導入了 ArgoCD。 在引入期間最主要挑戰是讓 DevOps 團隊進行統一營運和管理同時在合規性和安全性背景下進行分散權限管理。 講者將談及如何設置和擴展 ArgoCD 以滿足這些要求。
ArgoCD的導入讓許多採用Kubernetes的公司減少了大量的部署工作。但引入ArgoCD有一個極大的挑戰：在合規性和安全性背景下，如何讓 DevOps 團隊進行分散權限管理同時統一營運和管理的極大化效果。 講者將從策略面帶到實務面為大家分享。
=======
1.MantaGO聊天機器人平台簡介
2.小農成功案例
3.小農客服需求分享
4.封閉式Bert訓練模型、開放式ChatGPT學習
5.實測結果
6.未來應用
分享小農如何運用聊天機器人解決客服問題，而現階段的AI智能回覆，能夠更有效輔助嗎？以Bert封閉式機器學習和ChatGPT實測
=======
Learn about the open source project management software Redmine and how to configure it to meet your team's requirements
Redmine is an open source project management software. The first version of Redmine was released in 2006 and has been continuously improved and maintained up to the present.
You can learn an overview of Redmine,  its key features, and pros and cons compared to commercial online services followed by a discussion of how it can be configured to meet your team's specific needs. I will explore the various configuration options available, including roles, custom fields, workflow, and more.
=======
What are the latest technology trends in Japan? Masafumi will greet you attendees and discuss the Japan Track introduction at COSCUP23.
=======
大型自然語言模型LLMs是今年熱門的議題之一，本議題主要分享Google IO 2023年推出的PaLM2模型，除了模型介紹之外，也會整理與知名的GPT模型進行測試與比較。
=======
In the cloud, the high-availability of K8S clusters is ensured by cloud providers. When one node crashes, the cloud provider automatically replaces the node and load balancers redirects the network traffic to other pod replicas in the cluster, without the end-user noticing downtime.
For on-prem k8s clusters, high-availability of the k8s control plane and services is a major challenge. To solve high-availability, Kube-vip can be used to assign virtual IPs for control plane and Metallb can be used to create load-balancers on-prem.
In this talk, I will demonstrate how to build a three-node on-prem k8s HA cluster using Kube-vip and Metallb, how to use Kong proxy as loadbalancers, and why HA is important in the 5G scenario.
=======
身為一個開源專案開發者，也是一個研究人員，軟體工程與軟體架構是支撐整個專案可以被順利開發跟佈署的重要角色。在這場演講，我將會依據我的開發軟體經驗來告訴大家如何用 Julia 從零開發出一個中型的專案，描述在 Julia 的語言設計上可以對應到的軟體工程原則，並且跟大家分享我的開發方法、流程及心態。
=======
在錄製 Kotlin 爐邊漫談 Podcast 一年後，製作組終於下定決心要來為節目建一個網站。需求是除了單純的靜態網站之外，還希望能定期統整散落在各平台的聆聽數據做節目內容評估。為了降低管理及維護主機的人力時間成本，在建置的過程中，儘可能的選用 Serverless 方案並部署到 Google Cloud Platform。在這場分享裡，將娓娓道來這一路從無到有的探索與學習歷程。
預計分享大綱如下：
* Podcast 網站的實作需求
* 選用技術列表
  - 原型實作
  - 前台靜態網站
  - 動態資料 API
  - 數據資料截取
  - 資料庫存取
* 部署上雲
  - 各元件建置流程
  - 自動化部署
  - 執行定時任務
* 總結與回顧
=======
本主題將會討論那些我們在 OpenStreetMap 上可以瀏覽和繪製的電力資訊，讓大家可以在政論節目以外，有另一種方式能認識台灣的電力基礎建設。此外，還會探討一些繪製及瀏覽電力圖徵可以運用的工具和方式，以及在 OpenStreetMap 是如何標注這些電力圖徵的。
你有曾經在 OpenStreetMap 上注意過那些編輯上很擾人的電線嗎？如果沿著電線看地圖，有一些有趣的資訊就跑出來了。
你可以在 OpenStreetMap 上看到發電廠、變電所、以及最近很常被討論的離岸風電及太陽能板。縮放等級14以上時，高壓電線也會顯示出來。大家對這些電力基礎建設平常應該很陌生，只能從新聞媒體略知一二，卻不知道這些設施到底在哪裡，也不知道電是如何送到我們的家中。OpenStreetMap 特別有一個叫做 power=* 的 key 可以把這些圖徵畫出來，你也可以在 OpenInfraMap 上看到醒目標示的這些圖徵，圖像化的觀察電力是如何存在於我們的週遭。
台灣的電力在近幾年，無論在政論節目或是婆婆媽媽茶餘飯後，都是被熱門討論的問題，但是我們大部份的人對電力瞭解的實在不多。在參與這些討論前，不妨先從另一個方式重新認識一下我們習以為常的電吧。
=======
UX East meets West (UX 四神湯) aspires to create a world where designers from various backgrounds can effortlessly collaborate and flourish together. Since 2017, we have been publishing design articles on Medium and running design events and workshops to share design knowledge. In 2020, we launched a design mentorship program to further connect Taiwanese designers globally. Through this program, we have amassed a wealth of design resources from various designers, prompting us to establish these resources as an open-source library in 2023. 
In this talk, we will guide you through the process of creating our open-source design library. We hope to engage more like-minded individuals, encouraging their contributions to continually enrich our library. We believe together, we can shape a more innovative and inclusive future for design.
自2017年起，UX 四神湯不斷在 Medium 發布設計文章，同時也持續舉辦設計相關活動與工作坊以分享設計知識。到了2020年，我們推出了一個設計導師「深夜食堂」計畫，更進一步將來自台灣的設計師互相連結。透過這個計畫，我們累積了大量來自各地設計師的設計資源，並在2023年以這些資源為基礎，建立了一個開源的設計圖書館。
在這次的演講中，我們將分享這個開源設計圖書館如何從無到有的過程。我們希望藉此吸引更多志同道合的人士加入。
In our 30-minute talk, we'll kick off by sharing our journey, starting with how we initiated the design mentorship program and the process of gathering design resources. Following that, we'll dive into the development of our open-source design library, walking you through its various iterations, the lessons we've learned from constructing it, and our vision for its future evolution.
You can currently access the design library at: www.opendesign.tw.
=======
這是一個運用 Dolly 2.0 模型能夠生成合成資料和測試數據集的開源工具，專為 FHIR 規格設計。我們將探討該工具的功能、優勢以及應用範例。通過使用這個工具，開發者和從業人員可以生成多樣且符合 FHIR 標準的數據集，將合成資料用於測試環境中，從而提升健康資訊科技的開發和測試效率。
This paper presents the FHIR Patient Resource Synthetic and Test Dataset Generator By Dolly 2.0, an open-source tool designed specifically for generating synthetic and test datasets for FHIR patient resources. We explore the functionality, advantages, and application examples of this tool. By utilizing this tool, developers and professionals can generate diverse and FHIR-compliant datasets for synthetic and testing environments, thereby enhancing the development and testing efficiency of health information technology.
深入淺出 FHIR 對於醫療現場的影響
除了聯測 FHIR 之外的那些事
用 FHIR 合成資料進行醫療量能瓶頸預測
用詠唱的方式生成 FHIR 合成資料集
合成資料有幻覺可以嗎？
合成資料有機會產生湧現嗎？
從 Dolly 2.0 談 LLM 民主化
=======
Wasm has emerged as a secure, portable, lightweight, and high-performance runtime sandbox for cloud-native workloads such as microservices and serverless functions. We will show how familiar container tools can be used to develop and share Wasm applications.
Today, there is a large ecosystem of battle-tested tools to create, manage, and deploy Linux container apps in both dev and prod environments. Developers want to use the same tools to manage their Wasm applications to reduce the learning curve and operational risks. More importantly, using the same tools would allow Wasm containers to run side by side with Linux containers. That enables the architectural flexibility to run some workloads (eg lightweight, stateless, transactional, scalable) in Wasm containers, and other workloads (eg long running, heavyweight) in Linux containers. 
In this talk, I will cover how to create, publish, share and deploy real-world Wasm applications using Docker Desktop, Podman, containerd, and various flavors of Kubernetes. The examples will feature mixed container types to showcase how Wasm containers work side by side with existing Linux container apps.
Wasm is a secure, lightweight, fast, and portable alternative to Linux containers. A large tooling ecosystem has already existed for Linux containers. The adoption of Wasm could increase dramatically if developers and ops can manage Wasm containers using the same tools they manage Linux containers. In this talk, we will discuss how to use existing container tools such as Docker, Podman, Kubernetes, and containerd to manage Wasm containers seamlessly side by side with Linux containers. We will discuss open source projects behind those tools and how you might contribute to the ecosystem
=======
Why Solana in 2023? 在這次的分享中，我將會講解 Solana 的技術特性與 Solana 高性能的秘密，以及對圈內一些關於 Solana 的誤區進行說明（例如：SQLana / 停機問題 / FTX 事件之後的發展），最後，我也會分享一些能幫助新手快速上手的學習資源。
內容大綱：
- Why Solana in 2023?
    - Solana 的技術特性
        - Solana 高性能的秘密
        - Solana VM vs EVM
        - Solana VM vs Move VM
    - Solana 生態概覽
        - SolMeet / Gen3
        - Taipei Hacker House
    - Diss Solana
        - 中心化？SQLana？
        - 停機問題？
        - FTX 事件之後的發展？
    - What can I build? How should I start?
        - 學習 Typescript
        - 學習 Rust
        - 學習 Anchor
        - Get your hand dirty: `anchor-escrow`
=======
TONSplitter 是由 InjoyLabs 開發的一個朋友間分帳的解決方案。這款強大的 Telegram 聊天機器人讓大家在群組一鍵記帳，再透過優化演算法讓大家結算時轉帳的次數最小化，並無縫整合區塊鏈錢包，實現在 The Open Network (TON) 區塊鏈上去中心化的結算。TONSplitter確保了以用戶為中心的分帳體驗，並支援超過三十種法定貨幣。詳情請參閱[介紹網頁](tonsplitter.com)。並且也歡迎直接[加好友試用](https://t.me/TonSplitterBot)。除此之外，我們也會分享參加黑客松的甘苦談，以及在黑客松見到的其他整合聊天機器人與區塊鏈的有趣應用。
=======
作為 OCF 2023 年度獲得 FOSDEM 國際盤纏獎助金的得主，覺得在 FOSDEM 中有兩個最值得與大家分享的。其一是周遭社群響應的周邊活動，這其中我會分享在 FreeCAD Day 這個活動分享中聽到的所聞，這社群怎樣利用這樣的機會，做他們的各種社群發展的討論。同時另外一點將會分享 COSCUP 一日志工原型「FOSDEM 一日志工」的實踐，除了分享服務過程有趣之點，也讓臺灣各社群思考志工人力之餘，思考其怎樣建構其識別、體制、協作，及如何讓ㄧ個「突然上手」或者「長期關注」者有個好入門的參與方式。
最後感謝開放文化基金會提供的獎助金，可以實踐這一趟見習之旅！
=======
相信大家一定都聽過、用過維基百科吧！但其實在維基百科的條目背後，是靠著「維基數據」來連結、支撐著龐大的資料量。如果想加入維基的大家庭，不妨從「維基數據」開始吧！透過這次的入門工作坊，你將對維基有著更深入的了解。
=======
在本議程中，Weithenn 將以自身從事 IT 行業至今 20 年的經驗，分享 Infrastructure Architect 養成技能樹，從一開始的專科畢業，憲兵退伍，油漆工，網工班……等，直到開始接觸 FreeBSD 之後，整個職涯卻產生化學變化開始了不同的走向。
此外，也將分享 Weithenn 在職涯上的個人作法和選擇，例如，角色定位、學歷無用論？ 餘裕、避免落入沉沒成本謬誤、時間管理、制約、自我學習…等，如何從寫部落格開始，到撰寫雜誌技術專欄，出版多本書籍，公開活動演講，進而獲選 Microsoft MVP 並成為台灣第一位 VMware vExpert……等。
最近 Weithenn 的 2023 年目標，則是希望更深入了解 Google Cloud 雲端環境，並朝著 GDE(Google Developers Experts) 之路邁進……
-
=======
開放資料相關政策推動至今超過十年；數發部到八月就成立滿一年，固然數發部幾乎都以 CC0 公開其資料，但各政府單位面對「開放資料」依然有著不同「許多不可抗力」石頭檔在前面。
這分享將從ㄧ個鐵道文化興趣者，其在文資抗爭、文化行動各種對臺灣開放資料的實際困境、經驗及觀察。接著進一步以臺灣文化與交通的開放資料，以應用實例介紹五星開放標準，隨著認識與數星星過程中（同時許願）讓更多星星、更開放開放的資料應用，成就我們更便利的數位生活！
=======
本內容旨在實作**高效記憶體配置器**，針對多核系統提升性能。我們使用了 lock-free 設計和 atomic 操作進行記憶體配置，解決 lock 競爭問題。同時，透過 `MADV_POPULATE` 機制降低 page fault 次數，提高系統效能。
在 X86-64 與 Arm64 主機上的測試結果顯示配置器的可擴展性和效能優勢。這些優化技術和測試結果將提升記憶體配置效率，增強系統性能和可靠性。
本內容的目標是開發一個高效的記憶體配置器，以提升多核系統的效能和性能，我們選用開源的 rpmalloc 作為範本並且加以改進 。在多核環境中，lock 競爭是一個常見且嚴重的問題，可能導致系統效能下降。為了解決這個問題，我們使用了 lock-free 設計，以減少或避免 lock 競爭的情況。這種設計方式利用 atomic 操作，允許多個執行緒同時存取記憶體進行配置，從而提高系統的併行性和效能。
此外，我們也著重在大量記憶體配置時的 page fault 問題。頻繁的 page fault 可能導致系統效能下降。為了解決這個問題，我們運用 `MADV_POPULATE` 的系統呼叫機制，在進行記憶體配置之前，提前將記憶體映射到實體頁面，減少後續的 page fault，以提高系統的效能和響應速度。
此外，我們在 Arm64 主機上進行了測試，以確保記憶體配置器的最佳化和改進在該架構下能正常運行。Arm64 主機廣泛應用於行動和嵌入式系統，因此在這個平台上進行測試能確保記憶體配置器在不同硬體環境下的性能和可擴展性。
總結而言，本篇提出了一種以無鎖設計為基礎的高效記憶體配置器 rpmalloc 原理與改進方法，同時運用 madvice 中的 `MADV_POPULATE` 機制減少 page fault。通過在 X86-64 與 Arm64 主機上測試，我們驗證了這些方法在不同環境下的性能和可靠性。這些方法和測試結果將有助於提升系統的記憶體配置效能，提供更好的性能和可擴展性。
=======
本場次邀請這次有參加 RightsCon 全球數位人權大會的開源社群專案 - Cofacts 和開放文化基金會，一起來分享他們的臺灣開源經驗是如何成為事業且在國際數位人權上發聲，並且也介紹數位人權中逐漸重視開源的新趨勢，最後帶出開源人如何更多參與，甚至職涯發展的可能。
RightsCon 是全球最具指標性的數位人權大會，今年度這個國際級活動終於回歸實體並且第一次採用虛實整合。臺灣開源經驗如何應用在數位人權主題上？用國際都共通的語言和關心的議題 - 假資訊、個資隱私，不但成為事業，更是在今年六月於台灣的另一端 - 拉丁美洲的哥斯大黎加，向全球發表。
Cofacts 和開放文化基金會，一起來分享他們的臺灣開源經驗是如何成為事業且在國際數位人權上發聲，並且也介紹數位人權中逐漸重視開源的新趨勢，最後帶出開源人如何更多參與，甚至職涯發展的可能。
=======
Debian是一款完全自由的作業系統，以其穩定、安全和跨平台的特性在各種設備和領域廣泛應用。無論是服務器、個人電腦還是嵌入式設備，Debian都是首選之一。其著名的衍生 Linux 發行版如 Ubuntu, Kali, Proxmox VE, Parrot OS 等。
Debian 12 "Bookworm" 是 Debian 在 2023 年推出的最新版本，在許多方面進行了改進和功能更新。其中包含超過 11200 個新軟體套件，總軟體套件已超過 59000 個。
此議程，SZ 除了分享 Debian 12 相關資訊外，也會分享如何參與 Debian 社群，一同貢獻打造自由的作業系統。
=======
密碼已成為我們生活中不可避免的一部分，但 FIDO 與 Spring Authorization Server 的結合卻讓我們看到了破除密碼依賴的可能。這次我們將帶你探討如何利用 FIDO 的無密碼認證(PASSWORDLESS AUTHENTICATION)與 Spring Authorization Server 聯合創造一個更安全、更便利的驗證體驗。讓我我們斬斷密碼的枷鎖，讓身份驗證不再繁瑣。密碼時代的結束，無密碼時代的開始，從這裡起步。
=======
為會眾們介紹買了MySQL最新的LTS(Long term support)版本發行方式,以及最新的產品家族,同時還介紹MySQL資料庫新功能的發展方向
這個演講將為會眾們介紹買了MySQL最新的LTS(Long term support)版本發行方式,以及最新的產品家族包括MySQL REST Serivce, MySQL for VS Code, MySQL Operator for Kubernetes等,同時還介紹MySQL資料庫新功能的發展方向.會眾們能從演講中,瞭解這些新發展,以及他們對MySQL的使用者及開發者所帶來的影響.
1.	新的LTS版本發行模式
2.	發展路線
	雲服務
	performance_shema的擴大(error_log, )
	FedRAMP安全標準的支援
	REST Service (MRS)
	對開發者友善的新功能 - MySQL for VS Code
	支援微服務開發的新功能 – MySQL Operator for Kubernetes
3.	MySQL的新方向對MySQL使用者及開發者的影響
=======
在醫療產業中, 在人機介面的系統常會依據病人的狀況,調整不同的LED燈條亮度與顏色, 本議程會基於Android系統分享一套完整的LightBar方案, 從底層的移植到實際應用的功能如何實作在driver, 再來是JNI層的撰寫與APK的串接,拋磚引玉的方式的讓大家窺探如何在AOSP實作一些特別的週邊裝置.
內容大綱：
上集: 系統篇
1. 簡介需求與系統架構
2. 設計系統 
2-1. 導入libubootenv
2-2. 設計LightBar的kernel driver
3. 設計JNI library與API測試
下集: APK串聯篇
1. 設計一個JAVA base的demo APK
2. UI設計與JNI library串接技巧
3. SELinux安全性
4. Troubleshooting
=======
Hugging Face 可以說是 AI 模型的 GitHub。最早他們是為了解決自然語言模型的高難度和不相容而誕生的，到現在上面除了自然語言的開源 AI 模型外，還有有許許多多的開源 AI 模型。根據 Google 內部流出的文件指出，開源的 AI 模型很有可能主導接下來整個產業的發展。也因此 Hugging Face 的角色愈來愈重要。
本次演講是針對 Chatbot 入門新手而設計的，會帶大家使用 Hugging Face 上的自然語言處理模型，並且一步步示範串到 LINE 裡面，做成一個聊天機器人。
Hugging Face 可以說是開自然語言處理應用程式的寶庫，與閉源的 ChatGPT 不同的是，裡面提供了大量的開源的模型。大家可以很容易地從下載模型，並且訓練出自己的新模型。我會帶大家探索 Hugging Face ，並且一步步教大家如何串進 LINE 裡面，做成一個聊天機器人的應用。
=======
Your home server is safe?  Check yours to secure from DDOS!
There are tons of DDOS attacks on sshd, which run on the home server. Shunsuke will discuss the detailed attacks and their reasons, introduce how to implement measures actually, and tell its root cause.
=======
對於所有的開發團隊來說，如何在開發過程中管理測試伺服器一直都是一個棘手的問題，例如當同時開發的功能很多時，我們可能遇到測試伺服器數量不敷使用而必需等待的情況；我將分享如何省力且快速的使用 GitLab CI 加上既有的工具與範本，自動地為你的 Rails 專案中的每一個 Pull Request 建立獨立的測試環境，進而讓我們更專注於開發上。
基於 GitLab 對於 review apps 的定義，當一個專案具備 review app 時，將可以在每一個 Pull Request 上透過 CI 程式自動化地建立一個專屬的執行環境。
我們開發專案時，雖然會編寫自動化的測試，但實務上通常還是需要經過專案經理或是設計師的確認，一般的流程中，我們可能會有一或多個 staging server 並使用 Capistrano 之類的工具，由工程師手動將功能佈署到測試伺服器上，但當同時開發等待確認的功能較多的時候，可能就會需要等待空閒的 staging server 才能測試。
當我們可以透過 CI Pipeline 自動為 Pull Request 建立出獨立的 review app 環境後，就可以解決這樣的問題，並免去手動部署時可能產生的人為錯誤。
本次演講將是以小至中型的 Rails 開發團隊為目標，闡述如何省力且快速的為你的 Rails 專案建置自動化部署並建立從 review、staging 甚至 production App 環境的完整 CI script 流程與所需的全部工具，除了需要使用 GitLab CI 以外，對於基礎建設沒有任何偏好，可以實踐於所有的雲端服務提供者以及實體伺服器上，包含但不限於以下主題：
1. 何謂 Review App，它可以為你的專案帶來什麼好處？
1. 介紹基於 Docker Swarm 與 Traefik 的典型 Runtime Stack。
1. 快速並精簡地將你的 Rails 專案 Docker 化。
1. 使用預製的 CI script template，並講解如何應對你的需求進行客製與調整。
1. 常見問題與排除方式。
=======
Successful open-source software inspires many technologies. Young engineers or students will learn many things from existing REAL designs.
Unlike open-source software, VLSI design tasks are usually covered by NDA from fabrication companies and EDA tool vendors. It will prevent students to learn from existing designs.
We wanted to change the situation. For educational purposes,  we are trying to establish open VLSI fabrication methodologies.  The methods are based on scalable cell libraries and scalable layout rules. 
With our method, we have made VLSI chips with several fabrication processes which will not require NDA from the designing students. These chips use legacy technologies such as 2-micron, 1.2-micron, 600nm, 350nm, and 180nm. But we believe that adaptations to other finer technologies will not be difficult and the method will contribute to the students and startups to learn faster from existing designs and challenge their own new ideas on VLSI.
=======
Jupyter是一個集文件、編程及執行環境於一身的作業環境，可說是數據科學家們的最愛，在機器學習的領域中同樣活躍，但有沒有想過即使在風馬牛不相及的DevOps範疇中，Jupyter也能大放異彩呢？
圖像介面簡單易記，但難以處理複雜的自動化任務；指令介面則能勝任複雜任務卻難以使用。Jupyter正好集二者之所長，提供圖像介面來操作複雜的指令，自由地擴充，加入圖文說明，還能透過連結獲得更多資訊或功能。
你甚至可至不用費神學習相關的編程智識，因為一切都可以找ChatGPT幫你代勞。雖然現階段AI難以編寫過於複雜的代碼，但用Jupyter編寫的DevOps的操作台並不會有複雜的互動，正好是能讓AI大顯身手的場合。
講者將會分享如何在AI的輔助下把Jupyter客制成DevOps用的操作面板。
=======
本議程將引導您從網域和郵件設定開始，逐步建立一個完整的電子報訂閱與發送系統。我們將探討如何建立訂閱系統、如何比對唯一帳號、如何有效管理訂閱名單，以及如何設定開信追蹤、建立郵件發送範本、進行大量寄送以及避免退信等相關問題。
此議程以目前每月寄送的 COSCUP 電子報為例。由於 COSCUP 活動已不再需要報名，任何人都可以自由參加，因此需要建立一個電子報訂閱服務。而您可能會好奇為什麼要自行建立系統，而不使用現有的線上電子報發送服務。在此議程中，我們將詳細解釋這個問題。
備註：目前專案仍在整理中，預計在 COSCUP 2023 之前將專案公開。
- 技術佔比：60%（AWS SES、Python、Celery、RabbitMQ）
- 流程介紹：30%（訂閱、文案、郵件樣板製作、發送、名單維護）
- 小技巧：10%（開信追蹤、退訂處理等）
**How to Implement an Email Newsletter Subscription and Delivery System — A Case Study of COSCUP Newsletter Subscription**
This session will guide you through the process of creating a complete email newsletter subscription and delivery system, starting from domain and email configuration. We will cover topics such as building a subscription system, matching unique accounts, effectively managing subscription lists, setting up open tracking, creating email templates, conducting bulk sending, and preventing bounce-back issues.
We will use the monthly COSCUP newsletter as an example. Since COSCUP no longer requires registration and allows free participation, there is a need to establish an email newsletter subscription service. During this session, we will provide a detailed explanation of why it is important to build a custom system instead of using existing online newsletter delivery services.
Note: The project is currently being organized and is expected to be made publicly available before COSCUP 2023.
- Technology breakdown: 60% (AWS SES, Python, Celery, RabbitMQ)
- Process overview: 30% (subscription, content creation, email template design, delivery, list maintenance)
- Tips and tricks: 10% (open tracking, unsubscribe handling, etc.)
=======
在分散式計算的領域中，etcd 扮演著一個關鍵的角色，提供了一個可靠的分散式鍵值存儲系統。這個議程希望透過深入淺出的方式解析 etcd 的架構和探索其程式碼，為大家解開 etcd 的祕辛。
=======
In the past few decades, event-driven architecture has become a common design paradigm for developing high-performance network servers, as it can efficiently handle concurrent requests using I/O multiplexing. However, the mitigation mechanisms for microarchitectural vulnerabilities such as Spectre and Meltdown have increased the overhead of already system call-intensive situations. Moreover, the synchronous execution blocking feature of traditional system calls makes it difficult to leverage advanced multi-core processors. To address these limitations and identify performance bottlenecks, this session will gradually analyze the evolution of the Linux I/O model and clarify the runtime of applications such as Redis and KeyDB. As a way to overcome these limitations, this session will also demonstrate the implementation of a specialized core module that improves the performance of event-driven network servers through I/O offloading. Our approach does not sacrifice high power consumption or security like kernel bypass techniques in exchange for high-performance throughput and latency. Additionally, we have conducted multiple experiments to compare our method with native systems, and the results show that our method improves bandwidth, latency, and power consumption without requiring the redesign or reimplementation of the entire application.
在過去的數十年，事件驅動架構 (event-driven architecture) 已成為開發高性能網路伺服器的常見設計典範，因為它可以善用多工 I/O 處理並發請求。然而，像 Spectre 和 Meltdown 一類的微架構漏洞的修補機制讓原本已經系統呼叫密集的情況，額外提高開銷。此外，傳統系統呼叫的同步執行阻塞 (blocking) 特性使其難以利用最先進的多核處理器。為了解決這些限制並識別性能瓶頸，本議程將逐步分析 Linux I/O 模型的演進並釐清運行時的應用程式，例 Redis 與 KeyDB。作為克服這些限制的方法，本議程亦會展示一個特化核心模組的實現，透過 I/O offloading 機制提高了事件驅動網路伺服器的性能。我們的方法不會像 kernel bypass 技術那樣犧牲高功耗或安全性以換取吞吐量和延遲的高性能。此外，我們進行了多次實驗，將我們的方法與原生的系統進行比較，結果顯示我們的方法改善了頻寬、延遲和功耗，並且不需要重新設計或重新實現整個應用程式。
=======
In the session, I will tell you the story about taking over and collaborating the PHPBrew project and how to do that. And share our project development histories.
Our session topics are organized and they're as follows:
- Introduction (Who am I?)
- Survey (Have you heard or used PHPBrew?)
- Short introduction about the PHPBrew
- The past story of the PHPBrew. (The history of the PHPBrew)
- How do I become a collaborator?
- Some stories that I collaborate and contribute the project.
- Sharing some interesting issues when I tried to resolve.
- My experiences about resolving these issues.
- The future of the project. (Including new features and related projects)
- Focusing on us!
- Summary
- Getting started with using the PHPBrew to manage multiple PHP versions!
=======
你是否很好奇為什麼 PyCon Taiwan 要經營一個自己的 Podcast？
PyCast 是由 PyCon Taiwan 志工們共同製作的 Podcast 節目，有別於 Conference 的技術演講，PyCast 節目內容透過訪談的方式分享講者的個人故事和開源之旅並探索 Python 的世界。
本次將介紹 PyCast 的節目定位和獨特內容呈現方式，分享雙主持人模式以及非技術主持人如何打造精彩節目內容。同時，本場活動也將分享一集節目製作背後的工作流程，包含企劃的討論、錄音、後製、宣傳等流程。
藉著這場珍貴的社群交流活動，我們也會分享 PyCast 的願景與展望，並強力徵求社群合作機會，也歡迎參與者與我們現場互動和深入了解更多資訊。
我們的議程包含：
- 介紹 pycast 是什麼，節目定位，頻道歷程＆單集內容 highlight
- 介紹 pycast 的雙主持人模式，主持人的定位
- Python 主題如何轉化為節目內容的切入角度
- 說明節目製作流程、錄音設備 / 配置 
- PyCast 的未來願景規劃，徵求社群合作機會
- 現場 Q&A
=======
In this talk, I will introduce coreboot + LinuxBoot development on Intel Xeon-SP platforms. Presenting why and how for this more open source approach for the system firmware for our servers.
Proprietary closed-source system firmware has been if not the only or the main option for servers for a very long time, it hinders innovation, open collaboration and it isn't good for security. Our partners and we have been working on coreboot + LinuxBoot as our system firmware solution which provides a much better answer to the problems. In this talk, I will introduce why we chose this approach and how people can get familiar with it, benefit from it, and contribute to the community.
=======
相信各位大學生都有專題研究的經驗吧？
我猜也不少人都抱持著「反正我只要能過就好，不用太認真做啦」的這種心態吧？
但這樣真的好嗎🤔
我覺得這樣非常可惜，因為專題研究是大學時期中難得有自己發現、思考並解決問題的機會，無論你將來是否要繼續讀研究所，這個都是你一生必須具備的能力。
在這場議程中，我將會分享我從做專題研究、申請大專生研究計畫、參加比賽、寫論文、到出國參加研討會的心路歷程，希望能給正在做專題研究的大學生一點鼓勵💪
我的專題研究屬於自然語言處理 (NLP)，對自然語言處理感興趣的人也歡迎來聽~
專題認真做，出國不是夢！
=======
本議程將會介紹Google Cloud上開發應用程式常見的幾種方式，其中包含透過Dapr使應用程式能更容易在不同環境整合與移植。除此之外，會深入介紹透過Dapr來整合GCP上所提供的雲原生服務，包含Retry、Circuit breaker等特性。Dapr發展日益成熟，其對雲原生應用開發所帶來的效益也是顯而易見的，透過本議程除了可以讓開發者了解另一種雲原生開發方式與優點，更可以了解雲原生開發未來的發展趨勢。
Dapr(Distributed Application Runtime)是開源的分散式應用開發runtime，支援多種building blocks與多種雲端平台服務built-in components，其核心透過sidecar pattern實作服務整合層，將程式與third party service整合細節抽象至config，並且支援不同開發語言(Java, .NET, Python, and Go等)。
=======
在程式開發中，程式碼的可讀性和可維護性都是非常重要的。隨著專案的成長，程式碼的複雜度也會不斷增加，團隊成員之間的合作也會變得更加困難。為了解決這些問題，一些團隊開始採用 TypeScript 來改進他們的程式碼。在本演講中，將探討 JavaScript 專案程式碼經年累月的成長後可能遇到的問題、如何建立你的階段性拆解計畫
預計包含的內容有
- 大型 JS Codebase 成長後遇上的問題：這部分提到了大多數團隊可能會遇到的問題，包括 typo、忘記進行 null/undefined 檢查、文件不夠充足、JavaScript 中難以自動重構等。
- 如何進行遷移：這部分介紹了進行 TypeScript 遷移的策略和計劃，包括不限於 架構遷移順序建議、可用的工具
=======
The 5G O-RAN project is a groundbreaking initiative to revolutionize mobile networks through open and interoperable architectures. By eliminating vendor lock-in and embracing virtualization and intelligence, the project enables modular and flexible network deployments, seamless interoperability among diverse vendors, and optimizing network performance through advanced technologies like AI and machine learning. With the potential to enhance connectivity, speed, and efficiency, the 5G O-RAN project represents a transformative step towards a future of open and intelligent mobile networks.
The development of 5G O-RAN (Open Radio Access Network) has brought significant advancements in three key areas: O-DU (Open Distributed Unit), Near Real-Time RIC (RAN Intelligent Controller), and Fronthaul Interface security.
O-DU represents a fundamental component in the disaggregated architecture of 5G O-RAN. It refers to the distributed unit responsible for processing and forwarding wireless data in the radio access network. O-DU's development focuses on implementing open interfaces and protocols, enabling interoperability among different vendors' equipment. This approach promotes vendor diversity, reduces dependency on specific hardware, and fosters innovation by allowing network operators to mix and match components from various suppliers. O-DU development in 5G O-RAN brings increased flexibility, scalability, and cost efficiency to mobile networks.
Near Real-Time RIC is integral to the O-RAN architecture that facilitates intelligent and dynamic network management. It is a centralized controller responsible for orchestrating and optimizing resources in real time across the RAN. The development of Near Real-Time RIC leverages advanced technologies like AI, ML, and big data analytics to analyze network conditions, user demands, and service requirements. By making data-driven decisions and implementing automated optimizations, Near Real-Time RIC enhances network performance, reduces latency, and ensures efficient resource allocation. This development enables the network to adapt quickly to changing traffic patterns and deliver improved user experiences.
Fronthaul Interface security addresses the critical need for securing the communication links between the radio units (RU) and distributed units (DU) in 5G O-RAN deployments. Fronthaul interfaces carry sensitive and high-bandwidth data, requiring robust security mechanisms to protect against potential threats. The development of Fronthaul Interface security focuses on implementing encryption, authentication, and integrity mechanisms to safeguard data transmission between the RUs and DUs. By ensuring secure and trustworthy communication, this development enhances the overall security posture of 5G O-RAN networks, mitigating risks such as data interception, tampering, and unauthorized access.
Overall, the development of 5G O-RAN in O-DU, Near Real-Time RIC, and Fronthaul Interface security underscores the industry's commitment to fostering open, intelligent, and secure mobile networks. These advancements contribute to realizing the 5G vision, empowering operators with greater flexibility, efficiency, and agility to meet the diverse demands of a connected world.
=======
This presentation focuses on achieving high-speed packet forwarding using DPDK, SR-IOV, and Linux eBPF, while reducing resource consumption. The speaker will discuss separating the control and forwarding planes and designing a controller to handle routing and firewall functions. Topics covered include why Linux is used, how to process packets by DPDK, the control and forwarding planes, and how to verify the results. This presentation is applicable to data centers, IDCs, hosting, and edge networks.
在這個議程中，你將會了解如何透過 DPDK, SR-IOV 及 Linux eBPF 實現高速的封包轉發，同時降低資源消耗。此外，也會提到如何分離控制平面及轉發平面，並設計一個控制器來處理路由及防火牆功能。議程內容包含使用 Linux 作為路由器的起源、透過 DPDK 處理封包、控制平面及轉發平面，以及如何驗證結果。
=======
當你聽到 Firebase 的時候，是不是只有想到 Web 或是 Mobile 的應用？事實上，Firebase 還可以做得更多。
透過應用程式把 Firebase 視為後端即服務 (Backend as a Service) 的一環，將 Firebase 的相關服務作為你應用的延伸。
在這個 Session 中我們將會試著用一個 Adruino ESP32 的嵌入式環境平台，搭配 Firebase 的 Realtime Database，Firestore 等功能
，簡單的打造一個雲端家電控制服務。
=======
面對龐大的傳統系統，砍掉重練可能不是一個好的選項。這些系統帶來了許多挑戰，包括複雜的架構、數據同步的困難以及過去使用的主流語言所留下的遺跡。我們利用了Apache Kafka和Change Data Capture（CDC）來建立過去與現代之間的橋樑，將超過 30 年的傳統系統整合進現代技術環境。
我們會分享要實踐傳統系統的現代化轉型，需要仔細考慮的架構設計、數據一致性和容錯處理等關鍵因素。
Agenda
- Introduction Apache Kafka, Debezium...
- Legacy System: Mainframe, AIX System, COBOL...
- Modernizing Legacy Systems through CDC Pipelines & Apache Kafka
- Change Data Capture Event
- Summary
- Q & A
=======
An overview and retrospective of Google's efforts to empower semiconductor research using open source PDKs, software tools, and shared manufacturing.
HackMD 共筆：https://hackmd.io/@coscup/ryuYiKQs3/edit
=======
隨著數字資產的增長，私鑰以及合約錢包的安全性和恢復機制變得至關重要。我們將首先從本質探討 recovery 的機制設計，剖析以太坊私鑰和合約錢包控制權的恢復，這是確保數字資產安全的關鍵。了解這些機制的運作方式和設計原理對於選擇合適的恢復方法至關重要。
接下來，我們將比較現有的幾種恢復機制，包括傳統的中心化交易所、密碼學方法、代理人控制等。我們將討論每種方法的優點和限制，以及它們如何應對不同的安全和使用情境。
最後，我們將深入探討社會恢復機制，這是一種基於社會信任和分散的方法。社會恢復機制通過多個信任的社群成員來恢復對資產的控制權。我們將討論社會恢復機制的工作原理、實施方式以及相關的安全考慮因素。
這場演講旨在幫助聽眾更好地了解恢復機制的設計原則和現有方法，並專注於社會恢復機制的應用和潛力。通過深入研究和討論，我們將提供觀眾對於數字資產的安全性和恢復能力有更全面的理解，並促進更有效的恢復機制的發展。
=======
Flutter 是一個由 Google 開發的跨平台應用程式開發框架，讓開發者可以使用一套程式碼開發 iOS、Android、Web 和桌面應用程式。SonarQube 是著名開源程式碼檢測工具。隨著應用程式規模的不斷擴大，程式碼品質和安全性的重要性也日益凸顯，程式碼靜態掃描是安全程式開發工作第一步．本演講將介紹如何使用SonarQube來進行Flutter程式的靜態程式分析，以確保程式品質和可維護性。我們將深入探討SonarQube的工作原理以及如何配置SonarQube來掃描Flutter程式。此外，我們還會講解SonarQube如何提供即時反饋，並生成報告和指示，幫助開發團隊識別和解決潛在的程式問題。
Flutter is a cross-platform application development framework developed by Google, allowing developers to use a single codebase to develop applications for iOS, Android, Web, and desktop. SonarQube is a well-known open-source code analysis tool. As the scale of applications continues to expand, the importance of code quality and security becomes increasingly prominent, and static code scanning is the first step in secure software development. This talk will introduce how to use SonarQube for static code analysis of Flutter applications to ensure code quality and maintainability. We will delve into the working principles of SonarQube and how to configure it for scanning Flutter code. Additionally, we will discuss how SonarQube provides real-time feedback and generates reports and guidelines to help development teams identify and address potential code issues.
Flutter是一種先進的跨平台開發框架，讓開發人員能夠快速開發高品質的行動應用和網絡應用。然而，為了確保程式品質和可維護性，需要進行靜態程式分析。SonarQube是一個廣泛使用的開源平台，它可以通過分析程式，對程式品質進行靜態分析，並生成報告和指示。
在這個演講中，我們將介紹如何使用SonarQube來掃描Flutter程式，並提供有關程式品質和可維護性的寶貴信息。這包括程式複雜性、重複、覆蓋率、風格和其他程式品質指標。通過SonarQube，開發人員可以更好地理解他們的程式，並更快速地解決潛在的程式問題。
此外，我們還會介紹如何配置SonarQube來掃描Flutter程式，以及如何設置SonarQube以提供即時反饋。SonarQube不僅可以在每次程式提交時自動運行，還可以生成報告，幫助開發團隊更好地管理程式質量。最後，我們還會討論SonarQube的限制以及如何解決常見的問題。
總之，本演講將讓我們帶領觀眾深入了解如何使用SonarQube來提高Flutter程式的品質和可維護性，以便開發高品質的應用程式。
Flutter is an advanced cross-platform development framework that enables developers to rapidly create high-quality mobile and web applications. However, to ensure code quality and maintainability, static code analysis is necessary. SonarQube is a widely used open-source platform that performs static analysis of code to assess its quality and generates reports and guidelines.
In this presentation, we will demonstrate how to use SonarQube to scan Flutter code and provide valuable insights into code quality and maintainability. This includes metrics such as code complexity, duplication, coverage, style, and other code quality indicators. With SonarQube, developers can gain a better understanding of their codebase and swiftly address potential code issues.
Furthermore, we will cover the configuration of SonarQube for scanning Flutter code and setting up real-time feedback. SonarQube can automatically run on every code submission and generate reports to assist development teams in better managing code quality. Lastly, we will discuss limitations of SonarQube and strategies to tackle common challenges.
In summary, this presentation will provide valuable insights into leveraging SonarQube to enhance code quality and maintainability in Flutter applications, enabling the development of high-quality applications.
=======
近期發生非常多與學生相關的自治組織的積極參與者同時請辭事件，其中包含各校學生會、系學會等。其中大多為理事單位和監視單位理念不合無法合作導致。身為學生自治參與者及開放文化擁護者，我們希望能夠找到一個方法能夠讓學生自治組織在現代能夠以組織架構的角度重新思考，期望找出最適合學生組織的架構。
本次演講將探討如何撰寫一份開放分散式學生自治組織的白皮書。我們將介紹DAO（Decentralized Autonomous Organization）的基本概念，並針對學生自治組織的需求與挑戰進行分析。同時，我們會探討如何將DAO的原理應用於學生自治組織，提出具體的實施步驟與可能的風險及對策。我們的目標是通過這次演講，讓大家更加了解DAO的運作方式，以及它如何能夠用於提升學生自治組織的效率和透明度。
本次演講的主要內容將包括以下幾個部分：
1. **DAO與學生自治組織的概念介紹**：首先，我們會解釋DAO的基本原理，並介紹學生自治組織的工作內容與目標。
2. **學生自治的需求與挑戰**：接著，我們將討論現有學生自治組織面臨的問題，如決策不透明、參與度低等。
3. **如何將DAO的原理應用於學生自治組織**：在這個部分，我們將提出一個具體的模型，說明如何使用DAO的原理來改善學生自治的效率和透明度。
4. **實施步驟與風險對策**：最後，我們會提出一個實施計劃，包括技術需求、時間規劃、成本評估等，並討論可能的風險及對策。
期待透過這次的演講，讓參與者對於如何撰寫一份開放分散式學生自治組織的白皮書有更深入的理解與實際的操作方向。
=======
Releasing new versions can be challenging. Simply by adding metadata during the committing, we can aid release managers in understanding changes faster. With a standardized convention, we can even parse the well-formatted commits, and reduce manual effort in the process. In my talk, I will demonstrate how to accomplish this and automate the release process with the help of commitizen-tool.
Releasing new software versions can be a daunting task that requires attention to detail. Errors, such as forgetting to update the version in certain files or missing breaking changes in some commits, are common occurrences. Fortunately, these issues can be avoided by adding additional metadata when committing code changes. By establishing a standardized committing convention, the release manager can expedite the understanding of the changes and streamline the release process. In this presentation, I will demonstrate how to set up a commit message convention, and how it can help simplify the release process. Additionally, I'll introduce [commitizen-tools](https://github.com/commitizen-tools/commitizen) which can not only generate standardized messages but also automate tasks like version updates and changelog creation by extracting information from formatted commit messages. Ultimately, we'll even be able to automate the entire releasing process.
=======
去年以太坊網絡成功完成 The Merge 後，基本上我們已經可以宣布 PoS (Proof-Of-Stake)時代的到來
在這樣的背景下，LSD(Liquid Staking Derivatives)的項目也隨之而起，例如 Lido、Rocketpool 以及 Ankr 和 SSV 等協議在過去一年均有非常好的成長，此時有一種新的再質押的新協議 - Eigenlayer 開始興起，他們想透過質押進去 PoS 網絡的資產重新進行利用，並且以之作為其他協議中的抵押資產，以此保護以太坊的主網安全以及給予基於此協議的應用程序更大的安全保障，本次的議程將會探討這樣的協議在實作上的可能性，以及可能的擴展和存在的隱憂。
自去年以太坊網絡完成 the Merge 升級後，基本上我們已經可以宣布公有區塊鏈已經進入 PoS 時代的到來，PoS 將成為未來區塊鏈在設計出塊共識時最主流的方式。
在這樣的背景下，LSD(Liquid Staking Derivatives)的項目也隨之而起，例如 Lido、Rocketpool 以及 Ankr 和 SSV 等協議在過去一年均有非常好的成長，此時也開始有更多的協議，在探討如何將這些質押進去以太坊主網絡的 ETH 以及 LSD ETH 等為數龐大的資產進行再利用，其中最著名的是 Eigenlayer ，在白皮書還未公佈之際就已經廣受西方知名風投以及技術圈關注的 Eigenlayer，他們想透過質押進去 PoS 網絡的資產重新進行利用，並且以之作為其他基於 Eigenlayer 之上的協議的抵押資產，他們認為可以以此保護以太坊的主網安全，增加更多的資產加入 PoS 的質押，並且也能透過龐大的以太坊網絡去給予基於此協議建造的應用程序（例如 Layer2、預言機以及 Keeper等等） 更大的安全保障。
目前 Eigenlayer 正處於測試網階段，本次的議程將會探討這樣的協議的實作方式，以及這樣的實作上具不具有可行性，例如是否真的可以建造更安全的 Data Availability (DA)layer 以及這是不是實現模塊化區塊鏈的理想方式，最後會去探討這樣的協議是否存在著某些隱憂，例如協議可能的漏洞或者中心化風險等。
=======
生成式人工智慧 (Generative AI) 鋪天蓋地的進入我們的生活當中,裡面最關鍵的就是進行自然語言處理 (Natural Language Processing) 的大型語言模型 (Large Language Model/LLM)了! LLM動輒數億到上千億的參數量,對執行模型推論的設備所需投入的資金以及消耗的能源非常的可觀,也不是一般大眾可以負擔的起的. 把模型最佳化到可以運行在大家都可以四處取得的設備,尤其是Edge AI裝置,是AI民主化關鍵的推力.
Intel OpenVINO toolkit 以及Neural Network Compression Framework (NNCF), 不只提供了許多模型最佳化的演算法, 例如Quantization, Pruning, …等，也提供了讓這些最佳化後模型得以用最高效率執行的軟硬體環境．這一節我們將透過一些實例的分享，讓大家瞭解模型最佳化的威力,以及讓LLM執行在Edge AI設備的方法.
=======
This presentation will provide a brief update on what is Universal Payload Design (UPL), and most importantly the journey there: as the UPL is a cross-projects Firmware Industrial Standard for the first time ever, where Silicon vendors and firmware communities (EDK2, coreboot, U-Boot, LinuxBoot, Slim Bootloader) come together to work on common open specification. We will share the technical part of what UPL is, and the impacts it will bring to open source firmware industry. Then we will share the 1 year journey of how this came together and many roadblocks faced, it would be a valuable sharing for open system firmware community.
Most modern platforms rely on system firmware to initialize the hardware and launch an Operating System (OS). The system firmware is responsible for initializing the platform hardware including CPU and other silicon functional blocks, detecting and initializing the memory subsystem, boot media initialization and setting up hardware abstractions for use by the operating systems.
A design methodology of viewing system firmware functionality as made up of two distinct phases (Here and following, Platform Init and OS Loader) is gaining traction resulting in newer implementations of system firmware. This approach calls for modular phases with an initialization phase in firmware which completes the system initialization and gets the hardware to a usable state and then an OS Loader phase. The OS Loader can provide/implement many different functionalities including media and file system drivers, operating system boot, diagnostics, etc.
While certain system-firmware implementations combine both the initialization and OS boot logic in a single code base, the distinction lies in the functionality provided.
This specification describes an interface between the Platform Init phase that initializes the system hardware and the OS Loader phase. It includes how to format and pass parameters to the OS Loader, OS Loader image format, OS Loader boot mode and stack usage, register settings etc. The intent for this specification is to provide interoperability between spec-compliant Platform Init stage and spec compliant OS Loader stage.
=======
The emergence of generative AI with large language models has led to the creation of a highly efficient virtual assistant that integrates all AWS AI/ML services with OpenAI API or Hugging Face pre-trained models. This AI assistant is a serverless application that uses a simple static website hosted on Amazon S3 and fronted with Amazon CloudFront. It can respond to user queries via voice or text inputs and engages in continuous conversation with the host using Amazon Transcribe streaming in fully hands-free mode. Authentication is achieved through the use of an AWS API Gateway API key with usage plans, and conversations are saved in Amazon S3 for monitoring and assessment. The AI assistant also supports VR mode and the Awesome ChatGPT prompts integration. The system can be deployed using AWS CDK with just a few lines of commands.
In this session, we will explore the development of a highly efficient virtual assistant that integrates all AWS AI/ML services with OpenAI API or Hugging Face pre-trained models. We will discuss the architecture and design of the AWS AI assistant, which is a serverless application that uses a simple static website hosted on Amazon S3 and fronted with Amazon CloudFront. We will also delve into the authentication and usage limit of the AI assistant, which is achieved through the use of an AWS API Gateway API key with usage plans. Additionally, we will demonstrate how the AI assistant engages in continuous conversation with the host using Amazon Transcribe streaming in fully hands-free mode and supports VR mode. Finally, we will discuss how conversations are saved in Amazon S3 for monitoring and assessment and the deployment of the system using AWS CDK with just a few lines of commands.
=======
PostgreSQL is an open-source software RDBMS that is popular worldwide, and one of the main features of PostgreSQL is its extensibility. Extensions allow users to add functionality and customize PostgreSQL exactly as they want.  
When using PostgreSQL with extensions, you may have wondered how extensions work or wanted to develop your own extensions.  
In this talk, I will talk about how PostgreSQL extensions work and the first steps to start developing one. The target audience for this talk is anyone interested in PostgreSQL extensions or developing their own. I hope that this talk will be helpful for anyone who wants to get involved in the PostgreSQL development community.  Note: This is a revised version of my talk at the Database Society of Japan in 2022.
=======
Open source softwares built for social impact or research & sciences are an excellent representation of a WIP world. Especially from a design lens where contributions and iterations are complex. OS project teams may not always have the funds or the clarity to have design as a part of their toolkit, yet, designers continue to push the envelope, take responsibility to demonstrate and add value. In this talk, we hope to help a lot more designers do it better. Powerful design tools make it possible to support OS more easily than it was possible earlier. This talk will also throw light to the much needed conversation on designing in Open source which needs a wider audience.
Key takeaways: 
- Cultivating a purpose driven, and community mindset towards design
- Building sustainable design practices
- Designing beyond business benefits
- Understanding the OS space for a better collaboration with designers and other stakeholders
- Immediate resources for designers to contribute on OS post this talk!
Talk outline:
1. Our experience of designing for open source product - how we set up the project file, design system using other open source design systems.
2. Why to contribute - how it can make us better designers.
3. How to contribute to Open source projects - from finding the right project, picking issues to work on, committing changes and making it easy for the developer or the next designer to build on it.
4. How to get around the common challenges with contributing to OS.
5. How to nurture a language to demonstrate the value of Design in OS and collaborate with stakeholders - how we converted the project from seeing design as a partial task to having a seat at the table.
=======
在 2013 到 2023 十年之間陸續參加幾場開源、技術相關研討會，以及會後社群活動。
# 一邊分享照片，一邊思路拆解與討論
* 為什麼參加研討會或社群活動、目的性
* 研討會分類、規模、歐美亞洲活動方式比較、議程比較、攤位比較、贊助商比較
* 尬聊開場小技巧
* 英文是否重要？
* 場內與場外活動比例拿捏
* 旅費不足？一言不合就申請講者 + 分享申請公司差旅預算的技巧
# 預計涵蓋歐美亞三洲這六場活動
## 亞洲
* HKOSCon 2015 in Honk Kong (擺社群攤位) (直接開源)
* OSC Tokyo 2019, Japan (講者蝦委員長的外掛) (直接開源)
## 歐洲
* Embedded Linux Conference Europe 2017 & Open Source Summit Europe 2017 in Prague (會眾) (直接開源)
* Bluetooth Event & Working Group Summit, 2014 in Amsterdam, 2015 in Shanghai (論壇講者/panelist、國際規格制定) (開放規格)
## 美國
* Mozilla Summit 2013 in Santa Clara, CA, USA (講者) (直接開源)
* AWS re:Invent 2022 open source track, in Las Vega, USA (AWS Hero, 會眾, Community Leader Event) (間接開源)
## 備註
* 大部分擔任講者的場次，投影片或官方活動資訊整理在這裡：https://www.ernestchiang.com/zh/about/
預計藉由大量照片讓聽眾提高興趣，並帶出以下思路拆解與討論：
* 為什麼參加研討會或社群活動、目的性
* 研討會分類、規模、歐美亞洲活動方式比較、議程比較、攤位比較、贊助商比較
* 尬聊開場小技巧
* 英文是否重要？
* 場內與場外活動比例拿捏
* 旅費不足？一言不合就申請講者 + 分享申請公司差旅預算的技巧
* 場外旅行的部分預計只會簡單帶過（例如一點點美食照片），盡量將主題圍繞在研討會本身，讓聽眾將重點放在為什麼參與海外研討會、帶聽眾找出參與海外社群活動背後的目的性
=======
Kubernetes is one of powerful tools for container orchestration. 
In fact, it is really a matter of scheduling to manage container. 
Thus sometimes we should test and demonstrate what we thought to deploy properly working before we deploy in the product. 
However, mostly resource is limited to test it. 
Therefore, `KWOK`(Kubernetes WithOut Kubelet) is really helpful to deploy & schedule purpose.   
{https://github.com/kubernetes-sigs/kwok}
And furthermore if you could save the resource, it could archive for `Environmental Sustainability`
(https://github.com/cncf/tag-env-sustainability) as well!!!
So why don't you start from today? :)
=======
FHIR (Fast Healthcare Interoperability Resources) 是當代醫療資訊交換的關鍵標準，旨在促進健康資訊的互通性和整合性，以實現更高效和無縫的醫療病歷交換。探討成功的「FHIR 整合與推動」資料案例，整合了不同醫療資訊的資料，並採用FHIR標準建立了一個統一的病歷交換平台的優勢，探討了實現FHIR整合與推動所面臨的挑戰與解決方案。包括不同資料格式的轉換、隱私和安全風險、以及組織內部文化轉變等方面。將了有效的策略和工具，幫助醫療機構克服這些挑戰，推動FHIR的成功實施。總結了FHIR整合與推動在電子病歷交換中的關鍵作用。透過這個演講分享，聽眾將認識到FHIR標準對於促進醫療資訊互通和提升病歷交換效率的重要性。我們希望這些實踐經驗能夠啟發更多醫療機構積極採用FHIR，推動醫療資訊交換的普及，從而共同推進全球醫療服務的品質和效率提升。
=======
How many packages have you ever installed on your system? How many patches are you maintaining to bring up your project? In which directory hides the library missing on your labmate's machine?
The HPC cluster doesn't even have Docker, and you don't have permission to install the packages needed to run the code. Is there any way other than manually compiling them and their dependency trees to make it work?
Nix Flakes to the rescue!
In this session, let's introduce a workflow that establishes the development environment, automates the building and testing, and executes arbitrary programs with the single [Nix](https://nixos.org) binary and the [Nix Flakes](https://nixos.wiki/wiki/Flakes) configuration files.
We'll discuss the <language\>2nix projects integrating Nix and Programming-language-specific dependency managers taking Python as an example. We'll also talk about [dream2nix](https://github.com/nix-community/dream2nix), the attempt to unify all the <language\>2nix projects and a PoC of the next-generation Nixpkgs infrastructure.
---
還記得曾經在電腦上  `apt install` 、 `pip install` 過多少軟體包嗎？為了這個專案，已經幫 dependencies 加上多少 patch 了？現在程式到底是用哪邊安裝的函式庫，為什麼換到伺服器、同學的電腦上就抓不到函式庫了？HPC 伺服器上連 Docker 都不能裝，怎麼辦？
這次議程介紹如何透過 [Nix](https://nixos.org) 執行檔以及 [Nix Flakes](https://nixos.wiki/wiki/Flakes) 設定檔，不必依靠預裝程式或環境設定就能重建整個開發環境、指定要套用的 patches 、並自動化建置、測試。
另以 Python 開發環境為例，講述 Nix 與其他軟體包、專案管理器整合的現況。並介紹 [dream2nix](https://github.com/nix-community/dream2nix) 這項作為 Nixpkgs 未來架構的試金石，試圖一統所有 <language\>2nix 專案的嘗試。
[Nix](https://nixos.org) is a package manager capable of managing projects, configuring the whole operating system and even deploy server clusters. Beside packaging, it can also prepare a shell with those packages readily available ([`nix shell`](https://nixos.org/manual/nix/stable/command-ref/new-cli/nix3-shell.html)), the environment to build them ([`nix develop`](https://nixos.org/manual/nix/stable/command-ref/new-cli/nix3-develop.html)), and on-the-fly execution without installation ([`nix run`](https://nixos.org/manual/nix/stable/command-ref/new-cli/nix3-run.html)).
Nix comprises a domain-specific functional programming language ([Nix Language](https://nixos.org/manual/nix/stable/language/index.html)) and a hash-based package store. Almost all the factors that would influence the build result become function inputs, and the hash of their combination then determines the store paths of the package outputs. It therefore allows nearly arbitrary modification to the build process of an existing package to produce a new one, and two will not conflict against each other even when they share the same name and version or when they depends on different versions of the same library.
[Nixpkgs](https://github.com/NixOS/nixpkgs), the official Nix package repository, contains at least 80,000 packages and their prebuilt binary (binary substitutes). Users could use one directly and enjoy the binary substitutes, or override with the overriding functions that comes with the packages and have Nix build them locally. Nixpkgs also provides [functions for workflow-specific package building](https://nixos.org/manual/nixpkgs/stable/#part-builders), automating project building and testing.
Avoiding depending on top-level directories as it does, Nix used to require all the packages to place under `/nix/store`, which the Nix install script sets up with superuser privileges. At that time, unprivileged Nix users only have change the store path and loose all the binary substitutes. The [local chroot store](https://nixos.org/manual/nix/stable/command-ref/new-cli/nix3-help-stores.html#local-store) feature now allows mounting specified store directory to `/nix` inside a Linux user namespace, and statically compiled Nix binaries are possible. Unprivileged users can now use Nix portably with one single executable.
Packages with language-specific dependency lists, can be processed by corresponding <language\>2nix (e.g. [poetry2nix](https://github.com/nix-community/poetry2nix)) to generate the Nix expression automatically. The nix-based dependencies, such as Nixpkgs and <language\>2nix, are specified inside `flake.nix`, and their Git revisions recorded in `flake.lock` to ensure reproducibility.
This session will also discuss the current solutions and challenge to integrate existing language-specific dependency management the Nix ecosystem taking Python development environment as an example, and introduce [dream2nix](https://github.com/nix-community/dream2nix), an attempt to unify the <language\>2nix projects using the module-system-based package generation, a proposed future structure of Nixpkgs.
---
[Nix](https://nixos.org) 是一軟體包管理器，同時也能管理專案，部署作業系統甚至伺服器叢集。主要運行於 Linux 與 Mac 作業系統，同時也有 cross-compile 到 WASI 等平台的能力。除了建置軟體包外，也能直接準備一個能執行這些軟體的環境（ [`nix shell`](https://nixos.org/manual/nix/stable/command-ref/new-cli/nix3-shell.html) ）與建構這些軟體（ [`nix develop`](https://nixos.org/manual/nix/stable/command-ref/new-cli/nix3-develop.html) ），甚至免安裝執行（ [`nix run`](https://nixos.org/manual/nix/stable/command-ref/new-cli/nix3-run.html) ）。
藉由內建的純函數式的語言 [Nix Language](https://nixos.org/manual/nix/stable/language/index.html) 及由建置參數的 hash 定義軟體包路徑的架構，將各項影響到建置結果的因素都作為輸入值來產生軟體包的建置命令；使用者能自由套用 patch 、修改各項建置參數，不用擔心因為名稱相同或需要不同版本的函式庫而造成套件衝突。
Nix 官方的軟體包庫 [Nixpkgs](https://github.com/NixOS/nixpkgs) 當中有[八萬多個](https://repology.org/repository/nix_stable_23_05)軟體包，並透過 binary cache 提供預先編譯的版本。使用者能直接利用，或視需要以軟體包附帶的函數修改，於本地再編譯。Nixpkgs 當中也包含各種建置函式（ [builders](https://nixos.org/manual/nixpkgs/stable/#part-builders) ），簡化打包特定程式語言或框架的流程，能用以自動化專案編譯與測試。
以往 Nix 依賴於 `/nix` 目錄，要在一台電腦上使用 Nix ，必須先用 super user 權限執行官方提供的安裝腳本；或是退而求其次安裝於不同目錄下，而必須重新編譯所有用到的軟體包。現在， Nix 已經能夠靜態編譯成單一的執行檔，並將指定的目錄[掛接](https://nixos.org/manual/nix/stable/command-ref/new-cli/nix3-help-stores.html#local-store)到 Linux user namespaces 中的 `/nix` 目錄，一般使用者就能使用。
對於帶有依賴清單的專案， Nix 透過相應的 <language\>2nix 專案（例如 [poetry2nix](https://github.com/nix-community/poetry2nix) ），分析既有的設定並產生對應的 Nix expression 。使用到的各項 Nix 專案，則透過 flake.nix 來指定，並以程式產生的 flake.lock 確定每次重建專案時都連結到一樣的 Git revision 。
這次議程也將以 Python 開發環境為例，說明 Nix 生態系在整合其他程式語言本身的依賴管理系統上遇到的挑戰，曾經與目前有的方案，及 [dream2nix](https://github.com/nix-community/dream2nix) 這項以模組系統（ module system ）統合各種 <language\>2nix 專案的嘗試。
=======
你終究是要建立 Data Pipeline 的 ，所以你一開始就用 Pandas
你終究是要用 Pandas  ，那為什麼不一開始就加滿記憶體
你的預算終究不一定加的滿記憶體，那為什麼不一開始就用資料庫
你終究是要用資料庫，那為什麼不一開始就學 SQL
你終究是要學 SQL 的，那為什麼不一開始就用 DuckDB
給更好的自己，一個一直想要的資料庫 
聰明的，就懂
SQL作為一種歷史悠久且廣泛使用的資料庫語言，一直以來都扮演著重要的角色。然而，在Python中使用資料庫並不是一件容易的事。為了解決這個問題，Duckdb應運而生，它創建了一個簡單、快速且開放的資料庫解決方案。無論你在哪個 Python 環境中，"pip install duckdb" is all you need，就能輕鬆地使用一個具有 ACID保證的資料庫。
=======
在這次分享中，我將介紹如何使用Python的ORM進行資料庫存取和DB Schema版本控制的實作。ORM是一種讓我們可以以物件導向的方式操作資料庫的技術，省去直接撰寫SQL查詢語句的麻煩。
首先，我將重點介紹Python中的SQLAlchemy ORM框架，它提供了一套豐富的工具，使我們能夠輕鬆地建立資料模型、執行查詢和進行資料庫遷移等操作。
接下來，我將深入探討資料庫存取的不同情境。我將解釋如何建立資料模型類別，並將其映射到資料庫表格。我們將討論查詢、新增、更新和刪除資料的方法，以及處理複雜的查詢操作，如聯結和聚合。
除了資料庫存取，我還會討論DB Schema版本控制的實作。我將以III DevOps開源專案的實際案例來示範如何使用ORM和Alembic來進行資料庫模型的版本升級。這將確保用戶端的資料庫能自動且安全地完成升級程序，以確保與應用程式版本的一致性。
最後，我們將進行實作示範，展示如何使用Python ORM進行資料庫存取和版本控制。這些示範將讓您體驗到ORM的優勢，並幫助您思考如何在自己的專案中應用這項技術。
這個分享將提供實用的知識和技巧，適合資料庫開發人員、Python開發人員，以及對資料庫存取和版本控制有興趣的人參加。讓我們一起探索使用Python ORM進行資料庫存取和版本控制的實作！
本文介紹了Python的SQLAlchemy ORM和Alembic工具。首先，講解了SQLAlchemy作為Python中最著名和廣泛使用的ORM套件，並介紹了基於Flask的ORM套件Flask-SQLAlchemy，它在Web開發中提供了更方便的功能。
接下來，討論了ORM如何解決實際開發中的問題。使用ORM可以解決在不同數據庫之間切換時需要重新編寫相應的SQL語句的問題，同時可以簡化資料庫操作，提高可讀性和可維護性。然而，面對複雜的資料表關聯結構時，ORM可能會導致程式的可讀性下降，不易維護。為解決這個問題，可以將常用的程式邏輯封裝成通用函式，以提高代碼的重用性。
此外，詳細介紹了如何通過ORM與資料庫進行溝通，包括數據的創建、讀取、更新和刪除等操作，提高開發人員與資料庫之間的互動效率。
接著，討論了ORM的優點和缺點。ORM的優點包括提供安全性，簡化SQL語句，並具有通用性，可以減少在資料庫遷移時需要修改程式的情況。然而，ORM也存在一些缺點，如效能較低、學習曲線較高以及處理複雜查詢的能力較弱。為了解決這些缺點，可以進行效能優化、提供完善的學習資源和在需要時直接使用原生的SQL語句。
隨後，介紹了Alembic工具解決了實際開發中的問題。Alembic用於數據庫遷移和版本控制，能夠管理專案中數據庫結構的變化。為了解決版本號過多和效率問題，可以設定一個版本中繼點，並將中繼點之前的版本進行壓縮，以便更好地維護和管理。
最後會以將III Devops案例與Python Flask專案結合做為結尾，展示了如何使用ORM 建立數據庫和利用Alembic版本控制 的專案實作
=======
Lingualibre SignIt aims to create sign language dictionaries in various language pairs, in order to increase sign language competences within the general public.
Lingualibre SignIt Sign Language video dictionary
    Lingualibre's video recorder
    How to contribute signed words 
    How to support: github, communication, etc.
Lingua Libre SignIt add-on for Firefox is a demonstrator project which allows you to translate a (French) word into (French) sign language videos on any web page. When you read a text and come across a word you don't know, select that word, click on the SignIt icon: the sign in LSF and the definition of the word in French will appear on a window.
If a word is not available in LSF, user are provided an easy-to-use recording webapp to record that signed word. The definitions come from the French Wiktionary to which you can also contribute to.
Current demo use French and French Sign Language pair but the project is already ready to accept other language pairs.
=======
不可不知的 BARD 七個特色
- pin 跟 改動對話串名稱
- python 程式碼，除了 Colab 還可以輸出 replit
- 直接分享對話串
- prompt 可以直接用圖片
- 語音輸入及語音播放
- (可以)有圖片 — 規劃行程…
- (可以)手調回應的長短等
Live Demo 
- 線性迴歸預測
=======
隨著機器學習這幾年在各領域的蓬勃發展，AI 開發者們也逐漸想在 MCU 上運行 AI Model ，而 TinyML 社群因此孕育而生，匯集了 MCU/MPU 硬體、系統軟體、模型開發者、應用開發者來研討如何強化 ML 在 Tiny Devices 的各式機會。另一方面， AI Benchmark 的組織 MLCommons 也注意到 AI 開發者們在 Tiny Devices 上的需求，而開發了 MLPerf Tiny ，其為目前用來測量 AI on MCU 上最權威的 benchmark，AI developer在挑選 MCU 時，首重的就是 MLPerf Tiny 跑分的成績。Skymizer 在今年六月公佈的 MLPerf Tiny 上 ONNC 的跑分成績在所有的 benchmarks上，效能與記憶體使用量均優於 MicroTVM。我們使用了兩種不同的 MCU – STM 與新唐 – 搭上兩種不同的作業系統 Zephyr 與 mbedOS，在效能上達到 6%~33% 不等的優勢。
在本篇演講裡，我們會先介紹 TinyML 社群以及市場趨勢，再來介紹 Skymizer 參與 MLPerf Tiny 的經驗、與 ONNC 如何以編譯器的角度來優化 AI Model 在硬體上運行的效能。
=======
VulcanSQL (https://vulcansql.com/) 是個開源的 Data API 框架，讓 data analysts 不需要具備後端開發經驗，只需要 templated SQL 的撰寫能力，就可以把 data warehouse 中的資料轉成可共享給其他團隊使用的 API
VulcanSQL - https://vulcansql.com/
## What is VulcanSQL
VulcanSQL 是個開源的 Data API 框架，讓 data analysts 不需要具備後端開發經驗，只撰寫需要 templated SQL ，VulcanSQL 提供如同 data analysts 習慣的 dbt (https://www.getdbt.com/) 使用經驗，在資料轉換後，即時的產出 Data API 讓資料共享上更容易
## Why VulcanSQL
在我目前任職的公司 Canner，我們接觸到很多公司的 data analysts，在討論到資料共享時，例如 Data Team 想要把資料分享給 Marketing Team 做使用，Marketing Team 可能希望可以串接到外部服務做自動化的廣告推送，但 Data Team 總不能讓外部服務直接串接到內部的 Data warehouse 吧 ? 此時就會需要開發 API，但 API 的開發對於多數專精於 SQL 的 Data Team 並不是擅長的事情，API 應該怎麼開 ? 變數應該怎麼開，又該擺在 query 還是 body ? 權限控管又該怎麼處理 ?
VulcanSQL 提供 Data Analysts 快速搭建 Data API 的框架，只需要會 SQL，就可以開出最佳實踐的 API，讓資料共享，讓 data warehouse 更自動化的串接外部服務，都不是困難事
=======
C++11之後，標準委員會多次強化了template的功能，導入了varadic pack, auto, fold expression等語法，大大提昇了STL的應用範圍。本議程將會導讀boost library中的hana，並講解這些功能的可能應用。內容包括了hana type computation的概念，也就是如何在C++中對class本身進行運算；以及hana struct，讓使用者對自己寫的class加上更多資訊，讓compiler得以運用這些資訊展開struct，降低我們需要寫的程式碼數量。
在資料處理，如轉換文字以及C++ struct的時候(yaml, argparse, json, protobuf)，這樣struct展開相當有用，作者自己也拿相同技術運用在硬體開發中的Verilog的輸出資料分析。傳統上高階語言如Python由於弱型別特性，此類應用場景使用起來會比C++等很強型別簡易許多。然而有了這樣的技術之後，我們便能享受到C++的效率以及高階語言的好用性。
本議程包含了示範環節，在示範環節中，我們將會用20行程式碼實現上述hana boost最核心精神，示範將你的C++任意的struct，僅僅補上一行code，就能同時搖身一變成為json printer以及argument parser。且要同時達到這兩個功能，完全不需要任何的一次性(write-only)程式碼，我們也將會解釋前面提到的搖身一變的魔法，也就是如何寫一個header file，就能告訴標準compiler自動用template展開幫你寫出printer/parser內部的內容。而且完完全全不需要使用到一般的 JSON 或是 argument parser library（喔對了，當然也不是用chatgpt）。
這是「20行程式碼實現上述hana boost最核心精神」中，我會用到的範例 source code
https://github.com/johnjohnlin/namedtuple
裡面將會提及JSON, argument parser的實做。至於為什麼叫做namedtuple，這是因為其概念跟Python的namedtuple一樣。在C++11我們可以透過tuple.get<N>()這樣的API來取得tuple的第N元素，也能用recursive或是fold expression在compile展開，也可以透過overload讓不同型別的展開有不同的實做。然而跟Python有完全一樣的問題，tuple[N]這樣的語法擴展性極差，因此namedtuple將struct的每個member標記上兩個功能 get<N>()＆get_string<N>() 回傳字串名稱，讓compiler可以用這兩者去展開出需要的程式碼。
技術細節上，為了讓程式更簡潔，namedtuple使用了「C++17 編譯期字串 string_view，fold expression」以及「C++14 自動回傳型別實做」，程式的自動展開用到了boost的preprocessor。
=======
帶領大家一起了解，在區塊鏈世界裡面的詐騙手法與方法，虛擬貨幣的詐騙非常盛行，原因是一但被詐騙想要再將錢拿回來的可能性非常低，而且求助無門！！所以預防勝於治療！！
將解密Web3 DAPP上面的詐騙手法:
1.web3都怎麼詐騙？手法是什麼？
2.web3的詐騙機制是怎麼做的?
3.我們可以如何破解web3上面的詐騙問題，並保護自己?
帶領大家一起了解，在區塊鏈世界裡面的詐騙手法與方法，虛擬貨幣的詐騙非常盛行，原因是一但被詐騙想要再將錢拿回來的可能性非常低，而且求助無門!!
希望透過了解Dapp 互動，可以更好的防護被詐騙的風險
=======
Keelung is a Domain-Specific Language (DSL) developed by BTQ for building zero-knowledge proof (ZKP). It's built so developers can build ZK applications without related underlying cryptography knowledge. Since Keelung is embeded in Haskell, we can make use of existing Haskell features and toolchain without introducing another set of tools.
Keelung is a Domain-Specific Language (DSL) developed by BTQ for building zero-knowledge proof (ZKP). It's built so developers can build ZK applications without related underlying cryptography knowledge. Since Keelung is embeded in Haskell, we can make use of existing Haskell features and toolchain without introducing another set of tools.
This talk will cover:
* What is ZKP and its application
* Why we need a programming language for it
* The relation between existing languages and Keelung
* Simple demos in Haskell and Keelung
* (Optional) Proof system like Groth16, Plonk and how Keelung compiles to their constraint system (e.g. R1CS)
* (Optional) Complex demo in Keelung (e.g. ECDSA)
Keelung documentation at: https://btq.gitbook.io/keelung/
BTQ official website: https://www.btq.com/
=======
Accio 是一個 Canner 所推出的開源工具，它提供了一種類似 GraphQL 的方式來定義資料庫中的數據模型。使用 Accio，您可以定義 model、relationship、metric 並使用類似 GraphQL 的語法來描述它們之間的關係和查詢方式。Accio 會解析您的定義並生成對應的 SQL 語句，以便您在實際查詢時使用。Accio 使用 PostgreSQL 的 Wire Protocol 作為接口，目前支援 BigQuery。這意味著您可以使用常用的 PostgreSQL 驅動程式來直接對 BigQuery 進行 SQL 查詢並且使用 Accio 定義 BigQuery 數據模型。
總體來說，Accio 提供了一個方便的方法來定義數據模型和查詢，使得操作數據庫變得更加容易和直觀。
=======
An overview of Google's investment in Taiwan and the open source community.
=======
In recent trends, websites and softwares often focus on visual beauty and fancy UX rather than the basic human rights requirements such as accessibility and security. This session will cover how developers and designers can use progressive enhancement and other measures to ensure their products are accessible and privacy centric. It will also cover means for designers and developers to have better communication so that the designs don't get lost in translation by developers.
The talk is going to cover the following things:
- Who are the users of the web, what different assistive technologies they use, what are the different privacy needs
- How to use progressive enhancement to create accessible & privacy centric websites
- How to convert designs into products properly
- User testing and audits
=======
在區塊鏈上的程式執行通常是一次性的，因此想要實現週期性（cron）或條件性（IFTTT）的自動化任務，通常會需要提供經濟誘因或者借助外部服務。常見的自動任務執行 SaaS 包括 Gelato Network、Chainlink Automation、OZ Autotask 等，但我們必須認知到這些服務並不承諾任務總是如預期執行，而且區塊鏈共用計算資源的本質也讓保證執行不可能達成。因此，對於關鍵服務，區塊鏈工程師常會設計出和業務邏輯高度耦合（無誤）的自動化方案，確保事務運作者和程式/協議本身的利益一致。這場講座將分析區塊鏈任務自動化的常見設計模式，需要權衡利弊的面向，並介紹幾個值得參考的最佳實踐。
=======
因服務桃園RCA工傷事件而來到桃園，因而開始由桃園勞工故事開始進而認識桃園的在地故事，也開始深入桃園在地議題， 2020年更開始與在地的伙伴組成桃托邦藝文聯盟，希望透過協會的力量，捲動更多的人一同思考關於自己和這片土地的關係，透過藝術帶大家了解桃園的故事，更進而思考在快速發展的桃園我們想要的生活與城市該是什麼樣子？
=======
FreeBSD 為開放原始碼的類 Unix 作業系統，運用在多個領域像是伺服器、防火牆、路由器等，擁有廣大的開源社群，其中在台灣就有 FreeBSD Taiwan，此議程將簡單的介紹 FreeBSD，以及我在 FreeBSD Taiwan 實習所做的事情跟心得，讓聽者了解 FreeBSD 社群怎麼運作的、在開源社群實習是什麼樣的體驗以及能學到什麼東西。
議程流程如下:
1. 介紹 FreeBSD and our community
     先讓聽者了解此作業系統，還有介紹我們 FreeBSD 社群，平常在討論什麼，會做什麼事情等，也會介紹一下 FreeBSD core team 等。
2. 我在 FreeBSD 所做的事情
    a. FreeBSD document editing，介紹我如何藉由修改文件，學習作業系統的知識，講者可以了解到 FreeBSD 文件是怎麼運作，開發者可以怎麼修改文件、翻譯文件。
    b. Document online editor，介紹我怎麼開發此文件編輯器，提昇編輯文件的效率，也可以藉此當例子，讓講者了解到怎麼樣貢獻給開源社群，在這之中學到什麼東西。
    c. Writing test for FreeBSD，介紹我怎麼幫 FreeBSD 寫測試，這屬於比較深入的貢獻方法，貢獻原始碼，讓一些比較有作業系統經驗的聽者有實際的例子了解是怎麼貢獻程式碼以及我學到的東西。
3. 實習心得
    最後總結，我在這接近一年實習的心得，以及學到的東西，鼓勵任何想要參與此社群的朋友加入，我們也在招實習生，歡迎任何學生加入。
=======
透過介接高雄市農業局的農來訊系統，只要輸入地區與作物，我們就可以動態的產生一份完整的「作物防災報告書」。「作物防災報告書」包含：作物防災告警、生產管理建議、作物生育期查詢。因此，我們就可以針對作物進行相關的防範與找到應對的解決方案。
在農來訊的基礎上，我們透過介接ChatGPT，可生成更多的解決方案並預測未來的變化，透過處理，可在線上即時產生預測圖形。農民可將ChatGPT生成的各種解決方案儲存在資料庫中，即具備有面對過去、現在、未來的各種強大解決方案來面對氣候變遷造成的災損。農來訊 X ChatGPT，可影響的作物種類有60種以上、影響範圍20縣市、資料更新為動態，預測資料來源為全球。
=======
本議程將簡介開放基站架構 (O-RAN)，同時介紹實現 AI/ML Cloud Native O-RAN 相關的網路功能 (NFs) 和組件 (Components)。
除此之外，本議程也將講解 O-Cloud 平台自動化管理與編排的開源工具 (Nephio)。
Nephio 是基於 Kubernetes 的雲原生自動化管理工具，以雲原生的方法配置底層雲基礎設施 (NF Infra)，以及用於 O-Cloud 平台的 NF Deployment 和 NF LCM，用以實現 RAN 的 Intent-Based Networking (IBN) 意圖自動化部屬，和零接觸管理 Zero touch network and Service Management (ZSM)，來提高電信服務可靠性和運營敏捷性 ，同時降低電信基礎設施的維運成本。
希望能透過本次演講的分享，鼓勵更多有志青年投入開放基站開源軟體的開發。
非動手做議程
=======
Patents problems faced by Open-Source Projects and Companies
Open Source Projects and Companies across the globe do not file for patents or believe in filing patents.
However Open Source projects and Companies have been easy targets of Operating Companies and Non Practising Entities (NPE).
Open Source Projects and Companies are easy targets for Operating Companies and Non Practising Entities as they lack a defensive Strategy as well as they do not have financial capacity to defend themselves from Non Practicing Entities.
Non Practicing Entities and Operating Entities exploit this lack of resources and understanding of the Patent Regime and send notice of  Patent Infringement or Litigate.
Discussion of Defensive Patent Strategy for Open-Source Projects and Companies.
A. Discussion about Open Invention Network
Open Invention Network a global community protects the Open Source and Linux ecosystem from Patent Tension.
Members of the Open Invention Network gets a Global Patent Tension Free Ecosystem.
Joining Open Invention Network (OIN) is free for everyone. 
Presently OIN has 4000 plus members.
3885 plus software and Applications are protected by the community.
Unified Patents.
Unified Patents has created an Open Source Zone and is supported by Open Invention Network.
Unified Patents files cases against Patent Trolls/ NPE thus reducing the risk of Patent tension in the Open Source Ecosystem.
Best Practices to Mitigate Patent Risk 
Defensive Publication.
Case Study of Patent Litigation against Open Source Community
Case Study of Patent Litigation against Open-Source Company.
 
Defensive Patent Strategy
Best Practices to Mitigate Patent Risk
Patents problems faced by Open-Source Projects and Companies.
Patent Risk from Operating Entities and Non Practicing Entities ( NPE)
Defensive Patent Strategy
Open Invention Network Community
Unfied Patents - Open Source Zone
Best Practices to Mitigate Patent Risk
Case Study of Patent Litigation against Open Source Community and Company.
=======
有幸成為 2022 中央大學新生知訊網程式組一員，進行一個網站的團隊開發。
由於並不是所有的人都是經驗豐富的寫扣專家，在死線的壓力下無法同時寫網站又寫 test ，但是又想引進 CI/CD 怎麼辦? 沒關係，我們有工人智慧CI。你將會在這個短講中聽到我是如何使用 gitlab-ci 結合 docker 服務產生一個用人工CI的環境。
中央大學新生知訊網是個團隊專案，在程式組的組員裡有形形色色的人，有的有多年程式經驗，有的則完全沒有寫過程式。這次的專案想要引進 CI 並可以自動在 docker 上面部屬但是由於有從未碰過程式或是程式經驗較少的組員，不可能在死線前把專案寫好的同時又把 test 寫好。因此我善用 gitlab 的 Pipeline，Runner 與 docker 的 docker in docker，nginx proxy manager 和 docker compose 等功能製作出一個可以在 程式碼被 push 到 gitlab 的時候產生一個可以直接連線的網站，讓開發者可以自己用自己的雙手去進行工人智慧CI，在此同時也讓PM們知道功能做到哪裡，有沒有與自己想像的一樣。
本短講會重點描述身為一個學生，如何在沒有任何的 test 的情況使用各種工具讓開法者可以自己手動進行 test，又從中遇到甚麼困難與他的解決方式。
=======
高雄持續發展農來訊，今年更將臺灣氣候變遷推估資訊與調適知識平台建立的1981年到2020年共40年，全台2公里正方的9,279個網格，包含高、低、均溫、雨量及日射量近7億筆氣候資料作為基礎，並建立上百項作物生育日數，搭配農來訊作物防災及生產管理相關專家系統，讓使用者只要選擇作物，起始日期跟種植位置，AI就能以40年的氣候資料演算，提供日射量與溫度的生長期程預測，以及生產期間遭遇災害的風險，能容易比較不同種植地點、日期對作物的影響，搭配預測收入的「大智莊稼」，更能讓作物生產更精準、更智慧！
而有關作物生育日數，防災告警門檻及生產管理注意事項及名詞關聯等，都以API方式公開介接使用。
=======
在資料密集的大型企業中，Airflow經常可以作為ETL排程的工作調度引擎，透過Airflow提供的各種Operator，可以讓我們彈性與自由的撰寫各種基於Python或各種語言的工作(Task)，並以DAG定義工作的上下游關係，將資料整理成有用的知識進行AI相關的服務。然而，在一個專注於結構化資料處理的資料科學團隊中，過於彈性與自由的框架反而讓團隊增加了許多維運、溝通與程式碼傳承上的成本。為了解決這個問題，Jeffrey在玉山銀行的智能金融處，開發了一個基於Airflow的ETL框架，讓身處巨量結構化資料中的資料科學家們，可以更簡易的進行規格化的ETL開發，並能夠於其中專注於業務邏輯：包含1) 資料表的欄位定義、2) 驗證邏輯撰寫與3) 轉換邏輯(Transformatioin)的函數撰寫與編排，ETL框架可以自動將以上元素串接上Airflow，並在Airflow UI上可以簡單地檢視這些元素。
ETL框架在玉山銀行智能金融處，以Airflow這個開源框架作為核心進行開發的，其中以Airflow的Python Operator、Task Group作為底層調度工作的核心元件，並實作出Operation這個抽象類別作為單一接口供開發者實作ETL過程中，各個Transformation單元的轉換函式與輸入與輸出資料表的撰寫。每個繼承Operation的單元可以像積木一樣進行組合成一成一個更大的業務邏輯單元。Jeffrey會對ETL框架的使用方式、ETL框架底層運作機制與程式架構的方式進行介紹，藉此聽眾們可以一窺Airflow於ETL的常見套路。
=======
如何克服技術上的挑戰，讓開放原始碼軟體能夠，更容易地進行中文化，例如翻譯校閱流程、語意品質維持、語言檔的管理等。
如何開始中文化專案的準備，與數位部合作的中文化專案：GOV.UK Notify、GOV.UK Forms、IRMA、Element Series、Standard for Public code。各專案對於中文化架構都面對到不同的處理方式，各專案的調整、翻譯平台 Weblate 的建立、翻譯流程、校閱流程的建立，到最後需要實際畫面檢查的方式，都會在議程中分享。
備註：本議題由開放文化基金會 — 軟體中文化專案成員、譯者、校閱者共講。
How to overcome technical challenges to make open-source software more easily adaptable for Chinese localization, including translation and proofreading processes, maintaining semantic quality, and managing language files.
How to initiate the preparation for Chinese localization projects and collaborate with the digital team on various Chinese localization projects, such as GOV.UK Notify, GOV.UK Forms, IRMA, Element Series, and Standard for Public code. Each project may require different approaches to Chinese localization architecture, adjustments, setting up the translation platform Weblate, establishing translation and proofreading processes, and eventually conducting actual screen inspections, which will all be shared during the session.
Note: This topic will be presented collectively by members, translators, and proofreaders of the Open Culture Foundation - Software Localization Project.
=======
